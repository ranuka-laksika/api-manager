{"version":3,"file":"DeferredAPIs.e6e45864af8c21067201.bundle.js","mappings":"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","sources":["webpack://@wso2apim/publisher/./source/src/app/components/Apis/Listing/components/ImageGenerator/APICards/DocThumbClassic.jsx","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Listing/components/ImageGenerator/APICards/DocThumbPlain.jsx","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Listing/components/ImageGenerator/DocThumb.jsx","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Listing/components/TopMenu.jsx","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Listing/SampleAPI/SampleAPIProduct.jsx","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Listing/components/ImageGenerator/APICards/DefThumbClassic.jsx","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Listing/components/ImageGenerator/APICards/DefThumbPlain.jsx","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Listing/components/ImageGenerator/DefThumb.jsx","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Listing/TableView/TableView.jsx","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Listing/Listing.jsx","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Create/CreateAPIWithAI/components/ApiChatBanner.tsx","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Create/CreateAPIWithAI/components/TextInput/TextInput.jsx","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Create/CreateAPIWithAI/components/ApiChatExecute.tsx","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Create/CreateAPIWithAI/components/CustomizedAccordions.tsx","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Create/CreateAPIWithAI/components/ApiChatResponse.tsx","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Create/CreateAPIWithAI/components/SampleQueryCard.tsx","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Create/CreateAPIWithAI/components/swaggerUIChatbot/swagger-ui-overrides.css?7ea2","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Create/CreateAPIWithAI/components/swaggerUIChatbot/SwaggerUI.jsx","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Create/CreateAPIWithAI/components/DisplayCode.tsx","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Create/CreateAPIWithAI/components/AlertDialog.tsx","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Create/CreateAPIWithAI/components/WelcomeMessage.tsx","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Create/CreateAPIWithAI/components/LoadingDots.tsx","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Create/CreateAPIWithAI/components/SimilaritySearch.js","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Create/CreateAPIWithAI/APICreateWithAI.jsx","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Apis.jsx","webpack://@wso2apim/publisher/./source/src/app/components/Shared/MCPRouteGuard.jsx","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Create/CreateAPIWithAI/components/swaggerUIChatbot/swagger-ui-overrides.css"],"sourcesContent":["/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport { styled } from '@mui/material/styles';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Typography from '@mui/material/Typography';\nimport Chip from '@mui/material/Chip';\nimport Tooltip from '@mui/material/Tooltip';\nimport { Box, Divider } from '@mui/material';\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\nimport { FormattedMessage } from 'react-intl';\nimport LetterGenerator from 'AppComponents/Apis/Listing/components/ImageGenerator/LetterGenerator';\nimport { getBasePath } from 'AppComponents/Shared/Utils';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport Utils from 'AppData/Utils';\n\nconst PREFIX = 'DocThumbClassic';\n\nconst classes = {\n    card: `${PREFIX}-card`,\n    apiDetails: `${PREFIX}-apiDetails`,\n    apiActions: `${PREFIX}-apiActions`,\n    thumbHeader: `${PREFIX}-thumbHeader`,\n    textTruncate: `${PREFIX}-textTruncate`,\n    row: `${PREFIX}-row`,\n    textWrapper: `${PREFIX}-textWrapper`,\n    chip: `${PREFIX}-chip`,\n    suppressLinkStyles: `${PREFIX}-suppressLinkStyles`,\n};\n\nconst StyledCard = styled(Card)(({ theme }) => ({\n    [`&.${classes.card}`]: {\n        width: '300px',\n        height: 'fit-content',\n        margin: theme.spacing(1),\n        borderRadius: theme.spacing(1),\n        transition: 'box-shadow 0.3s ease-in-out',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n\n    [`& .${classes.apiDetails}`]: {\n        padding: theme.spacing(1.5),\n        paddingBottom: 0,\n        gap: theme.spacing(2),\n        display: 'flex',\n        flex: 1,\n    },\n\n    [`& .${classes.apiActions}`]: {\n        justifyContent: 'space-between',\n        padding: `8px 12px ${theme.spacing(1)} 12px`,\n    },\n\n    [`& .${classes.thumbHeader}`]: {\n        color: theme.palette.text.primary,\n        cursor: 'pointer',\n        fontWeight: 600,\n        lineHeight: '1.3',\n    },\n\n    [`& .${classes.textTruncate}`]: {\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n    },\n\n    [`& .${classes.row}`]: {\n        display: 'flex',\n        gap: '8px',\n    },\n\n    [`& .${classes.textWrapper}`]: {\n        color: theme.palette.text.secondary,\n        textDecoration: 'none',\n    },\n\n    [`& .${classes.chip}`]: {\n        height: 20,\n        borderRadius: 4,\n        backgroundColor: '#eef3f9ff',\n        overflow: 'hidden',\n    },\n\n    [`& .${classes.suppressLinkStyles}`]: {\n        textDecoration: 'none',\n        color: 'inherit',\n    },\n}));\n\nconst DocThumbClassic = (props) => {\n    const { doc } = props;\n    const [isHover, setIsHover] = useState(false);\n\n    let apiNameLabel = 'API Name';\n    if (doc.associatedType === 'APIProduct') {\n        apiNameLabel = 'API Product Name';\n    } else if (doc.associatedType === 'MCP') {\n        apiNameLabel = 'MCP Name';\n    }\n\n    const toggleMouseOver = (event) => {\n        setIsHover(event.type === 'mouseover');\n    };\n\n    const linkTo = getBasePath(doc.associatedType) + doc.apiUUID + '/documents/' + doc.id + '/details';\n\n    return (\n        <StyledCard\n            onMouseOver={toggleMouseOver}\n            onFocus={toggleMouseOver}\n            onMouseOut={toggleMouseOver}\n            onBlur={toggleMouseOver}\n            elevation={isHover ? 4 : 1}\n            className={classes.card}\n            data-testid={'doc-card-' + doc.name}\n        >\n            <Link to={linkTo} className={classes.suppressLinkStyles}>\n                <CardContent className={classes.apiDetails} style={{ padding: '12px' }}>\n                    <div\n                        style={{\n                            position: 'relative',\n                            width: 100,\n                            height: 100,\n                        }}\n                    >\n                        <CardMedia\n                            width={100}\n                            component={LetterGenerator}\n                            height={100}\n                            title='Thumbnail'\n                            artifact={{ name: 'Doc' }}\n                            charLength={3}\n                            customLightColor='#366FB1'\n                            customDarkColor='#032E61'\n                            ThumbIcon={(iconProps) => (\n                                <CustomIcon icon='documentation' width={40} height={40} {...iconProps} />\n                            )}\n                        />\n                    </div>\n                    <div style={{ flex: 1, overflow: 'hidden' }}>\n                        <div className={classes.textWrapper}>\n                            <Tooltip title={doc.name} arrow>\n                                <Typography variant='h6' className={classes.thumbHeader} id={doc.name} noWrap>\n                                    {doc.name}\n                                </Typography>\n                            </Tooltip>\n                        </div>\n                        <div className={classes.row}>\n                            <Typography variant='caption' gutterBottom align='left' noWrap>\n                                <FormattedMessage id='by' defaultMessage='By' />\n                                &nbsp;\n                                <Tooltip title={doc.apiProvider} arrow>\n                                    <span>{doc.apiProvider}</span>\n                                </Tooltip>\n                            </Typography>\n                        </div>\n                        <div className={classes.row}>\n                            <div style={{ display: 'flex', flexDirection: 'column', flex: 0.65, overflow: 'hidden' }}>\n                                <Tooltip title={doc.apiName} arrow>\n                                    <Typography variant='body1' noWrap>\n                                        {doc.apiDisplayName || doc.apiName}\n                                    </Typography>\n                                </Tooltip>\n                                <Typography variant='caption' component='p' color='text.disabled' lineHeight={1}>\n                                    {apiNameLabel}\n                                </Typography>\n                            </div>\n\n                            <div style={{ display: 'flex', flexDirection: 'column', flex: 0.35, overflow: 'hidden' }}>\n                                <Tooltip title={doc.apiVersion} arrow>\n                                    <Typography variant='body1' noWrap>\n                                        {doc.apiVersion}\n                                    </Typography>\n                                </Tooltip>\n                                <Typography variant='caption' component='p' color='text.disabled' lineHeight={1}>\n                                    Version\n                                </Typography>\n                            </div>\n                        </div>\n                        <div className={classes.row} style={{ marginTop: '8px' }}>\n                            <Chip\n                                size='small'\n                                classes={{ root: classes.chip }}\n                                label='DOCUMENT'\n                                color='primary'\n                                variant='outlined'\n                            />\n                        </div>\n                    </div>\n                </CardContent>\n            </Link>\n            <Divider sx={{ marginLeft: 1.5, marginRight: 1.5 }} />\n            <CardActions className={classes.apiActions}>\n                <Box\n                    display='flex'\n                    alignItems='center'\n                    gap={0.5}\n                    sx={{ marginTop: '8px', marginBottom: '8px' }}\n                >\n                    <AccessTimeIcon fontSize='small' sx={{ color: 'text.disabled' }} />\n                    <Typography variant='caption' color='textSecondary'>\n                        {Utils.formatUpdatedTime(doc.updatedTime)}\n                    </Typography>\n                </Box>\n            </CardActions>\n        </StyledCard>\n    );\n};\n\nDocThumbClassic.propTypes = {\n    doc: PropTypes.shape({\n        id: PropTypes.string,\n        name: PropTypes.string,\n        sourceType: PropTypes.string.isRequired,\n        apiName: PropTypes.string.isRequired,\n        apiVersion: PropTypes.string.isRequired,\n        apiUUID: PropTypes.string.isRequired,\n        associatedType: PropTypes.string.isRequired,\n        provider: PropTypes.string,\n    }).isRequired,\n};\n\nexport default DocThumbClassic;\n","import React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Icon from '@mui/material/Icon';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport { Link } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\nimport { getBasePath } from 'AppComponents/Shared/Utils';\n\nconst PREFIX = 'DocThumbPlain';\n\nconst classes = {\n    root: `${PREFIX}-root`,\n    bullet: `${PREFIX}-bullet`,\n    title: `${PREFIX}-title`,\n    pos: `${PREFIX}-pos`,\n    thumbHeader: `${PREFIX}-thumbHeader`,\n    contextBox: `${PREFIX}-contextBox`,\n    caption: `${PREFIX}-caption`,\n    imageDisplay: `${PREFIX}-imageDisplay`\n};\n\nconst StyledCard = styled(Card)((\n    {\n        theme\n    }\n) => ({\n    [`&.${classes.root}`]: {\n        minWidth: 200,\n        marginTop: 10,\n        marginRight: 10,\n        marginBottom: 10,\n    },\n\n    [`& .${classes.bullet}`]: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n\n    [`& .${classes.title}`]: {\n        fontSize: 14,\n    },\n\n    [`& .${classes.pos}`]: {\n        marginBottom: 12,\n    },\n\n    [`& .${classes.thumbHeader}`]: {\n        width: '150px',\n        color: '#444',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        'padding-left': '5px',\n    },\n\n    [`& .${classes.contextBox}`]: {\n        maxWidth: 120,\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n    },\n\n    [`& .${classes.caption}`]: {\n        color: theme.palette.grey[700],\n    },\n\n    [`& .${classes.imageDisplay}`]: {\n        maxWidth: '40px',\n        maxHeight: '40px',\n    }\n}));\n\n/**\n * Render a thumbnail\n * @param {JSON} props required pros.\n * @returns {JSX} Thumbnail rendered output.\n */\nfunction DocThumbPlain(props) {\n\n    const { doc } = props;\n    return (\n        <StyledCard className={classes.root} variant='outlined'>\n            <CardContent>\n                <Box>\n                    <Link\n                        to={getBasePath(doc.associatedType) + doc.apiUUID + '/documents/' + doc.id + '/details'}\n                        aria-hidden='true'\n                    >\n                        <Box display='flex'>\n                            <Box>\n                                <Icon className={classes.icon} style={{ fontSize: 40 + 'px', color: '#ccc' }}>\n                                    description\n                                </Icon>\n                            </Box>\n                            <Typography\n                                variant='h5'\n                                gutterBottom\n                                title={doc.name}\n                                className={classes.thumbHeader}\n                            >\n                                {doc.name}\n                            </Typography>\n                        </Box>\n\n                    </Link>\n                </Box>\n                <Box mt={2}>\n                    <Typography variant='subtitle1' className={classes.contextBox}>\n                        {doc.apiDisplayName || doc.apiName}\n                    </Typography>\n                    <Typography\n                        variant='caption'\n                        gutterBottom\n                        align='right'\n                        className={classes.caption}\n                        Component='div'\n                    >\n                        <FormattedMessage\n                            id='Apis.Listing.components.ImageGenerator.DocThumb.apiName'\n                            defaultMessage='API Name'\n                        />\n                    </Typography>\n                </Box>\n                <Box display='flex' mt={2}>\n                    <Box flex={1}>\n                        <Typography variant='subtitle1'>{doc.sourceType}</Typography>\n                        <Typography variant='caption' gutterBottom align='left' className={classes.caption}>\n                            <FormattedMessage\n                                id='Apis.Listing.components.ImageGenerator.DocThumb.sourceType'\n                                defaultMessage='Source Type:'\n                            />\n                        </Typography>\n                    </Box>\n                    <Box>\n                        <Typography variant='subtitle1' align='right' className={classes.contextBox}>\n                            {doc.apiVersion}\n                        </Typography>\n                        <Typography\n                            variant='caption'\n                            gutterBottom\n                            align='right'\n                            className={classes.caption}\n                            Component='div'\n                        >\n                            <FormattedMessage\n                                id='Apis.Listing.components.ImageGenerator.DocThumb.apiVersion'\n                                defaultMessage='API Version'\n                            />\n                        </Typography>\n                    </Box>\n                </Box>\n\n\n            </CardContent>\n        </StyledCard>\n    );\n}\n\nexport default DocThumbPlain;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport DocThumbClassic from 'AppComponents/Apis/Listing/components/ImageGenerator/APICards/DocThumbClassic';\nimport DocThumbPlain from 'AppComponents/Apis/Listing/components/ImageGenerator/APICards/DocThumbPlain';\n\n/**\n * Render a thumbnail\n * @param {JSON} props required pros.\n * @returns {JSX} Thumbnail rendered output.\n */\nexport default function DocThumb(props) {\n    const theme = useTheme();\n    const { custom } = theme;\n    const { classes, doc } = props;\n\n    if (!custom.thumbnailTemplates || !custom.thumbnailTemplates.active) {\n        return (\n            <DocThumbClassic classes={classes} doc={doc} />\n        );\n    }\n    return (\n        <DocThumbPlain doc={doc} />\n    );\n}\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport List from '@mui/icons-material/List';\nimport GridOn from '@mui/icons-material/GridOn';\nimport AddIcon from '@mui/icons-material/Add';\nimport { FormattedMessage } from 'react-intl';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport VerticalDivider from 'AppComponents/Shared/VerticalDivider';\nimport { isRestricted } from 'AppData/AuthManager';\n\nconst PREFIX = 'TopMenu';\n\nconst classes = {\n    button: `${PREFIX}-button`,\n    root: `${PREFIX}-root`,\n    mainTitleWrapper: `${PREFIX}-mainTitleWrapper`,\n    APICreateMenu: `${PREFIX}-APICreateMenu`\n};\n\nconst Root = styled('div')((\n    {\n        theme\n    }\n) => ({\n    [`& .${classes.button}`]: {\n        margin: theme.spacing(1),\n        marginBottom: 0,\n    },\n\n    [`&.${classes.root}`]: {\n        height: 70,\n        background: theme.palette.background.paper,\n        borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        display: 'flex',\n    },\n\n    [`& .${classes.mainTitleWrapper}`]: {\n        paddingLeft: 35,\n        display: 'flex',\n        justifyContent: 'center',\n        flexDirection: 'column',\n    },\n\n    [`& .${classes.APICreateMenu}`]: {\n        flexGrow: 1,\n        display: 'flex',\n        alignItems: 'center',\n    }\n}));\n\n/**\n *\n * @param props\n * @returns {*}\n */\nfunction getTitleForArtifactType(props, count) {\n    const {\n        isAPIProduct, isMCPServer, query,\n    } = props;\n    const isSingular = count === 1;\n    if (query) {\n        return isSingular ? (\n            <FormattedMessage\n                id='Apis.Listing.components.TopMenu.search.results.singular'\n                defaultMessage='Search result'\n            />\n        ) : (\n            <FormattedMessage id='Apis.Listing.components.TopMenu.search.results' defaultMessage='Search results' />\n        );\n    } else if (isAPIProduct) {\n        return isSingular ? (\n            <FormattedMessage\n                id='Apis.Listing.components.TopMenu.apiproduct.singular'\n                defaultMessage='API product'\n            />\n        ) : (\n            <FormattedMessage\n                id='Apis.Listing.components.TopMenu.apiproducts.results'\n                defaultMessage='API products'\n            />\n        );\n    } else if (isMCPServer) {\n        return isSingular ? (\n            <FormattedMessage\n                id='Apis.Listing.components.TopMenu.mcp.server.singular'\n                defaultMessage='MCP Server'\n            />\n        ) : (\n            <FormattedMessage\n                id='Apis.Listing.components.TopMenu.mcp.servers.results'\n                defaultMessage='MCP Servers'\n            />\n        );\n    } else {\n        return isSingular ? (\n            <FormattedMessage id='Apis.Listing.components.TopMenu.api.singular' defaultMessage='API' />\n        ) : (\n            <FormattedMessage id='Apis.Listing.components.TopMenu.apis' defaultMessage='APIs' />\n        );\n    }\n}\n\n/**\n *\n * Renders the top menu\n * @param {*} props\n * @returns JSX\n */\nfunction TopMenu(props) {\n    const {\n        data, setListType, count, isAPIProduct, isMCPServer, listType, showToggle, query,\n    } = props;\n\n    const isAPIAccessRestricted = () => {\n        return isRestricted(['apim:api_create', 'apim:api_manage']);\n    };\n\n    const isAPIProductAccessRestricted = () => {\n        return isRestricted(['apim:api_publish', 'apim:api_manage']);\n    };\n\n    const isMCPServerAccessRestricted = () => {\n        return isRestricted(['apim:mcp_server_create', 'apim:mcp_server_manage']);\n    };\n\n    if (count > 0) {\n        return (\n            <Root className={classes.root}>\n                <div className={classes.mainTitleWrapper}>\n                    {data && (\n                        <>\n                            <Typography variant='h5' className={classes.mainTitle} component='h1'>\n                                {isAPIProduct && (\n                                    <FormattedMessage\n                                        id='Apis.Listing.components.TopMenu.apiproducts'\n                                        defaultMessage='API Products'\n                                    />\n                                )}\n                                {isMCPServer && (\n                                    <FormattedMessage\n                                        id='Apis.Listing.components.TopMenu.mcp.servers'\n                                        defaultMessage='MCP Servers'\n                                    />\n                                )}\n                                { query && (\n                                    <FormattedMessage\n                                        id='Apis.Listing.components.TopMenu.unified.search'\n                                        defaultMessage='Unified search'\n                                    />\n                                )}\n                                { !query && !isAPIProduct && !isMCPServer && (\n                                    <FormattedMessage id='Apis.Listing.components.TopMenu.apis' defaultMessage='APIs' />\n                                )}\n                            </Typography>\n                            <Box\n                                fontFamily='fontFamily'\n                                fontSize='body1.fontSize'\n                                display='flex'\n                            >\n                                <FormattedMessage\n                                    id='Apis.Listing.components.TopMenu.displaying'\n                                    defaultMessage='Total:'\n                                />\n                                <Box\n                                    id='itest-apis-listing-total'\n                                    fontWeight='fontWeightBold'\n                                    px={0.5}\n                                    mb={0.5}\n                                >\n                                    {count}\n                                </Box>\n                                {getTitleForArtifactType(props, count)}\n                            </Box>\n                        </>\n                    )}\n                </div>\n                <VerticalDivider height={70} />\n                <div className={classes.APICreateMenu}>\n                    {isAPIProduct && (\n                        <Button\n                            variant='contained'\n                            color='primary'\n                            component={Link}\n                            disabled={isAPIProductAccessRestricted()}\n                            to='/api-products/create'\n                            data-testid='itest-create-api-product-button'\n                            startIcon={<AddIcon />}\n                        >\n                            <FormattedMessage\n                                id='Apis.Listing.components.TopMenu.create.an.api.product'\n                                defaultMessage='Create API Product'\n                            />\n                        </Button>\n                    )}\n                    {isMCPServer && (\n                        <Button\n                            variant='contained'\n                            color='primary'\n                            component={Link}\n                            disabled={isMCPServerAccessRestricted()}\n                            to='/mcp-servers/create'\n                            data-testid='itest-create-mcp-server-button'\n                            startIcon={<AddIcon />}\n                        >\n                            <FormattedMessage\n                                id='MCPServers.Listing.components.TopMenu.create.an.mcp.server'\n                                defaultMessage='Create MCP Server'\n                            />\n                        </Button>\n                    )}\n                    {!query && !isAPIProduct && !isMCPServer && (\n                        <Button\n                            variant='contained'\n                            color='primary'\n                            component={Link}\n                            disabled={isAPIAccessRestricted()}\n                            to='/apis/create'\n                            data-testid='itest-create-api-button'\n                            startIcon={<AddIcon />}\n                        >\n                            <FormattedMessage\n                                id='Apis.Listing.components.TopMenu.create.api'\n                                defaultMessage='Create API'\n                            />\n                        </Button>\n                    )}\n                </div>\n                {showToggle && (\n                    <Box height={32} m='auto' mr={8}>\n                        <ButtonGroup color='primary' aria-label='outlined primary button group'>\n                            <IconButton\n                                onClick={() => setListType('grid')}\n                                aria-label='Switch to Grid View'\n                                size='large'>\n                                <GridOn color={listType === 'grid' ? 'primary' : 'disabled'} />\n                            </IconButton>\n                            <IconButton\n                                onClick={() => setListType('list')}\n                                aria-label='Switch to List View'\n                                size='large'>\n                                <List color={listType === 'list' ? 'primary' : 'disabled'} />\n                            </IconButton>\n                        </ButtonGroup>\n                    </Box>\n                )}\n            </Root>\n        );\n    } else {\n        return null;\n    }\n}\n\nTopMenu.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    setListType: PropTypes.func.isRequired,\n    listType: PropTypes.string.isRequired,\n    data: PropTypes.arrayOf(PropTypes.shape(PropTypes.object)).isRequired,\n    count: PropTypes.number.isRequired,\n    theme: PropTypes.shape({\n        custom: PropTypes.shape({}),\n    }).isRequired,\n    isAPIProduct: PropTypes.bool.isRequired,\n    isMCPServer: PropTypes.bool.isRequired,\n    showToggle: PropTypes.bool.isRequired,\n};\n\nexport default (TopMenu);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { withRouter } from 'react-router';\nimport { useTheme } from '@mui/material';\nimport OnboardingMenuCard from 'AppComponents/Shared/Onboarding/OnboardingMenuCard';\nimport Onboarding from 'AppComponents/Shared/Onboarding/Onboarding';\nimport { PropTypes } from 'prop-types';\nimport { FormattedMessage, injectIntl, useIntl } from 'react-intl';\nimport AuthManager from 'AppData/AuthManager';\n\n/**\n * Show Initial Welcome card if no APIs are available to list\n * Handle deploying a sample API (Create and Publish)\n *\n * @class SampleAPI\n * @extends {Component}\n */\nfunction SampleAPI() {\n    const theme = useTheme();\n    const intl = useIntl();\n    const { apiproductAddIcon } = theme.custom.landingPage.icons;\n    return (\n        <Onboarding\n            title={(\n                <FormattedMessage\n                    id='Apis.Listing.SampleAPI.SampleAPIProduct.title'\n                    defaultMessage='Let’s get started!'\n                />\n            )}\n            subTitle={(\n                <FormattedMessage\n                    id='Apis.Listing.SampleAPIProduct.description'\n                    defaultMessage='Combine multiple API resources in to a single API'\n                />\n            )}\n        >\n            <OnboardingMenuCard\n                disabled={AuthManager.isNotPublisher()}\n                id='itest-id-create-api-product'\n                to='/api-products/create'\n                name={intl.formatMessage({\n                    id: 'Apis.Listing.SampleAPIProduct.onboarding.menu.card.name',\n                    defaultMessage: 'API Product',\n                })}\n                iconName={apiproductAddIcon}\n            />\n        </Onboarding>\n    );\n}\n\nSampleAPI.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({ formatMessage: PropTypes.func }).isRequired,\n};\n\nexport default withRouter(injectIntl(SampleAPI));\n","/*\n * Copyright (c) 2024, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport { styled } from '@mui/material/styles';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Typography from '@mui/material/Typography';\nimport Chip from '@mui/material/Chip';\nimport Tooltip from '@mui/material/Tooltip';\nimport { Box, Divider } from '@mui/material';\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\nimport { FormattedMessage } from 'react-intl';\nimport LetterGenerator from 'AppComponents/Apis/Listing/components/ImageGenerator/LetterGenerator';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport Utils from 'AppData/Utils';\nimport { getBasePath } from 'AppComponents/Shared/Utils';\n\nconst PREFIX = 'DefThumbClassic';\n\nconst classes = {\n    card: `${PREFIX}-card`,\n    apiDetails: `${PREFIX}-apiDetails`,\n    apiActions: `${PREFIX}-apiActions`,\n    thumbHeader: `${PREFIX}-thumbHeader`,\n    textTruncate: `${PREFIX}-textTruncate`,\n    row: `${PREFIX}-row`,\n    textWrapper: `${PREFIX}-textWrapper`,\n    chip: `${PREFIX}-chip`,\n    suppressLinkStyles: `${PREFIX}-suppressLinkStyles`,\n};\n\nconst StyledCard = styled(Card)(({ theme }) => ({\n    [`&.${classes.card}`]: {\n        width: '300px',\n        height: 'fit-content',\n        margin: theme.spacing(1),\n        borderRadius: theme.spacing(1),\n        transition: 'box-shadow 0.3s ease-in-out',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n\n    [`& .${classes.apiDetails}`]: {\n        padding: theme.spacing(1.5),\n        paddingBottom: 0,\n        gap: theme.spacing(2),\n        display: 'flex',\n        flex: 1,\n    },\n\n    [`& .${classes.apiActions}`]: {\n        justifyContent: 'space-between',\n        padding: `8px 12px ${theme.spacing(1)} 12px`,\n    },\n\n    [`& .${classes.thumbHeader}`]: {\n        color: theme.palette.text.primary,\n        cursor: 'pointer',\n        fontWeight: 600,\n        lineHeight: '1.3',\n    },\n\n    [`& .${classes.textTruncate}`]: {\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n    },\n\n    [`& .${classes.row}`]: {\n        display: 'flex',\n        gap: '8px',\n    },\n\n    [`& .${classes.textWrapper}`]: {\n        color: theme.palette.text.secondary,\n        textDecoration: 'none',\n    },\n\n    [`& .${classes.chip}`]: {\n        height: 20,\n        borderRadius: 4,\n        backgroundColor: '#eef3f9ff',\n        overflow: 'hidden',\n    },\n\n    [`& .${classes.suppressLinkStyles}`]: {\n        textDecoration: 'none',\n        color: 'inherit',\n    },\n}));\n\nconst DefThumbClassic = (props) => {\n    const { def } = props;\n    const [isHover, setIsHover] = useState(false);\n\n    let apiNameLabel = 'API Name';\n    if (def.associatedType === 'APIProduct') {\n        apiNameLabel = 'API Product Name';\n    } else if (def.associatedType === 'MCP') {\n        apiNameLabel = 'MCP Name';\n    }\n\n    const toggleMouseOver = (event) => {\n        setIsHover(event.type === 'mouseover');\n    };\n\n    const linkTo = getBasePath(def.associatedType) + def.apiUUID + '/api-definition';\n\n    return (\n        <StyledCard\n            onMouseOver={toggleMouseOver}\n            onFocus={toggleMouseOver}\n            onMouseOut={toggleMouseOver}\n            onBlur={toggleMouseOver}\n            elevation={isHover ? 4 : 1}\n            className={classes.card}\n            data-testid={'def-card-' + def.name}\n        >\n            <Link to={linkTo} className={classes.suppressLinkStyles}>\n                <CardContent className={classes.apiDetails} style={{ padding: '12px' }}>\n                    <div\n                        style={{\n                            position: 'relative',\n                            width: 100,\n                            height: 100,\n                        }}\n                    >\n                        <CardMedia\n                            width={100}\n                            component={LetterGenerator}\n                            height={100}\n                            title='Thumbnail'\n                            artifact={{ name: 'Def' }}\n                            charLength={3}\n                            customLightColor='#366FB1'\n                            customDarkColor='#032E61'\n                            ThumbIcon={(iconProps) => (\n                                <CustomIcon icon='api-definition' width={40} height={40} {...iconProps} />\n                            )}\n                        />\n                    </div>\n                    <div style={{ flex: 1, overflow: 'hidden' }}>\n                        <div className={classes.textWrapper}>\n                            <Tooltip title={def.name} arrow>\n                                <Typography variant='h6' className={classes.thumbHeader} id={def.name} noWrap>\n                                    {def.name}\n                                </Typography>\n                            </Tooltip>\n                        </div>\n                        <div className={classes.row}>\n                            <Typography variant='caption' gutterBottom align='left' noWrap>\n                                <FormattedMessage id='by' defaultMessage='By' />\n                                &nbsp;\n                                <Tooltip title={def.apiProvider} arrow>\n                                    <span>{def.apiProvider}</span>\n                                </Tooltip>\n                            </Typography>\n                        </div>\n                        <div className={classes.row}>\n                            <div style={{ display: 'flex', flexDirection: 'column', flex: 0.65, overflow: 'hidden' }}>\n                                <Tooltip title={def.apiName} arrow>\n                                    <Typography variant='body1' noWrap>\n                                        {def.apiDisplayName || def.apiName}\n                                    </Typography>\n                                </Tooltip>\n                                <Typography variant='caption' component='p' color='text.disabled' lineHeight={1}>\n                                    {apiNameLabel}\n                                </Typography>\n                            </div>\n\n                            <div style={{ display: 'flex', flexDirection: 'column', flex: 0.35, overflow: 'hidden' }}>\n                                <Tooltip title={def.apiVersion} arrow>\n                                    <Typography variant='body1' noWrap>\n                                        {def.apiVersion}\n                                    </Typography>\n                                </Tooltip>\n                                <Typography variant='caption' component='p' color='text.disabled' lineHeight={1}>\n                                    Version\n                                </Typography>\n                            </div>\n                        </div>\n                        <div className={classes.row} style={{ marginTop: '8px' }}>\n                            <Chip\n                                size='small'\n                                classes={{ root: classes.chip }}\n                                label='DEFINITION'\n                                color='primary'\n                                variant='outlined'\n                            />\n                        </div>\n                    </div>\n                </CardContent>\n            </Link>\n            <Divider sx={{ marginLeft: 1.5, marginRight: 1.5 }} />\n            <CardActions className={classes.apiActions}>\n                <Box\n                    display='flex'\n                    alignItems='center'\n                    gap={0.5}\n                    sx={{ marginTop: '8px', marginBottom: '8px' }}\n                >\n                    <AccessTimeIcon fontSize='small' sx={{ color: 'text.disabled' }} />\n                    <Typography variant='caption' color='textSecondary'>\n                        {Utils.formatUpdatedTime(def.updatedTime)}\n                    </Typography>\n                </Box>\n            </CardActions>\n        </StyledCard>\n    );\n};\n\nDefThumbClassic.propTypes = {\n    def: PropTypes.shape({\n        id: PropTypes.string,\n        name: PropTypes.string,\n        apiName: PropTypes.string.isRequired,\n        apiVersion: PropTypes.string.isRequired,\n        apiUUID: PropTypes.string.isRequired,\n        associatedType: PropTypes.string.isRequired,\n        provider: PropTypes.string,\n    }).isRequired,\n};\n\nexport default DefThumbClassic;\n","/*\n * Copyright (c) 2024, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Icon from '@mui/material/Icon';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport { Link } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\nimport { getBasePath } from 'AppComponents/Shared/Utils';\n\nconst PREFIX = 'DefThumbPlain';\n\nconst classes = {\n    root: `${PREFIX}-root`,\n    bullet: `${PREFIX}-bullet`,\n    title: `${PREFIX}-title`,\n    pos: `${PREFIX}-pos`,\n    thumbHeader: `${PREFIX}-thumbHeader`,\n    contextBox: `${PREFIX}-contextBox`,\n    caption: `${PREFIX}-caption`,\n    imageDisplay: `${PREFIX}-imageDisplay`\n};\n\nconst StyledCard = styled(Card)((\n    {\n        theme\n    }\n) => ({\n    [`&.${classes.root}`]: {\n        minWidth: 200,\n        marginTop: 10,\n        marginRight: 10,\n        marginBottom: 10,\n    },\n\n    [`& .${classes.bullet}`]: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n\n    [`& .${classes.title}`]: {\n        fontSize: 14,\n    },\n\n    [`& .${classes.pos}`]: {\n        marginBottom: 12,\n    },\n\n    [`& .${classes.thumbHeader}`]: {\n        width: '150px',\n        color: '#444',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        whiteSpace: 'normal',\n        wordBreak: 'break-word',\n        overflowWrap: 'break-word', \n    },\n\n    [`& .${classes.contextBox}`]: {\n        maxWidth: 120,\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n    },\n\n    [`& .${classes.caption}`]: {\n        color: theme.palette.grey[700],\n    },\n\n    [`& .${classes.imageDisplay}`]: {\n        maxWidth: '40px',\n        maxHeight: '40px',\n    }\n}));\n\n/**\n * Render a thumbnail\n * @param {JSON} props required pros.\n * @returns {JSX} Thumbnail rendered output.\n */\nfunction DefThumbPlain(props) {\n\n    const { def } = props;\n    const linkTo = getBasePath(def.associatedType) + def.apiUUID + '/api-definition';\n    return (\n        <StyledCard className={classes.root} variant='outlined'>\n            <CardContent>\n                <Box>\n                    <Link to={linkTo} aria-hidden='true'>\n                        <Box display='flex'>\n                            <Box>\n                                <Icon className={classes.icon} style={{ fontSize: 40 + 'px', color: '#ccc' }}>\n                                    description\n                                </Icon>\n                            </Box>\n                            <Typography\n                                variant='h5'\n                                gutterBottom\n                                title={def.name}\n                                className={classes.thumbHeader}\n                            >\n                                {def.name}\n                            </Typography>\n                        </Box>\n\n                    </Link>\n                </Box>\n                <Box mt={2}>\n                    <Typography variant='subtitle1' className={classes.contextBox}>\n                        {def.apiDisplayName || def.apiName}\n                    </Typography>\n                    <Typography\n                        variant='caption'\n                        gutterBottom\n                        align='right'\n                        className={classes.caption}\n                        Component='div'\n                    >\n                        <FormattedMessage\n                            id='Apis.Listing.components.ImageGenerator.DefThumb.apiName'\n                            defaultMessage='API Name'\n                        />\n                    </Typography>\n                </Box>\n                <Box display='flex' mt={2}>\n                    <Box>\n                        <Typography variant='subtitle1' align='right' className={classes.contextBox}>\n                            {def.apiVersion}\n                        </Typography>\n                        <Typography\n                            variant='caption'\n                            gutterBottom\n                            align='right'\n                            className={classes.caption}\n                            Component='div'\n                        >\n                            <FormattedMessage\n                                id='Apis.Listing.components.ImageGenerator.DefThumb.apiVersion'\n                                defaultMessage='API Version'\n                            />\n                        </Typography>\n                    </Box>\n                </Box>\n\n\n            </CardContent>\n        </StyledCard>\n    );\n}\n\nexport default DefThumbPlain;\n","/*\n * Copyright (c) 2024, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport DefThumbClassic from 'AppComponents/Apis/Listing/components/ImageGenerator/APICards/DefThumbClassic';\nimport DefThumbPlain from 'AppComponents/Apis/Listing/components/ImageGenerator/APICards/DefThumbPlain';\n\n/**\n * Render a thumbnail\n * @param {JSON} props required pros.\n * @returns {JSX} Thumbnail rendered output.\n */\nexport default function DefThumb(props) {\n    const theme = useTheme();\n    const { custom } = theme;\n    const { classes, def } = props;\n\n    if (!custom.thumbnailTemplates || !custom.thumbnailTemplates.active) {\n        return (\n            <DefThumbClassic classes={classes} def={def} />\n        );\n    }\n    return (\n        <DefThumbPlain def={def} />\n    );\n}\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { createTheme, ThemeProvider, StyledEngineProvider, adaptV4Theme, styled, useTheme } from '@mui/material/styles';\nimport MUIDataTable from 'mui-datatables';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport queryString from 'query-string';\nimport API from 'AppData/api';\nimport APIProduct from 'AppData/APIProduct';\nimport MCPServer from 'AppData/MCPServer';\nimport CONSTS from 'AppData/Constants';\nimport ApiThumb from 'AppComponents/Apis/Listing/components/ImageGenerator/ApiThumb';\nimport DocThumb from 'AppComponents/Apis/Listing/components/ImageGenerator/DocThumb';\nimport { Progress } from 'AppComponents/Shared';\nimport ResourceNotFound from 'AppComponents/Base/Errors/ResourceNotFound';\nimport APILanding from 'AppComponents/Apis/Listing/Landing';\nimport TopMenu from 'AppComponents/Apis/Listing/components/TopMenu';\nimport SampleAPIProduct from 'AppComponents/Apis/Listing/SampleAPI/SampleAPIProduct';\nimport MCPServerLanding from 'AppComponents/MCPServers/Landing';\nimport Alert from 'AppComponents/Shared/Alert';\nimport { getBasePath } from 'AppComponents/Shared/Utils';\nimport DefThumb from '../components/ImageGenerator/DefThumb';\n\nconst PREFIX = 'TableView';\n\nconst classes = {\n    contentInside: `${PREFIX}-contentInside`,\n};\n\n\nconst Root = styled('div')((\n    {\n        theme\n    }\n) => ({\n    [`& .${classes.contentInside}`]: {\n        padding: theme.spacing(3),\n        paddingTop: theme.spacing(2),\n        '& > .MuiPaper-root': {\n            boxShadow: 'none',\n            backgroundColor: 'transparent',\n        },\n    },\n}));\n\n/**\n * Table view for api listing\n *\n * @class ApiTableView\n * @extends {React.Component}\n */\nclass TableView extends React.Component {\n    /**\n     * @inheritdoc\n     * @param {*} props properties\n     * @memberof ApiTableView\n     */\n    constructor(props) {\n        super(props);\n        let { defaultApiView } = props.theme.custom;\n        this.showToggle = true;\n        if (typeof defaultApiView === 'object' && defaultApiView.length > 0) {\n            if (defaultApiView.length === 1) { // We will disable toggle buttons\n                this.showToggle = false;\n            }\n            defaultApiView = defaultApiView[defaultApiView.length - 1];\n        } else {\n            defaultApiView = localStorage.getItem('publisher.listType') || defaultApiView;\n        }\n        const prevRowsPerPage = parseInt(localStorage.getItem('publisher.rowsPerPage'), 10) || 10;\n        this.state = {\n            apisAndApiProducts: null,\n            notFound: true,\n            listType: defaultApiView,\n            loading: true,\n            totalCount: -1,\n            rowsPerPage: prevRowsPerPage,\n            page: 0,\n        };\n        this.setListType = this.setListType.bind(this);\n        this.updateData = this.updateData.bind(this);\n        this.getDisplayStatus = this.getDisplayStatus.bind(this);\n    }\n\n    /**\n     * Lifecycle method to get the data when the component mounts.\n     */\n    componentDidMount() {\n        const { rowsPerPage, page } = this.state;\n        this.getData(rowsPerPage, page);\n        const userRowsPerPage = parseInt(localStorage.getItem('publisher.rowsPerPage'), 10);\n        if (userRowsPerPage) {\n            this.setState({ rowsPerPage: userRowsPerPage });\n        }\n    }\n\n    /**\n     * Update the data when the component updates.\n     * @param {*} prevProps previous properties\n     */\n    componentDidUpdate(prevProps) {\n        const { isAPIProduct, isMCPServer, query } = this.props;\n        const { rowsPerPage, page } = this.state;\n        if (isAPIProduct !== prevProps.isAPIProduct\n            || isMCPServer !== prevProps.isMCPServer || query !== prevProps.query) {\n            this.getData(rowsPerPage, page);\n        }\n    }\n\n    componentWillUnmount() {\n        // The foollowing is resetting the styles for the mui-datatables\n        const { theme } = this.props;\n        const themeAdditions = {\n            overrides: {\n                MUIDataTable: {\n                    tableRoot: {\n                        display: 'table',\n                        '& tbody': {\n                            display: 'table-row-group',\n                        },\n                        '& thead': {\n                            display: 'table-header-group',\n                        },\n                    },\n                },\n            },\n        };\n        Object.assign(theme, themeAdditions);\n    }\n\n    getMuiTheme = () => {\n        const { listType, totalCount } = this.state;\n        const { theme } = this.props;\n        let themeAdditions = {};\n        let muiTheme = {\n            overrides: {\n                MUIDataTable: {\n                    root: {\n                        backgroundColor: 'transparent',\n                    },\n                    paper: {\n                        boxShadow: 'none',\n                        backgroundColor: 'transparent',\n                    },\n                    tableRoot: {\n                        '& tbody': {\n                            backgroundColor: '#fff',\n                        },\n                    },\n                },\n                MUIDataTableBodyCell: {\n                    root: {\n                        backgroundColor: 'transparent',\n                    },\n                },\n            },\n        };\n        if (listType === 'grid') {\n            themeAdditions = {\n                overrides: {\n                    MUIDataTable: {\n                        tableRoot: {\n                            display: 'block',\n                            '& tbody': {\n                                display: 'flex',\n                                flexWrap: 'wrap',\n                                backgroundColor: 'transparent',\n                            },\n                            '& thead': {\n                                display: 'none',\n                            },\n                        },\n                    },\n                    MuiTableBody: {\n                        root: {\n                            justifyContent: totalCount > 4 ? 'center' : 'flex-start',\n                        },\n                    },\n                },\n            };\n        }\n        muiTheme = Object.assign(theme, muiTheme, themeAdditions);\n        return createTheme(adaptV4Theme(muiTheme));\n    };\n\n    // get apisAndApiProducts\n    getData = (rowsPerPage, page) => {\n        const { intl } = this.props;\n        this.setState({ loading: true });\n        return this.xhrRequest(rowsPerPage, page).then((data) => {\n            const { body } = data;\n            const { list, pagination } = body;\n            const { total } = pagination;\n            this.setState({\n                totalCount: total,\n                apisAndApiProducts: list,\n                notFound: false,\n                rowsPerPage,\n                page,\n            });\n        }).catch(() => {\n            Alert.error(intl.formatMessage({\n                defaultMessage: 'Error While Loading APIs',\n                id: 'Apis.Listing.TableView.TableView.error.loading',\n            }));\n        }).finally(() => {\n            this.setState({ loading: false });\n        });\n    };\n\n    /**\n     *\n     * Switch the view between grid and list view\n     * @param {String} value UUID(ID) of the deleted API\n     * @memberof Listing\n     */\n    setListType = (value) => {\n        localStorage.setItem('publisher.listType', value);\n        this.setState({ listType: value });\n    };\n\n    /**\n     * Get the display status for the table\n     * @returns {string} 'excluded' or 'true'\n     */\n    getDisplayStatus = () => {\n        const { isAPIProduct, isMCPServer } = this.props;\n        if (isAPIProduct || isMCPServer) {\n            return 'excluded';\n        }\n        return 'true';\n    }\n\n    changePage = (page) => {\n        const { intl } = this.props;\n        const { rowsPerPage } = this.state;\n        this.setState({ loading: true });\n        this.xhrRequest(rowsPerPage, page).then((data) => {\n            const { body } = data;\n            const { list, pagination } = body;\n            this.setState({\n                apisAndApiProducts: list,\n                notFound: false,\n                totalCount: pagination.total,\n                page,\n            });\n        }).catch(() => {\n            Alert.error(intl.formatMessage({\n                defaultMessage: 'Error While Loading APIs',\n                id: 'Apis.Listing.TableView.TableView.error.loading',\n            }));\n        })\n            .finally(() => {\n                this.setState({ loading: false });\n            });\n    };\n\n    xhrRequest = (rowsPerPage, page) => {\n        const { isAPIProduct, isMCPServer, query } = this.props;\n        if (query) {\n            const composeQuery = queryString.parse(query);\n            composeQuery.limit = rowsPerPage;\n            composeQuery.offset = page * rowsPerPage;\n            return API.search(composeQuery);\n        }\n        if (isAPIProduct) {\n            return APIProduct.all({ limit: rowsPerPage, offset: page * rowsPerPage });\n        } else if (isMCPServer) {\n            return MCPServer.all({ limit: rowsPerPage, offset: page * rowsPerPage });\n        } else {\n            return API.all({ limit: rowsPerPage, offset: page * rowsPerPage });\n        }\n    };\n\n    /**\n     * Fetch list data without updating the total count (used after deletion)\n     * @param {number} rowsPerPage Number of rows per page\n     * @param {number} page Current page number\n     * @returns {Promise} Promise that resolves when data is fetched\n     * @memberof Listing\n     */\n    getDataListOnly = (rowsPerPage, page) => {\n        const { intl } = this.props;\n        this.setState({ loading: true });\n        return this.xhrRequest(rowsPerPage, page).then((data) => {\n            const { body } = data;\n            const { list } = body;\n            this.setState({\n                apisAndApiProducts: list,\n                notFound: false,\n                rowsPerPage,\n                page,\n            });\n        }).catch(() => {\n            Alert.error(intl.formatMessage({\n                defaultMessage: 'Error While Loading APIs',\n                id: 'Apis.Listing.TableView.TableView.error.loading',\n            }));\n        }).finally(() => {\n            this.setState({ loading: false });\n        });\n    };\n\n    /**\n     *\n     * Update APIs list if an API get deleted in card or table view\n     * @param {String} apiUUID UUID(ID) of the deleted API\n     * @memberof Listing\n     */\n    updateData() {\n        const { rowsPerPage, page, totalCount } = this.state;\n        // Immediately decrement the total count for instant UI feedback\n        this.setState({ totalCount: Math.max(0, totalCount - 1) });\n\n        let newPage = page;\n        if (totalCount - 1 === rowsPerPage * page && page !== 0) {\n            newPage = page - 1;\n        }\n        // Fetch fresh data including updated total count from server\n        setTimeout(() => {\n            this.getData(rowsPerPage, newPage);\n        }, 1000);\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof TableView\n     */\n    render() {\n        const { intl, isAPIProduct, isMCPServer, query } = this.props;\n        const {\n            loading, totalCount, rowsPerPage, apisAndApiProducts, notFound, listType, page,\n        } = this.state;\n        const columns = [\n            {\n                name: 'id',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n            {\n                name: 'name',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.name',\n                    defaultMessage: 'Display Name',\n                }),\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const { isAPIProduct, isMCPServer } = tableViewObj.props; // eslint-disable-line no-shadow\n                            const artifact = tableViewObj.state.apisAndApiProducts[tableMeta.rowIndex];\n                            const apiName = tableMeta.rowData[1];\n                            const displayName = artifact?.displayName;\n                            const urlPrefix = getBasePath(artifact.apiType);\n                            const apiId = tableMeta.rowData[0];\n                            if (isAPIProduct) {\n                                return (\n                                    <Link to={'/api-products/' + apiId + '/overview'}>\n                                        <span>{displayName || apiName}</span>\n                                    </Link>\n                                );\n                            } else if (isMCPServer) {\n                                return (\n                                    <Link to={'/mcp-servers/' + apiId + '/overview'}>\n                                        <span>{displayName || apiName}</span>\n                                    </Link>\n                                );\n                            }\n                            if (artifact) {\n                                if (artifact.type === 'DOC') {\n                                    return (\n                                        <Link\n                                            to={urlPrefix + artifact.apiUUID + '/documents/' + apiId + '/details'}\n                                        >\n                                            <FormattedMessage\n                                                id='Apis.Listing.TableView.TableView.doc.flag'\n                                                defaultMessage=' [Doc]'\n                                            />\n                                            &nbsp;\n                                            <span>{displayName || apiName}</span>\n                                        </Link>\n                                    );\n                                } else if (artifact.type === 'DEFINITION') {\n                                    const linkTo = `${urlPrefix}${artifact.apiUUID}/api-definition`;\n                                    // const linkTo = artifact.associatedType === 'API'\n                                    //     ? `/apis/${artifact.apiUUID}/api-definition`\n                                    //     : `/api-products/${artifact.apiUUID}/api-definition`;\n                                    return (\n                                        <Link\n                                            to={linkTo}\n                                        >\n                                            <FormattedMessage\n                                                id='Apis.Listing.TableView.TableView.def.flag'\n                                                defaultMessage=' [Def]'\n                                            />\n                                            &nbsp;\n                                            <span>{artifact.name}</span>\n                                        </Link>\n                                    );\n                                }\n                                return (\n                                    <Link to={urlPrefix + apiId + '/overview'}>\n                                        <span>{displayName || apiName}</span>\n                                    </Link>\n                                );\n                            }\n                        }\n                        return <span />;\n                    },\n                    sort: false,\n                    filter: false,\n                },\n            },\n            {\n                name: 'version',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.version',\n                    defaultMessage: 'Version',\n                }),\n                options: {\n                    sort: false,\n                },\n            },\n            {\n                name: 'type',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.type',\n                    defaultMessage: 'Type',\n                }),\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue, tableViewObj = this) => {\n                        const apiData = tableViewObj.state.apisAndApiProducts?.[tableMeta.rowIndex];\n                        if (apiData) {\n                            if (apiData.subtype && apiData.subtype === 'AIAPI') {\n                                return intl.formatMessage({\n                                    id: 'Apis.Listing.TableView.TableView.ai.api',\n                                    defaultMessage: 'AI API',\n                                });\n                            } else if (apiData.type === CONSTS.ARTIFACT_TYPES.MCP) {\n                                return intl.formatMessage({\n                                    id: 'Apis.Listing.TableView.TableView.mcp.server',\n                                    defaultMessage: 'MCP Server',\n                                });\n                            } else if (apiData.type === CONSTS.ARTIFACT_TYPES.APIProduct) {\n                                return intl.formatMessage({\n                                    id: 'Apis.Listing.TableView.TableView.api.product',\n                                    defaultMessage: 'API Product',\n                                });\n                            } else if (apiData.type === CONSTS.ARTIFACT_TYPES.DEFINITION) {\n                                return intl.formatMessage({\n                                    id: 'Apis.Listing.TableView.TableView.definition',\n                                    defaultMessage: 'Definition',\n                                });\n                            } else if (apiData.type === CONSTS.ARTIFACT_TYPES.DOCUMENT) {\n                                return intl.formatMessage({\n                                    id: 'Apis.Listing.TableView.TableView.document',\n                                    defaultMessage: 'Document',\n                                });\n                            }\n\n                            // Get the type from transportType (search mode) or type (listing mode)\n                            const apiType = apiData.transportType || apiData.type;\n                            \n                            return CONSTS.API_TYPES[apiType?.toUpperCase()] || apiType || '';\n                        }\n                        return '';\n                    },\n                    sort: false,\n                    filter: false,\n                }\n            },\n            {\n                name: 'gatewayType',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.vendor',\n                    defaultMessage: 'Gateway Vendor',\n                }),\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue, tableViewObj = this) => {\n                        const apiData = tableViewObj.state.apisAndApiProducts?.[tableMeta.rowIndex];\n                        if (apiData) {\n                            const { gatewayType, gatewayVendor } = apiData;\n                            if (gatewayVendor === 'wso2' || gatewayVendor === 'solace') {\n                                return gatewayVendor.toUpperCase();\n                            } else {\n                                return gatewayType;\n                            }\n                        }\n                        return '-';\n                    },\n                    sort: false,\n                    display: this.getDisplayStatus(),\n                    filter: false,\n                },\n            },\n            {\n                name: 'context',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.context',\n                    defaultMessage: 'Context',\n                }),\n                options: {\n                    sort: false,\n                },\n            },\n            {\n                name: 'provider',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.provider',\n                    defaultMessage: 'Provider',\n                }),\n                options: {\n                    sort: false,\n                },\n            },\n        ];\n        const options = {\n            filterType: 'dropdown',\n            responsive: 'stacked',\n            search: false,\n            count: totalCount,\n            serverSide: true,\n            page,\n            onChangePage: this.changePage,\n            selectableRows: 'none',\n            rowsPerPage,\n            onChangeRowsPerPage: (newNumberOfRows) => {\n                let newPage;\n                if (page * newNumberOfRows > totalCount) {\n                    newPage = 0;\n                } else if (totalCount - 1 === newNumberOfRows * page && page !== 0) {\n                    newPage = page - 1;\n                }\n                localStorage.setItem('publisher.rowsPerPage', newNumberOfRows);\n                this.getData(newNumberOfRows, newPage);\n            },\n            textLabels: {\n                pagination: {\n                    rowsPerPage: intl.formatMessage({\n                        id: 'Apis.Listing.ApiTableView.items.per.page',\n                        defaultMessage: 'Items per page',\n                    }),\n                    displayRows: intl.formatMessage({\n                        id: 'Mui.data.table.pagination.display.rows',\n                        defaultMessage: 'of',\n                    }),\n                },\n                toolbar: {\n                    downloadCsv: intl.formatMessage({\n                        id: 'Mui.data.table.pagination.display.tool.download.csv',\n                        defaultMessage: 'Download CSV',\n                    }),\n                    print: intl.formatMessage({\n                        id: 'Mui.data.table.pagination.display.tool.print',\n                        defaultMessage: 'Print',\n                    }),\n                    viewColumns: intl.formatMessage({\n                        id: 'Mui.data.table.pagination.display.tool.view.columns',\n                        defaultMessage: '\"View Columns\"',\n                    }),\n                },\n            },\n        };\n        if (listType === 'grid') {\n            options.customRowRender = (data, dataIndex, rowIndex, tableViewObj = this) => {\n                const { isAPIProduct, isMCPServer } = tableViewObj.props; // eslint-disable-line no-shadow\n                const artifact = tableViewObj.state.apisAndApiProducts[dataIndex];\n                if (artifact) {\n                    if (artifact.type === 'DOC') {\n                        return <DocThumb doc={artifact} />;\n                    } else if (artifact.type === 'DEFINITION') {\n                        return <DefThumb def={artifact} />;\n                    } else if (artifact.type === 'APIPRODUCT') {\n                        artifact.state = 'PUBLISHED';\n                        return <ApiThumb api={artifact} isAPIProduct updateData={this.updateData} />;\n                    // } else if (isMCPServer) {\n                    //     return <ApiThumb api={artifact} isMCPServer updateData={this.updateData} />;\n                    } else {\n                        return (\n                            <ApiThumb\n                                api={artifact}\n                                isAPIProduct={isAPIProduct}\n                                isMCPServer={isMCPServer}\n                                updateData={this.updateData}\n                            />\n                        );\n                    }\n                }\n                return <span />;\n            };\n            options.title = false;\n            options.filter = false;\n            options.print = false;\n            options.download = false;\n            options.viewColumns = false;\n            options.customToolbar = false;\n        } else {\n            options.customRowRender = null;\n            options.title = true;\n            options.filter = false;\n            options.print = true;\n            options.download = true;\n            options.viewColumns = true;\n        }\n        if (page === 0 && totalCount <= rowsPerPage && rowsPerPage === 10) {\n            options.pagination = false;\n        } else {\n            options.pagination = true;\n        }\n        if (!apisAndApiProducts) {\n            if (isAPIProduct) {\n                return <Progress per={90} message='Loading API Products ...' />;\n            } else if (isMCPServer) {\n                return <Progress per={90} message='Loading MCP Servers ...' />;\n            }\n            return <Progress per={90} message='Loading APIs ...' />;\n        }\n        if (notFound) {\n            return <ResourceNotFound />;\n        }\n        if (apisAndApiProducts.length === 0 && !query) {\n            return (\n                <Root>\n                    <TopMenu\n                        data={apisAndApiProducts}\n                        count={totalCount}\n                        setListType={this.setListType}\n                        isAPIProduct={isAPIProduct}\n                        isMCPServer={isMCPServer}\n                        listType={listType}\n                        showToggle={this.showToggle}\n                    />\n                    {isAPIProduct && <SampleAPIProduct />}\n                    {isMCPServer && <MCPServerLanding />}\n                    {!isAPIProduct && !isMCPServer && <APILanding />}\n                </Root>\n            );\n        }\n\n        return <>\n            <Root>\n                <TopMenu\n                    data={apisAndApiProducts}\n                    count={totalCount}\n                    setListType={this.setListType}\n                    isAPIProduct={isAPIProduct}\n                    isMCPServer={isMCPServer}\n                    listType={listType}\n                    showToggle={this.showToggle}\n                    query={query}\n                />\n                <div className={classes.contentInside}>\n                    {loading ? (\n                        <Progress\n                            per={96}\n                            message='Updating page ...'\n                        />\n                    )\n                        : (\n                            <StyledEngineProvider injectFirst>\n                                <ThemeProvider theme={this.getMuiTheme()}>\n                                    <MUIDataTable title='' data={apisAndApiProducts} columns={columns}\n                                        options={options} />\n                                </ThemeProvider>\n                            </StyledEngineProvider>\n                        )}\n                </div>\n            </Root>\n        </>;\n    }\n}\n\nTableView.propTypes = {\n    intl: PropTypes.shape({ formatMessage: PropTypes.func.isRequired }).isRequired,\n    isAPIProduct: PropTypes.bool.isRequired,\n    isMCPServer: PropTypes.bool.isRequired,\n    theme: PropTypes.shape({\n        custom: PropTypes.shape({}),\n    }).isRequired,\n    query: PropTypes.string,\n};\n\nTableView.defaultProps = {\n    query: '',\n};\n\nexport default injectIntl((props) => {\n    const theme = useTheme();\n    return <TableView {...props} theme={theme} />;\n});\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n// TODO: DO we need this component ? this is a pure proxy just passing the props through this to children ? ~tmkb\nimport React from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport TableView from './TableView/TableView';\n\nconst PREFIX = 'Listing';\n\nconst classes = {\n    content: `${PREFIX}-content`\n};\n\nconst Root = styled('div')({\n    [`&.${classes.content}`]: {\n        flexGrow: 1,\n    },\n});\n\n/**\n * Render the APIs Listing page, This is the Default Publisher Landing page as well\n *\n * @function Listing\n * @returns {React.Component} @inheritdoc\n */\nfunction Listing(props) {\n    const { isAPIProduct, isMCPServer, theme, location: { search } } = props;\n    // TODO: need to handle this search case separately ~tmkb\n    return (\n        <Root className={classes.content}>\n            <TableView isAPIProduct={isAPIProduct} isMCPServer={isMCPServer} theme={theme} query={search} />\n        </Root>\n    );\n}\n\nListing.propTypes = {\n    classes: PropTypes.shape({\n        content: PropTypes.string,\n        contentInside: PropTypes.string,\n    }).isRequired,\n    theme: PropTypes.shape({\n        custom: PropTypes.shape({}),\n    }).isRequired,\n    isAPIProduct: PropTypes.bool,\n    isMCPServer: PropTypes.bool,\n    location: PropTypes.shape({\n        search: PropTypes.string,\n    }),\n};\n\nListing.defaultProps = {\n    isAPIProduct: false,\n    isMCPServer: false,\n    location: PropTypes.shape({\n        search: '',\n    }),\n};\n\nexport default (Listing);\n","/* eslint-disable */\n/*\n * Copyright (c) 2025, WSO2 LLC. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { useIntl } from 'react-intl';\nimport Typography from '@mui/material/Typography';\nimport Stack from '@mui/material/Stack';\nimport Box from '@mui/material/Box';\n// @ts-ignore\nimport { app } from 'Settings';\nimport { styled } from '@mui/material/styles';\n\nconst PREFIX = 'ApiChatBanner';\n\nconst classes = {\n    tryAiBannerCont: `${PREFIX}-tryAiBannerCont`,\n    tryAiBannerImgWrap: `${PREFIX}-tryAiBannerImgWrap`,\n    tryAiBannerContentWrap: `${PREFIX}-tryAiBannerContentWrap`,\n    tryAiBannerContent: `${PREFIX}-tryAiBannerContent`,\n    tryAiBannerTriangle: `${PREFIX}-tryAiBannerTriangle`,\n};\n\nconst Root = styled('div')(({ theme }: any) => ({\n    [`& .${classes.tryAiBannerCont}`]: {\n        display: 'flex',\n        flexDirection: 'column',\n        paddingLeft: theme.spacing(1),\n        gridGap: theme.spacing(1.5),\n        maxWidth: theme.spacing(85),\n    },\n    [`& .${classes.tryAiBannerImgWrap}`]: {\n        flex: `0 0 ${theme.spacing(15)}px`,\n        maxWidth: theme.spacing(15),\n        fontSize: theme.spacing(15),\n        display: 'flex',\n        alignItems: 'center',\n    },\n    [`& .${classes.tryAiBannerContentWrap}`]: {\n        flexGrow: 1,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    [`& .${classes.tryAiBannerContent}`]: {\n        background: theme.palette.grey[100],\n        padding: theme.spacing(2),\n        borderRadius: theme.spacing(0, 2, 2, 2),\n        position: 'relative',\n    },\n    [`& .${classes.tryAiBannerTriangle}`]: {\n        position: 'absolute',\n        width: theme.spacing(3),\n        height: theme.spacing(3),\n        top: 0,\n        left: theme.spacing(-3),\n        overflow: 'hidden',\n        '&:before': {\n            content: '\"\"',\n            display: 'block',\n            width: '200%',\n            height: '200%',\n            position: 'absolute',\n            borderRadius: '50%',\n            top: 0,\n            right: 0,\n            boxShadow: `${theme.spacing(2.5)} ${theme.spacing(-3.75)} 0 0 ${theme.palette.grey[100]}`,\n        },\n    },\n}));\n\nconst ApiChatBanner: React.FC = () => {\n    const intl = useIntl();\n    return (\n        <Root>\n            <Stack spacing={2} sx={{ maxWidth: '100%', alignItems: 'center', textAlign: 'center' }}>\n                <Box>\n                    <img\n                        alt='API Design Assistant'\n                        src={`${app.context}/site/public/images/ai/APIchatassistantImageWithColour.svg`}\n                        style={{ width: '200px', height: 'auto' }}\n                    />\n                </Box>\n                <Box className={classes.tryAiBannerContentWrap}>\n                    <Typography sx={{ fontSize: '1.0rem', fontWeight: 'bold' }}>\n                        Turn your ideas into reality in minutes with our Assistant!\n                    </Typography>\n                </Box>\n            </Stack>\n        </Root>\n    );\n};\n\nexport default ApiChatBanner;\n","/* eslint-disable */\n/*\n * Copyright (c) 2025, WSO2 LLC. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { forwardRef } from 'react';\nimport {\n    Box,\n    InputBase,\n    Typography,\n} from '@mui/material';\nimport clsx from 'clsx';\nimport { styled, alpha } from '@mui/material/styles';\n\nconst PREFIX = 'TextInput';\n\nconst classes = {\n    root: `${PREFIX}-root`,\n    rootSmall: `${PREFIX}-rootSmall`,\n    rootLarge: `${PREFIX}-rootLarge`,\n    readOnlyDefault: `${PREFIX}-readOnlyDefault`,\n    readOnlyPlain: `${PREFIX}-readOnlyPlain`,\n    rounded: `${PREFIX}-rounded`,\n    focused: `${PREFIX}-focused`,\n    error: `${PREFIX}-error`,\n    textInput: `${PREFIX}-textInput`,\n    textInputLarge: `${PREFIX}-textInputLarge`,\n    inputAdornedEnd: `${PREFIX}-inputAdornedEnd`,\n    inputAdornedEndAlignTop: `${PREFIX}-inputAdornedEndAlignTop`,\n    textarea: `${PREFIX}-textarea`,\n    inputGroup: `${PREFIX}-inputGroup`,\n};\n\nconst Root = styled('div')(({ theme }) => ({\n    [`& .${classes.root}`]: {\n        padding: theme.spacing(1.5, 1.5),\n        width: '100%',\n        minHeight: theme.spacing(5),\n        backgroundColor: theme.palette.common.white,\n        border: `1px solid ${alpha(theme.palette.primary.main, 0.5)}`,\n        borderRadius: 5,\n        '&$multiline': {\n            height: 'auto',\n            resize: 'auto',\n        },\n        '&$multilineReadonly': {\n            height: 'auto',\n            resize: 'none',\n            '& $textarea': {\n                height: 'auto',\n                resize: 'none',\n            },\n        },\n        '&$multilineResizeIndicator': {\n            height: 'auto',\n            resize: 'none',\n            '& $textarea': {\n                height: 'auto',\n                resize: 'none',\n            },\n        },\n        '&$rounded': {\n            paddingLeft: theme.spacing(2),\n        },\n        '&:hover': {\n            borderColor: `${alpha(theme.palette.primary.main, 0.5)}`,\n        },\n    },\n    [`& .${classes.rootSmall}`]: {\n        minHeight: theme.spacing(4),\n    },\n    [`& .${classes.rootLarge}`]: {\n        minHeight: theme.spacing(7),\n        borderRadius: 12,\n        padding: theme.spacing(1, 1, 1, 3),\n    },\n    [`& .${classes.readOnlyDefault}`]: {\n        boxShadow: `0 0 0 1px ${alpha(\n            theme.palette.common.black,\n            0.05,\n        )}, inset 0 2px 2px ${alpha(theme.palette.common.black, 0.05)}`,\n        border: 'none',\n        backgroundColor: theme.palette.secondary.light,\n    },\n    [`& .${classes.readOnlyPlain}`]: {\n        boxShadow: 'none',\n        border: 'none',\n        backgroundColor: theme.palette.common.white,\n        paddingLeft: 0,\n        paddingRight: 0,\n    },\n    [`& .${classes.rounded}`]: {\n        borderRadius: theme.spacing(2.5),\n    },\n    [`& .${classes.focused}`]: {\n        borderColor: theme.palette.primary.light,\n        borderWidth: 1,\n    },\n    [`& .${classes.error}`]: {\n        background: theme.palette.error.light,\n        borderColor: theme.palette.error.main,\n        boxShadow: `0 0 0 1px ${theme.palette.error.light}, inset 0 2px 2px ${alpha(\n            theme.palette.error.light,\n            0.07,\n        )}`,\n        '&:hover': {\n            borderColor: theme.palette.error.main,\n        },\n    },\n    [`& .${classes.textInput}`]: {\n        minHeight: theme.spacing(2.5),\n        padding: theme.spacing(0.125, 0),\n        fontSize: theme.typography.body1.fontSize,\n        fontWeight: theme.typography.body1.fontWeight,\n        lineHeight: theme.typography.body1.lineHeight,\n    },\n    [`& .${classes.textInputLarge}`]: {\n        fontSize: theme.typography.overline.fontSize,\n        fontWeight: theme.typography.overline.fontWeight,\n        lineHeight: theme.typography.overline.lineHeight,\n    },\n    [`& .${classes.inputAdornedEnd}`]: {\n        '& .MuiInputAdornment-root': {\n            marginRight: theme.spacing(-1),\n        },\n    },\n    [`& .${classes.inputAdornedEndAlignTop}`]: {\n        '& .MuiInputAdornment-root': {\n            alignSelf: 'flex-end',\n            height: 'auto',\n            marginBottom: theme.spacing(0.25),\n        },\n    },\n    [`& .${classes.textarea}`]: {\n        resize: 'both',\n    },\n    [`& .${classes.inputGroup}`]: {\n        position: 'relative',\n    },\n}));\n\nconst TextInput = (\n    props,\n    ref,\n) => {\n    const {\n        label,\n        width,\n        readOnly,\n        error,\n        helperText,\n        rows,\n        multiline,\n        optional,\n        loading,\n        tooltip,\n        inputTooltip,\n        size = 'medium',\n        info,\n        actions,\n        testId,\n        variant = 'default',\n        rounded = false,\n        resizeIndicator = true,\n        ...rest\n    } = props;\n\n    return (\n        <Root>\n            <Box width={width}>\n                <Box className={classes.inputGroup}>\n                    <InputBase\n                        ref={ref}\n                        classes={{\n                            root: clsx({\n                                [classes.root]: true,\n                                [classes.rootSmall]: size === 'small',\n                                [classes.rootLarge]: size === 'large',\n                                [classes.readOnlyDefault]: readOnly && variant === 'default',\n                                [classes.readOnlyPlain]: readOnly && variant === 'plain',\n                                [classes.multiline]: multiline,\n                                [classes.multilineReadonly]: multiline && readOnly,\n                                [classes.multilineResizeIndicator]:\n                                    multiline && !resizeIndicator,\n                                [classes.rounded]: rounded,\n                            }),\n                            focused: classes.focused,\n                            error: classes.error,\n                            inputMultiline: classes.textarea,\n                            input: clsx({\n                                [classes.textInput]: true,\n                                [classes.textInputLarge]: size === 'large',\n                            }),\n                            adornedEnd: clsx({\n                                [classes.inputAdornedEnd]: true,\n                                [classes.inputAdornedEndAlignTop]: multiline,\n                            }),\n                        }}\n                        readOnly={readOnly}\n                        {...rest}\n                        error={error}\n                        rows={rows}\n                        multiline={multiline}\n                        data-cyid={testId}\n                    />\n                </Box>\n                {helperText && (\n                    <Box display='flex' alignItems='center' ml={1}>\n                        <Typography variant='body2' component='p'>\n                            {helperText}\n                        </Typography>\n                    </Box>\n                )}\n            </Box>\n        </Root>\n    );\n};\n\nexport default forwardRef(TextInput);\n","/*\n * Copyright (c) 2025, WSO2 LLC. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useMemo, useRef, useEffect } from 'react';\nimport { useIntl, FormattedMessage } from 'react-intl';\nimport Button from '@mui/material/Button';\nimport { Box, Typography } from '@mui/material';\nimport Send from '@mui/icons-material/SendOutlined';\nimport { styled } from '@mui/system';\nimport TextInput from './TextInput/TextInput';\nimport { createPortal } from 'react-dom';\nimport { usePublisherSettings } from 'AppComponents/Shared/AppContext';\n\nconst PREFIX = 'ApiChatExecute';\n\nconst CHARACTERS: string[] = []; \n\nconst classes = {\n    tryAiBottom: `${PREFIX}-tryAiBottom`,\n    tryAiBottomInner: `${PREFIX}-tryAiBottomInner`,\n    reExecuteWrap: `${PREFIX}-reExecuteWrap`,\n    tryAiBottomTextInputWrap: `${PREFIX}-tryAiBottomTextInputWrap`,\n    disclaimerText: `${PREFIX}-disclaimerText`,\n};\n\nconst Root = styled('div')(({ theme }) => ({\n    [`& .${classes.tryAiBottom}`]: {\n        position: 'sticky',\n        left: 0,\n        right: 0,\n        marginLeft: theme.spacing(-1),\n        marginRight: theme.spacing(-1),\n    },\n    [`& .${classes.tryAiBottomInner}`]: {\n        padding: theme.spacing(0.25, 1),\n    },\n    [`& .${classes.reExecuteWrap}`]: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    [`& .${classes.tryAiBottomTextInputWrap}`]: {\n        maxWidth: '100%',\n        overflow: 'hidden',\n    },\n    [`& .${classes.disclaimerText}`]: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n}));\n\nconst ExecuteQuery = styled(Send)({\n    transform: 'rotate(-40deg)',\n    marginBottom: '5px',\n});\n\nconst MentionMenu = ({\n    chars,\n    index,\n    top,\n    left,\n    complete,\n}: {\n    chars: string[];\n    index: number;\n    top: number;\n    left: number;\n    complete: (index: number) => void;\n}) => {\n    return (\n        <div\n            style={{\n                position: 'fixed',\n                top: top + 120,\n                left: left + 100,\n                width: '250px',\n                maxHeight: '100px',\n                fontSize: '14px',\n                fontFamily: 'Open Sans',\n                border: 'solid 1px #E0E0E0',\n                borderRadius: '8px',\n                background: 'white',\n                boxShadow: '0 4px 6px rgba(0,0,0,0.1)',\n                cursor: 'pointer',\n                zIndex: 1000,\n                overflowY: 'auto',\n                overflowX: 'hidden',\n            }}\n        >\n            {chars.map((c, i) => (\n                <div\n                    key={c}\n                    style={{\n                        padding: '10px 15px',\n                        transition: 'background-color 0.2s ease',\n                        whiteSpace: 'nowrap',\n                        overflow: 'hidden',\n                        textOverflow: 'ellipsis',\n                        ...(index === i \n                            ? {\n                                color: 'white',\n                                background: '#2A6AD3',\n                            } \n                            : {\n                                '&:hover': {\n                                    backgroundColor: '#F5F5F5',\n                                }\n                            }\n                        ),\n                    }}\n                    onMouseDown={(e) => {\n                        e.preventDefault();\n                        complete(i);\n                    }}\n                >\n                    {c}\n                </div>\n            ))}\n        </div>\n    );\n};\n\ninterface ApiChatExecuteProps {\n    lastQuery: string;\n    inputQuery: string;\n    handleQueryChange: (\n      event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n    ) => void;\n    handleExecute: () => Promise<void>;\n    paths?: string[]; \n    loading?: boolean;\n}\n\nconst ApiChatExecute: React.FC<ApiChatExecuteProps> = ({\n    lastQuery,\n    inputQuery,\n    handleQueryChange,\n    handleExecute,\n    paths = [],\n    loading = false,\n}) => {\n    const intl = useIntl();\n    const QUERY_CHARACTER_LIMIT = 500;\n    const textareaRef = useRef<HTMLTextAreaElement>(null);\n    const [mentionPos, setMentionPos] = useState<{\n        top: number;\n        left: number;\n        caret: number;\n    } | null>(null);\n    const [mentionIndex, setMentionIndex] = useState<number>(0);\n    const [dynamicCharacters, setDynamicCharacters] = useState<string[]>([]);\n    const { data: settings }: any = usePublisherSettings();\n    const aiAuthTokenProvided = settings?.aiAuthTokenProvided;\n    const designAssistantEnabled = settings?.designAssistantEnabled;\n\n    useEffect(() => {\n        const transformedPaths = paths.map(path => \n            path.startsWith('/') ? path : `/${path}`\n        );\n        setDynamicCharacters(transformedPaths);\n    }, [paths]);\n\n    const MAX_LIST_LENGTH = 8;\n    const MENTION_REG = /\\B\\/([\\-+\\w]*)$/;\n\n    const handleInputChange = (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n        const value = event.target.value;\n        handleQueryChange(event);\n    \n        if (textareaRef.current) {\n            const selectionStart = textareaRef.current.selectionStart;\n            const textBeforeCursor = value.slice(0, selectionStart);\n            const match = textBeforeCursor.match(MENTION_REG);\n    \n            if (match) {\n                const rect = textareaRef.current.getBoundingClientRect();\n                \n                setMentionPos({\n                    top: rect.top - 80,\n                    left: rect.left + 20,\n                    caret: selectionStart\n                });\n                setMentionIndex(0);\n            } else {\n                setMentionPos(null);\n                setMentionIndex(0);\n            }\n        }\n    };\n\n    const filteredCharacters = useMemo(() => {\n        if (!mentionPos) return [];\n        const targetText = inputQuery.slice(0, mentionPos.caret);\n        const match = targetText.match(MENTION_REG);\n        const name = match?.[1] ?? \"\";\n        \n        return dynamicCharacters\n            .filter((c) =>\n                c.slice(1).toLowerCase().startsWith(name.toLowerCase())\n            )\n            .slice(0, MAX_LIST_LENGTH)\n            .map(c => c.slice(1));\n    }, [inputQuery, mentionPos, dynamicCharacters]);\n\n    const completeMention = (i: number) => {\n        if (!textareaRef.current || !mentionPos) return;\n\n        const selected = filteredCharacters[i];\n        const match = inputQuery.slice(0, mentionPos.caret).match(MENTION_REG);\n\n        const newValue = inputQuery + (match ? selected : '');\n\n        handleQueryChange({ \n            target: { \n                value: newValue \n            } \n        } as React.ChangeEvent<HTMLTextAreaElement>);\n\n        setMentionPos(null);\n        setMentionIndex(0);\n\n        if (textareaRef.current) {\n            const newLength = newValue.length;\n            textareaRef.current.setSelectionRange(newLength, newLength);\n        }\n    };\n    \n    const handleKeyDown = (event: React.KeyboardEvent<HTMLTextAreaElement>) => {\n        if (!mentionPos || !filteredCharacters.length) return;\n\n        switch (event.code) {\n            case \"ArrowUp\":\n                event.preventDefault();\n                const nextIndex = mentionIndex <= 0 ? filteredCharacters.length - 1 : mentionIndex - 1;\n                setMentionIndex(nextIndex);\n                break;\n            case \"ArrowDown\":\n                event.preventDefault();\n                const prevIndex = mentionIndex >= filteredCharacters.length - 1 ? 0 : mentionIndex + 1;\n                setMentionIndex(prevIndex);\n                break;\n            case \"Enter\":\n                event.preventDefault();\n                completeMention(mentionIndex);\n                break;\n            case \"Escape\":\n                event.preventDefault();\n                setMentionPos(null);\n                setMentionIndex(0);\n                break;\n        }\n    };\n\n    return (\n        <Root>\n            <Box className={classes.tryAiBottom}>\n                <Box className={classes.tryAiBottomInner}>\n                    <Box className={classes.tryAiBottomTextInputWrap} pl={2} pr={2}>\n                        <TextInput\n                            ref={textareaRef}\n                            fullWidth\n                            name='query'\n                            value={inputQuery}\n                            placeholder={intl.formatMessage({\n                                id: 'Apis.Details.ApiChat.components.ApiChatExecute.queryInput.placeholder',\n                                defaultMessage: 'Describe your API design requirements...',\n                            })}\n                            onChange={handleInputChange}\n                            onKeyDown={handleKeyDown}\n                            testId='nl-query-input'\n                            multiline\n                            disabled={!aiAuthTokenProvided||!designAssistantEnabled}\n                            sx={{\n                                '& .TextInput-textarea': {\n                                    resize: 'none',\n                                },\n                            }}\n                            resizeIndicator={false}\n                            onKeyPress={(event: { key: string; preventDefault: () => void; }) => {\n                                if (event.key === 'Enter') {\n                                    event.preventDefault();\n                                    handleExecute();\n                                }\n                            }}\n                            endAdornment={(\n                                <Button\n                                    variant='contained'\n                                    color='primary'\n                                    onClick={handleExecute}\n                                    id='run-agent-button'\n                                    disabled={loading}\n                                >\n                                <ExecuteQuery />\n                                </Button>\n                            )}\n                            inputProps={{\n                                maxLength: QUERY_CHARACTER_LIMIT,\n                            }}\n                        />\n                        <Box display='flex' justifyContent='flex-end' mt={1} mr={2} >\n                            <Typography variant='caption'>\n                                {inputQuery.length}\n                                /\n                                {QUERY_CHARACTER_LIMIT}\n                            </Typography>\n                        </Box>\n                        <Box className={classes.disclaimerText}>\n                            <Typography variant='body2' color='textSecondary' component='p'>\n                                {intl.formatMessage({\n                                    id: 'Apis.Details.ApiChat.components.ApiChatExecute.disclaimer.label',\n                                    defaultMessage:\n                    'It is prudent to exercise a degree of caution and thoughtfulness, as language models'\n                    + ' may exhibit some degree of unpredictability at times.',\n                                })}\n                            </Typography>\n                        </Box>\n                    </Box>\n                </Box>\n            </Box>\n\n            {mentionPos && filteredCharacters.length > 0 && createPortal(\n                <MentionMenu\n                    top={mentionPos.top}\n                    left={mentionPos.left}\n                    chars={filteredCharacters}\n                    index={mentionIndex}\n                    complete={completeMention}\n                />,\n                document.body\n            )}\n        </Root>\n    );\n};\n\nexport default ApiChatExecute;\n","/* eslint-disable */\n/*\n * Copyright (c) 2025, WSO2 LLC. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport ArrowForwardIosSharpIcon from '@mui/icons-material/ArrowForwardIosSharp';\nimport MuiAccordion, { AccordionProps } from '@mui/material/Accordion';\nimport MuiAccordionSummary, {\n  AccordionSummaryProps,\n} from '@mui/material/AccordionSummary';\nimport MuiAccordionDetails from '@mui/material/AccordionDetails';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\n\ninterface CustomizedAccordionsProps {\n  title: string;\n  description: string;\n  onAdd: (title: string) => void;\n  onRemove: (title: string) => void;\n}\n\nconst Accordion = styled((props: AccordionProps) => (\n  <MuiAccordion disableGutters elevation={0} square {...props} />\n))(({ theme }) => ({\n  border: `1px solid ${theme.palette.divider}`,\n  width: '100%',\n  '&:not(:last-child)': {\n    borderBottom: 0,\n  },\n  '&::before': {\n    display: 'none',\n  },\n}));\n\nconst AccordionSummary = styled((props: AccordionSummaryProps & { active: boolean }) => (\n  <MuiAccordionSummary\n    expandIcon={<ArrowForwardIosSharpIcon sx={{ fontSize: '0.9rem' }} />}\n    {...props}\n  />\n))(({ theme, active }) => ({\n  backgroundColor: active ? '#bbe7f0' : 'rgba(0, 0, 0, .03)',\n  flexDirection: 'row-reverse',\n  '& .MuiAccordionSummary-expandIconWrapper.Mui-expanded': {\n    transform: 'rotate(90deg)',\n  },\n  '& .MuiAccordionSummary-content': {\n    marginLeft: theme.spacing(1),\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    width: '100%',\n  },\n}));\n\nconst AccordionDetails = styled(MuiAccordionDetails)(({ theme }) => ({\n  padding: theme.spacing(2),\n  borderTop: '1px solid rgba(0, 0, 0, .125)',\n}));\n\nconst StyledButton = styled(Button)(({ theme }) => ({\n  marginLeft: 'auto',\n}));\n\nconst CustomizedAccordions: React.FC<CustomizedAccordionsProps> = ({ title, description, onAdd, onRemove }) => {\n  const [expanded, setExpanded] = React.useState(false);\n  const [isAdded, setIsAdded] = React.useState(false);\n\n  const handleToggleExpand = () => {\n    setExpanded(!expanded);\n  };\n\n  const handleButtonClick = () => {\n    if (isAdded) {\n      onRemove(title);\n    } else {\n      onAdd(title);\n    }\n    setIsAdded(!isAdded);\n  };\n\n  return (\n    <div>\n      <Accordion expanded={expanded} onChange={handleToggleExpand}>\n        <AccordionSummary active={isAdded}>\n          <Typography>{title}</Typography>\n          <StyledButton\n            variant=\"contained\"\n            color={isAdded ? 'error' : 'primary'}\n            onClick={(event) => {\n              event.stopPropagation();\n              handleButtonClick();\n            }}\n          >\n            {isAdded ? 'REMOVE' : 'ADD'}\n          </StyledButton>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Typography>{description}</Typography>\n        </AccordionDetails>\n      </Accordion>\n    </div>\n  );\n};\n\nexport default CustomizedAccordions;\n","/* eslint-disable */\n/*\n * Copyright (c) 2025, WSO2 LLC. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport { useIntl } from 'react-intl';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport Box from '@mui/material/Box';\nimport { styled, alpha } from '@mui/material/styles';\nimport { Typography } from '@mui/material';\nimport xmlFormat from 'xml-formatter';\nimport CustomizedAccordions from './CustomizedAccordions';\nimport Button from '@mui/material/Button';\nimport AutoAwesomeIcon from '@mui/icons-material/AutoAwesome';\n\nconst PREFIX = 'ApiChatResponse';\nconst CONTENT_TYPE: string = 'Content-Type';\nconst APPLICATION_JSON: string = 'application/json';\nconst APPLICATION_XML: string = 'application/xml';\nconst TEXT_PLAIN: string = 'text/plain';\n\nconst classes = {\n    finalOutcomeContent: `${PREFIX}-finalOutcomeContent`,\n    lastQueryWrap: `${PREFIX}-lastQueryWrap`,\n    queryProcessLoader: `${PREFIX}-queryProcessLoader`,\n    responseBannerContentWrap: `${PREFIX}-responseBannerContentWrap`,\n    responseBannerContent: `${PREFIX}-responseBannerContent`,\n    responseBannerTriangle: `${PREFIX}-responseBannerTriangle`,\n    queryBannerTriangle: `${PREFIX}-queryBannerTriangle`,\n    queryBannerContent: `${PREFIX}-queryBannerContent`,\n    queryBannerContentWrap: `${PREFIX}-queryBannerContentWrap`,\n};\n\nconst Root = styled('div')(({ theme }) => ({\n    [`& .${classes.finalOutcomeContent}`]: {\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n        textAlign: 'justify',\n    },\n    [`& .${classes.lastQueryWrap}`]: {\n        margin: theme.spacing(1, 4),\n    },\n    [`& .${classes.queryProcessLoader}`]: {\n        marginTop: theme.spacing(2),\n        display: 'flex',\n        justifyContent: 'center',\n    },\n    [`& .${classes.responseBannerContentWrap}`]: {\n        flexGrow: 1,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    [`& .${classes.queryBannerContentWrap}`]: {\n        flexGrow: 1,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        marginBottom:'40px',\n    },\n    [`& .${classes.responseBannerContent}`]: {\n        width: '100%',\n        background: theme.palette.grey[100],\n        padding: theme.spacing(2),\n        borderRadius: theme.spacing(0, 2, 2, 2),\n        position: 'relative',\n    },\n    [`& .${classes.queryBannerContent}`]: {\n        background: `${alpha(theme.palette.primary.main, 0.1)}`,\n        padding: theme.spacing(2),\n        borderRadius: theme.spacing(2, 0, 2, 2),\n        position: 'relative',\n    },\n    [`& .${classes.queryBannerTriangle}`]: {\n        color: 'red',\n        position: 'absolute',\n        width: theme.spacing(33),\n        height: theme.spacing(33),\n        top: 0,\n        right: theme.spacing(-2),\n        overflow: 'hidden',\n        '&:before': {\n            content: '\"\"',\n            display: 'block',\n            width: '200%',\n            height: '200%',\n            position: 'absolute',\n            borderRadius: '50%',\n            top: 0,\n            left: 0,\n        },\n    },\n    [`& .${classes.responseBannerTriangle}`]: {\n        position: 'absolute',\n        width: theme.spacing(3),\n        height: theme.spacing(3),\n        top: 0,\n        left: theme.spacing(-2),\n        overflow: 'hidden',\n        '&:before': {\n            content: '\"\"',\n            display: 'block',\n            width: '200%',\n            height: '200%',\n            position: 'absolute',\n            borderRadius: '50%',\n            top: 0,\n            right: 0,\n        },\n    },\n}));\n\n\n  interface Message {\n    role: 'user' | 'system'; \n    content: string | Record<string, { title: string; description: string }>;\n    suggestions: boolean;\n  }\n  \n  interface ApiChatResponse {\n    messages: Message[];\n    lastQuery: string;\n    executionResults: any;\n    finalOutcome: Record<string, { title: string, description: string }> | string;\n    onTitlesSelected: (titles: string[]) => void;\n  }\n  \n\n  /**\n * Renders the API Chat results view.\n * @returns {TSX} API Chat results view to render.\n */\n  const ApiChatResponse: React.FC<ApiChatResponse> = ({ \n    messages,\n    lastQuery,\n    executionResults,\n    finalOutcome,\n    onTitlesSelected,\n }) => {\n\n    const intl = useIntl();\n    const [user, setUser] = useState('You');\n    const [selectedTitles, setSelectedTitles] = useState<string[]>([]);\n\n    const copyText = intl.formatMessage({\n        id: 'Apis.Details.ApiChat.components.ApiChatResponse.CopyToClipboard.copyText',\n        defaultMessage: 'Copy cURL to Clipboard',\n    });\n    const copiedText = intl.formatMessage({\n        id: 'Apis.Details.ApiChat.components.ApiChatResponse.CopyToClipboard.copiedText',\n        defaultMessage: 'Copied',\n    });\n\n    const [copyBtnText, setCopyBtnText] = useState(copyText);\n\n    const handleTooltipClose = () => {\n        setCopyBtnText(copyText);\n    };\n\n    /**\n     * Infer the content type of the response.\n     *\n     * @param {string} str Response body.\n     * @returns {string} Content type of the response.\n     */\n    const inferContentType = (str: string) => {\n        const trimmedStr = str.trim();\n        const xmlRegex = /^\\s*<[^>]+>/;\n        const jsonRegex = /^[\\\\{\\\\[](.*?)[\\\\}\\]]$/;\n\n        if (xmlRegex.test(trimmedStr)) {\n            return APPLICATION_XML;\n        }\n        if (jsonRegex.test(trimmedStr)) {\n            try {\n                JSON.parse(trimmedStr);\n                return APPLICATION_JSON;\n            } catch (error) {\n                // Handle potential invalid JSON structure\n            }\n        }\n        return TEXT_PLAIN;\n    };\n\n    /**\n     * Renders the execution result body.\n     *\n     * @param {any} executionResult Execution result to render.\n     * @returns {JSX.Element} Execution result body to render.\n     */\n    const renderExecutionResultBody = (executionResult: any) => {\n        // Determine content type\n        let contentType = APPLICATION_JSON;\n        const noContentType = executionResult.headers && Object.keys(executionResult.headers).length === 0;\n        if (noContentType) {\n            contentType = inferContentType(executionResult.body);\n        } else {\n            contentType = executionResult.headers[CONTENT_TYPE];\n        }\n\n        if (contentType.includes(APPLICATION_JSON) && executionResult.body !== '') {\n        } else if (contentType.includes(APPLICATION_XML) && executionResult.body !== '') {\n            const formattedMessage = xmlFormat(executionResult.body);\n        } else {\n            return (\n                <Typography variant='body1'>\n                    {executionResult.body}\n                </Typography>\n            );\n        }\n    };\n\n    const capitalizeWords = (text: string): string => {\n        if (typeof text !== 'string') return text;\n        return text\n            .split(' ')\n            .map(word => word.charAt(0).toUpperCase() + word.slice(1)) \n            .join(' ');\n    };\n\n    const handleAddTitle = (title: string) => {\n        setSelectedTitles((prevTitles) => [...prevTitles, title]);\n    };\n\n    const handleRemoveTitle = (title: string) => {\n        setSelectedTitles((prevTitles) => prevTitles.filter((t) => t !== title));\n    };\n\n    const handleApplyChanges = () => {\n        onTitlesSelected(selectedTitles);\n    };\n\n    return (\n        <Box>\n            {messages.map((message, index) => (\n                <Box key={index} display=\"flex\" justifyContent={message.role === 'user' ? 'flex-end' : 'flex-start'}>\n                    {message.role === 'system' ? (\n                        <Box ml={2} mr={6} mt={-2.5}>\n                            <Box \n                                sx={{ \n                                    display: 'flex', \n                                    alignItems: 'center', \n                                    justifyContent: 'flex-start', \n                                    gap: 1,\n                                    mb: 1,\n                                    mt: 3\n                                }}\n                            >\n                                <AutoAwesomeIcon fontSize='large' sx={{ color: '#10597f', fontSize: 22 }} />\n                                <Typography variant=\"body2\" sx={{ fontWeight: 'bold' }}>\n                                    Assistant\n                                </Typography>\n                            </Box>\n\n                            <Box\n                                sx={{\n                                    backgroundColor: '#f0f0f0',\n                                    padding: 2,\n                                    borderRadius: '10px',\n                                    position: 'relative',\n                                    boxShadow: '0 4px 12px rgba(0, 0, 0, 0.1)',\n                                    maxWidth: '60%',\n                                    mt: 2,\n                                    mb: 2,\n                                }}\n                            >\n                                <Box\n                                    sx={{\n                                        width: 0,\n                                        height: 0,\n                                        borderLeft: '10px solid transparent',\n                                        borderRight: '10px solid transparent',\n                                        borderBottom: '10px solid #f0f0f0',\n                                        position: 'absolute',\n                                        top: '-10px',\n                                        left: '10px',\n                                    }}\n                                />\n                                {message.suggestions ? (\n                                    <>\n                                        <Typography variant=\"body1\" sx={{ padding: 2, whiteSpace: 'pre-line' }}>\n                                            I have successfully generated your API! To further enhance its functionality and\n                                            performance, here are a few expert recommendations to elevate your API to the next\n                                            level.{\"\\n\"}{\"\\n\"}If everything looks good, you can click the{\" \"}\n                                            <span style={{ color: '#3764b3', fontWeight: 'bold' }}>Create API</span> button\n                                            on the right-side panel to proceed.\n                                        </Typography>\n\n                                        <Typography variant=\"body1\">\n                                            {(() => {\n                                                let parsedContent;\n\n                                                // Attempt to parse the message content\n                                                if (typeof message.content === 'string') {\n                                                    try {\n                                                        parsedContent = JSON.parse(message.content);\n                                                    } catch (error) {\n                                                        console.error('Failed to parse message content:', error);\n                                                        return (\n                                                            <Typography variant=\"body2\" color=\"error\">\n                                                                Unable to display suggestions due to a formatting issue in the content.\n                                                            </Typography>\n                                                        );\n                                                    }\n                                                } else {\n                                                    parsedContent = message.content;\n                                                }\n\n                                                // Check if parsed content is a valid object\n                                                if (\n                                                    typeof parsedContent === 'object' &&\n                                                    parsedContent !== null &&\n                                                    !Array.isArray(parsedContent)\n                                                ) {\n                                                    return Object.keys(parsedContent).map((key) => {\n                                                        const item = parsedContent[key];\n\n                                                        // Validate item structure\n                                                        if (item && item.title && item.description) {\n                                                            return (\n                                                                <CustomizedAccordions\n                                                                    key={key}\n                                                                    title={capitalizeWords(item.title)}\n                                                                    description={capitalizeWords(item.description)}\n                                                                    onAdd={handleAddTitle}\n                                                                    onRemove={handleRemoveTitle}\n                                                                />\n                                                            );\n                                                        } else {\n                                                            console.warn(`Invalid item structure for key: ${key}`, item);\n                                                            return null;\n                                                        }\n                                                    });\n                                                } else {\n                                                    console.error('Parsed content is not a valid object:', parsedContent);\n                                                    return (\n                                                        <Typography variant=\"body2\" color=\"error\">\n                                                            Unable to render suggestions due to invalid content format.\n                                                        </Typography>\n                                                    );\n                                                }\n                                            })()}\n                                        </Typography>\n\n                                        <Box marginTop={2}>\n                                            <Button variant=\"contained\" color=\"primary\" onClick={handleApplyChanges}>\n                                                APPLY CHANGES\n                                            </Button>\n                                        </Box>\n                                    </>\n                                ) : (\n                                    <Typography variant=\"body1\" style={{ whiteSpace: 'pre-wrap' }}>\n                                        {message.content}\n                                    </Typography>\n                                )}\n                            </Box>\n                        </Box>\n                    ) : (\n                        <Box\n                            sx={{\n                                maxWidth: '60%',\n                                textAlign: 'right',\n                                mt: 2,\n                                mb: 2,\n                                mr: 3,\n                            }}\n                        >\n                            <Box \n                                sx={{ \n                                    display: 'flex', \n                                    alignItems: 'center', \n                                    justifyContent: 'flex-end', \n                                    gap: 1,\n                                    mb: 1 \n                                }}\n                            >\n                                <AccountCircleIcon fontSize='large' sx={{ color: '#10597f', fontSize: 25 }} />\n                                <Typography variant=\"body2\" sx={{ fontWeight: 'bold' }}>\n                                    You\n                                </Typography>\n                            </Box>\n                            <Box sx={{ position: 'relative' }}>\n                                <Box\n                                    sx={{\n                                        width: 0,\n                                        height: 0,\n                                        borderLeft: '10px solid transparent',\n                                        borderRight: '10px solid transparent',\n                                        borderBottom: '10px solid #e3f5fa',\n                                        position: 'absolute',\n                                        top: '-10px',\n                                        right: '10px',\n                                    }}\n                                />\n                                <Box\n                                    sx={{\n                                        backgroundColor: '#e3f5fa',\n                                        padding: 2,\n                                        borderRadius: '10px',\n                                        color: '#000',\n                                        boxShadow: '0 4px 12px rgba(0, 0, 0, 0.1)',\n                                        display: 'inline-block',\n                                    }}\n                                >\n                                    <Typography variant=\"body1\">{message.content}</Typography>\n                                </Box>\n                            </Box>\n                        </Box>\n                    )}\n                </Box>\n            ))}\n        </Box>\n    );\n};\n\nexport default ApiChatResponse;\n","/*\n * Copyright (c) 2025, WSO2 LLC. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport { useIntl } from 'react-intl';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport { styled } from '@mui/material/styles';\nimport { usePublisherSettings } from 'AppComponents/Shared/AppContext';\n\nconst PREFIX = 'SampleQueryCard';\n\nconst classes = {\n    sampleQuery: `${PREFIX}-sampleQuery`,\n    sampleQueryCard: `${PREFIX}-SampleQueryCard`,\n};\n\nconst Root = styled('div')(({ theme }) => ({\n    [`& .${classes.sampleQuery}`]: {\n        maxHeight: '25px',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n        width: '250px',\n    },\n}));\n\nexport interface SampleQuery {\n    scenario: string;\n    query: string;\n}\n\ninterface SampleQueryCardProps {\n  onExecuteClick: (query: string) => void;\n  queryHeading: string;\n  queryData: string;\n}\n\nconst SampleQueryCard: React.FC<SampleQueryCardProps> = ({\n    onExecuteClick,\n    queryHeading,\n    queryData,\n}) => {\n    const intl = useIntl();\n\n    const copyText = intl.formatMessage({\n        id: 'Apis.Details.ApiChat.components.CopyToClipboard.copyText',\n        defaultMessage: 'Copy to Clipboard',\n    });\n    const copiedText = intl.formatMessage({\n        id: 'Apis.Details.ApiChat.components.CopyToClipboard.copiedText',\n        defaultMessage: 'Copied',\n    });\n\n    const [copyBtnText, setCopyBtnText] = useState(copyText);\n\n    const handleTooltipClose = () => {\n        setCopyBtnText(copyText);\n    };\n\n    const handleCopyClick = (query: string) => {\n        setCopyBtnText(copiedText);\n    };\n\n    const { data: settings }: any = usePublisherSettings();\n    const aiAuthTokenProvided = settings?.aiAuthTokenProvided;\n    const designAssistantEnabled = settings?.designAssistantEnabled;\n\n    return (\n        <Root>\n            <Card \n                className={classes.sampleQueryCard}\n                sx={{ \n                    '&:hover': {\n                        backgroundColor: 'transparent',\n                        cursor: 'default'\n                    },\n                    border: 'none',\n                }}\n            >\n                <CardContent sx={{ '&:last-child': { paddingBottom: '16px' } }}>\n                    <Box display=\"flex\" flexDirection=\"row\" height={1} alignItems=\"center\" justifyContent=\"space-between\">\n                        <Box>\n                            <Typography variant=\"body1\">\n                                {queryHeading}\n                            </Typography>\n                        </Box>\n                        <Box>\n                            <Button\n                                size=\"small\"\n                                id=\"sample-query-execute\"\n                                variant=\"outlined\"\n                                onClick={() => onExecuteClick(queryHeading)}\n                                disabled={!designAssistantEnabled || !aiAuthTokenProvided}\n                            >\n                                {intl.formatMessage({\n                                    id: 'Apis.Details.ApiChat.components.SampleQueryCard.executeButton',\n                                    defaultMessage: 'Try It',\n                                })}\n                            </Button>\n                        </Box>\n                    </Box>\n                </CardContent>\n            </Card>\n        </Root>\n    );\n};\n\nexport default SampleQueryCard;\n","\n      import API from \"!../../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../../../../../node_modules/css-loader/dist/cjs.js!./swagger-ui-overrides.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../../../../../node_modules/css-loader/dist/cjs.js!./swagger-ui-overrides.css\";\n       export default content && content.locals ? content.locals : undefined;\n","/* eslint-disable */\n/*\n * Copyright (c) 2025, WSO2 LLC. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './swagger-ui-overrides.css';\nimport SwaggerUILib from 'swagger-ui-react';\nimport 'swagger-ui-react/swagger-ui.css';\n\n\n// Plugins to disable specific features in Swagger UI\nconst disableAuthorizeAndInfoPlugin = function () {\n    return {\n        wrapComponents: {\n            info: () => () => null,\n            authorizeBtn: () => () => null\n        },\n    };\n};\n\nconst disableTryItOutPlugin = function () {\n    return {\n        statePlugins: {\n            spec: {\n                wrapSelectors: {\n                    allowTryItOutFor: () => () => false,\n                },\n            },\n        },\n    };\n};\n\n/**\n * SwaggerUI component to render the OpenAPI spec.\n * \n * @param {Object} props - Component props\n * @param {Object} props.spec - The OpenAPI spec in JSON or YAML format\n */\nconst SwaggerUI = ({ spec }) => {\n    const componentProps = {\n        spec,\n        validatorUrl: null,\n        docExpansion: 'list',\n        defaultModelsExpandDepth: -1,\n        plugins: [disableAuthorizeAndInfoPlugin, disableTryItOutPlugin],\n    };\n\n    return (\n        <div\n            style={{\n                height: '100%',\n                maxHeight: '70vh',\n                overflowY: 'auto',\n            }}\n        >\n            <SwaggerUILib {...componentProps} />\n        </div>\n    );\n};\n\nSwaggerUI.propTypes = {\n    spec: PropTypes.object.isRequired,\n};\n\nexport default SwaggerUI;\n","/*\n * Copyright (c) 2025, WSO2 LLC. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { Editor as MonacoEditor } from '@monaco-editor/react';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Switch from '@mui/material/Switch';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport SwaggerUI from './swaggerUIChatbot/SwaggerUI';\nimport { Typography } from '@mui/material';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport 'swagger-ui-react/swagger-ui.css';\nimport CloudDownloadRounded from '@mui/icons-material/CloudDownloadRounded';\n\ninterface DisplayCodeProps {\n  finalOutcomeCode: string;\n  apiType: string;\n  sessionId: string;\n}\n\nconst DisplayCode: React.FC<DisplayCodeProps> = ({ finalOutcomeCode, apiType, sessionId }) => {\n  const [showCode, setShowCode] = useState(false);\n\n  const handleDownload = () => {\n    const fileExtension = apiType === 'GraphQL' ? 'graphql' : 'yaml';\n    const blob = new Blob([finalOutcomeCode], { type: 'text/plain' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `api-source.${fileExtension}`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n\n  return (\n    <Box sx={{ width: '100%', height: '85vh' }}>\n      <Stack spacing={0} sx={{ height: '100%', mt: 2 }}>\n        <Box\n          sx={{\n            height: '5%',\n            display: 'flex',\n            justifyContent: 'flex-end',\n            alignItems: 'flex-end',\n            paddingRight: '0px',\n            paddingBottom: '10px',\n          }}\n        >\n            {apiType === 'REST' && (\n\n                  <FormControlLabel\n                  label={\n                    <Typography sx={{ fontSize: 16}} >\n                      View Source\n                    </Typography>\n                  }\n                  control={\n                      <Switch\n                        checked={showCode}\n                        onChange={() => setShowCode((prevState) => !prevState)}\n                      />\n                  }\n                  labelPlacement='start'\n                  sx={{ marginRight: '20px' }}\n                  />\n            )}\n            <Button\n                size=\"small\"\n                variant=\"outlined\"\n                color=\"primary\"\n                onClick={handleDownload}\n                sx={{ marginRight: '0px', minWidth: '100px', height: '35px', px: 2, }}\n            >\n                Download\n                <CloudDownloadRounded sx={{ marginLeft: '8px' }} />\n            </Button>\n        </Box>\n\n        {apiType === 'REST' ? (\n            <Box sx={{ height: '100%', display: 'flex', flex:1, minHeight: 0}}>\n               { showCode ? (\n                <MonacoEditor\n                  width=\"100%\"\n                  height=\"100%\"\n                  language=\"yaml\"\n                  theme=\"vs-dark\"\n                  value={finalOutcomeCode}\n                  options={{\n                    readOnly: true,\n                    minimap: { enabled: false },\n                    scrollBeyondLastLine: false,\n                    wordWrap: 'on',\n                  }}\n                />\n              ) : (\n                <Box sx={{ width: '100%', height: '100%', overflow: 'auto', flex: 1 }}>\n                  <SwaggerUI spec={finalOutcomeCode} />\n                </Box>\n              )}\n            </Box>\n        ) : (\n          <Box sx={{ height: '100%', display: 'flex', flex:1, minHeight: 0 }}>\n            <MonacoEditor\n              width=\"100%\"\n              height=\"100%\"\n              language=\"yaml\"\n              theme=\"vs-dark\"\n              value={finalOutcomeCode}\n              options={{\n                readOnly: true,\n                minimap: { enabled: false },\n                scrollBeyondLastLine: false,\n                wordWrap: 'on',\n              }}\n            />\n          </Box>\n        )}\n\n        <Box\n          sx={{\n            height: '5%',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n        >\n        </Box>\n      </Stack>\n    </Box>\n  );\n};\n\nexport default DisplayCode;\n","/*\n * Copyright (c) 2025, WSO2 LLC. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport * as React from 'react';\nimport { Button, CircularProgress} from '@mui/material';\nimport { useHistory } from 'react-router-dom';\nimport { useIntl } from 'react-intl';\nimport Alert from 'AppComponents/Shared/Alert';\nimport YAML from 'js-yaml';\nimport API from 'AppData/api';\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions } from '@mui/material';\n\ninterface AlertDialogProps {\n  loading?: boolean;\n  taskStatus: string;\n  spec: string;\n  apiType: string;\n  settings: any;\n  multiGateway: any;\n}\n\nconst AlertDialog: React.FC<AlertDialogProps> = ({loading = false, taskStatus, spec, apiType, settings, multiGateway}) => {\n  const [open, setOpen] = React.useState(false);\n  const [showProgress, setShowProgress] = React.useState(false);\n  const intl = useIntl();\n  const history = useHistory();\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  /**\n   * Method to handle error scenarios\n   * \n   * @param messageId messageId\n   * @param defaultMessage defaultMessage\n   */\n    const handleError = (messageId: string, defaultMessage: string) => {\n      Alert.error(intl.formatMessage({ id: messageId, defaultMessage }));\n      throw new Error(defaultMessage);\n    };\n\n  /**\n   * Validate the provided GraphQL schema as a file\n   * \n   * @param definition API definition for graphql API returned from LLM\n   * @returns validation response object\n   */\n  async function validateGraphQLSchema(definition: any) { \n    try {\n      const response = await API.validateGraphQLFile(definition);\n      if (response != null) {\n        return response.obj;\n      }\n      throw new Error(\"Invalid response received while validating GraphQL schema\");\n    } catch (error) {\n        console.error(\"Error validating the GraphQL schema: \", error);\n        throw error;\n    }\n  }\n\n  /**\n   * Validate the provided OpenAPI definition as a file\n   * \n   * @param definition API definition for REST API returned from LLM\n   * @returns validation response object\n   */\n  async function validateOpenAPIDefinition(definition: any) { \n    try {\n      const response = await API.validateOpenAPIByFile(definition);\n      if (response != null) {\n        return response.obj;\n      }\n      throw new Error(\"Invalid response received while validating OpenAPI definition\");\n    } catch (error) {\n        console.error(\"Error validating the OpenAPI definition: \", error);\n        throw error;\n    }\n  }\n\n  /**\n   * Validate the provided AsyncAPI definition as a file\n   * \n   * @param definition API definition for AsyncAPI returned from LLM\n   * @returns validation response object\n   */\n  async function validateAsyncAPIDefinition(definition: any) { \n    try {\n      const response = await API.validateAsyncAPIByFile(definition);\n      if (response != null) {\n        return response.obj;\n      }\n      throw new Error(\"Invalid response received while validating AsyncAPI definition\");\n    } catch (error) {\n        console.error(\"Error validating the AsyncAPI definition: \", error);\n        throw error;\n    }\n  }\n\n  /**\n   * Method used to create a file object of the API definitions\n   * \n   * @param spec The API spec\n   * @param type The content type\n   * @returns \n   */\n  const createBlobAndFile = (spec: string, type: string) => {\n    const blob = new Blob([spec], { type });\n    return new File([blob], `apiDefinition.${type === 'text/plain' ? 'graphql' : 'yaml'}`, { type: `${type};charset=utf-8` });\n  };\n\n  /**\n   * Handles redirecting the user to create an API\n   * @returns if an error occurs\n   */\n  const handleCreate = async () => {\n    setShowProgress(true);\n\n    try {\n      \n      const endpointValue = (apiType === 'WebSocket' ? 'ws://localhost:9099' : 'http://localhost:8080');\n      let apiName = (apiType === 'REST' ? 'Banking Transaction API' : 'Live Streaming API');\n      let apiVersion = '1.0.0';\n      let apiContext = '/apiContext';\n\n      interface Info {\n        title: string;\n        version: string;\n      }\n      \n      interface ParsedYAML {\n        info: Info;\n      }\n\n      const createData = (type: string, file: File, graphQLInfo?: any) => ({\n        name: apiName,\n        version: apiVersion,\n        context: apiContext,\n        gatewayType: 'wso2/synapse',\n        gatewayVendor: 'wso2',\n        endpoint: endpointValue,\n        protocol: type,\n        asyncTransportProtocols: type,\n        source: 'DesignAssistant',\n        file,\n        graphQLInfo\n      });\n\n      let validationResponse: any;\n      let definition: File;\n      let graphQLInfo: any;\n  \n      if (apiType === 'REST') {\n        const jsonContent: ParsedYAML = YAML.load(spec) as ParsedYAML;\n\n        if (jsonContent && jsonContent.info) {\n          apiName = jsonContent.info.title? jsonContent.info.title : apiName;\n          apiVersion = jsonContent.info.version? jsonContent.info.version : apiVersion;\n          apiContext = apiName ? ('/' + apiName.replace(/[&/\\\\#,+()$~%.'\":*?<>{}\\s]/g, '')) : apiContext;\n        }\n\n        definition = createBlobAndFile(spec, 'text/yaml');\n        validationResponse = await validateOpenAPIDefinition(definition);\n  \n        if (!validationResponse?.isValid) {\n          handleError('CreateAPIWithAI.components.AlertDialog.error.create.http.API', 'The provided OpenAPI definition is invalid. Please try again.');\n        }\n        const data = createData(apiType, definition);\n        history.push('/apis/create/openapi', {\n            data: data,\n            settings: settings,\n            multiGateway: multiGateway\n        });\n      } else if (['SSE', 'WebSocket', 'WebSub'].includes(apiType)) {\n        const jsonContent: ParsedYAML = YAML.load(spec) as ParsedYAML;\n\n        if (jsonContent && jsonContent.info) {\n          apiName = jsonContent.info.title? jsonContent.info.title : apiName;\n          apiVersion = jsonContent.info.version? jsonContent.info.version : apiVersion;\n          apiContext = apiName ? ('/' + apiName.replace(/[&/\\\\#,+()$~%.'\":*?<>{}\\s]/g, '')) : apiContext;\n        }\n\n        definition = createBlobAndFile(spec, 'text/yaml');\n        validationResponse = await validateAsyncAPIDefinition(definition);\n  \n        if (!validationResponse?.isValid) {\n          handleError('CreateAPIWithAI.components.AlertDialog.error.create.async.API', 'The provided AsyncAPI definition is invalid. Please try again.');\n        }\n        const data = createData(apiType, definition);\n        history.push('/apis/create/asyncapi', {\n          data: data,\n          settings: settings,\n          multiGateway: multiGateway\n        });\n      } else if (apiType === 'GraphQL') {\n        definition = createBlobAndFile(spec, 'text/plain');\n        validationResponse = await validateGraphQLSchema(definition);\n        apiName = 'GraphQLAPI';\n        apiContext = '/graphqlapi';\n        if (validationResponse?.isValid) {\n          graphQLInfo = validationResponse.graphQLInfo;\n          const data = createData(apiType, definition, graphQLInfo);\n          history.push('/apis/create/graphQL', {\n             data: data,\n             settings: settings,\n             multiGateway: multiGateway\n          });\n        } else {\n          handleError('CreateAPIWithAI.components.AlertDialog.error.create.graphql.API', 'The provided GraphQL schema is invalid. Please try again.');\n        }\n      } \n      setShowProgress(false);\n    } catch (error) {\n      setShowProgress(false);\n      console.error('Error during API creation:', error);\n      Alert.error(intl.formatMessage({ id: 'CreateAPIWithAI.components.AlertDialog.error.create.API', defaultMessage: 'Error Creating API' }));\n      throw error;\n    }\n  };\n\n  return (\n    <React.Fragment>      \n      <Button\n        variant=\"contained\"\n        onClick={handleClickOpen}\n        sx={{ marginRight: '10px', minWidth: '120px',  height: '35px', display: 'flex', gap:1, alignItems: 'center'}}  \n        disabled={loading || taskStatus === '' || spec === ''}\n      >\n        {intl.formatMessage({\n          id: 'Apis.Create.Default.APICreateDefault.create.btn',\n          defaultMessage: 'Create API'\n        })}\n        {' '}\n        {showProgress &&  <CircularProgress size={16} color='inherit'/> }\n      </Button>\n\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"Create API\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Are you ready to create your API and move to the API Creation Wizard?\n          </DialogContentText>\n        </DialogContent>\n\n        <DialogActions>\n          <Button onClick={handleClose}>\n            NO\n          </Button>\n          <Button\n            onClick={handleCreate}\n            sx={{\n              border: '1px solid #1C7EA7'\n            }}\n            autoFocus\n          >\n            YES\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </React.Fragment>\n  );\n};\n\nexport default AlertDialog;","/*\n * Copyright (c) 2025, WSO2 LLC. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.handleTooltipClose\n */\nimport Typography from '@mui/material/Typography';\nimport Stack from '@mui/material/Stack';\nimport Chip from '@mui/material/Chip';\nimport Box from '@mui/material/Box';\n\nconst WelcomeMessage = () => {    \n    return (\n      <Stack spacing={2} sx={{ alignItems: 'center', textAlign: 'center' }}>\n          <Box display='flex'>\n              <Typography sx={{ color: '#212020', fontWeight: 'bold', fontSize: '2rem', marginTop: '20px', paddingTop: '10px'}}>\n              Welcome to the\n                <Typography component='span' sx={{ color: '#004d99', fontWeight: 'bold', fontSize: '2rem' }}>\n                    {' API Design Assistant!'}\n                </Typography>\n                <Chip\n                    label='Experimental'\n                    variant='outlined'\n                    size='small'\n                    color='primary'\n                    sx={{\n                      ml: 1,\n                      mb:'40px',\n                    }}\n                />\n              </Typography>\n          </Box>\n    \n            <Typography sx={{ whiteSpace: 'pre-line', fontSize: '1.0rem'  }}>\n                        Provide API details or choose a template to get started!\n            </Typography>\n      </Stack>\n    );\n};\nexport default WelcomeMessage\n","/* eslint-disable */\n/*\n * Copyright (c) 2025, WSO2 LLC. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\n\nconst LoadingDots: React.FC = () => {\n  const dotStyle: React.CSSProperties = {\n    width: '8px',\n    height: '8px',\n    backgroundColor: '#374d70',\n    borderRadius: '50%',\n    animation: 'loading-dots 1.4s infinite ease-in-out',\n  };\n\n  const containerStyle: React.CSSProperties = {\n    display: 'flex',\n    alignItems: 'left',\n    gap: '10px',\n  };\n\n  const dotsStyle: React.CSSProperties = {\n    display: 'flex',\n    gap: '5px',\n  };\n\n  const textStyle: React.CSSProperties = {\n    fontSize: '15px',\n    color: '#34445e',\n    fontWeight: '600',\n    marginLeft: '16px',\n    fontFamily: 'Arial, sans-serif',\n  };\n\n  const keyframesStyle = `\n    @keyframes loading-dots {\n      0%, 80%, 100% {\n        transform: scale(0);\n      }\n      40% {\n        transform: scale(1);\n      }\n    }\n  `;\n\n  return (\n    <>\n      <style>\n        {keyframesStyle}\n      </style>\n      <div style={{ ...containerStyle, display: 'flex', alignItems: 'center', justifyContent: 'flex-start', marginLeft: '16px' }}>\n        <span style={textStyle}>Generating a response</span>\n        <div style={dotsStyle}>\n          <span style={{ ...dotStyle, animationDelay: '-0.32s' }}></span>\n          <span style={{ ...dotStyle, animationDelay: '-0.16s' }}></span>\n          <span style={{ ...dotStyle, animationDelay: '0s' }}></span>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default LoadingDots;\n","/*eslint-disable*/\nconst predefinedAnswers = {\n    hi: 'Hello there!, How can I assist you today?',\n    hiii: 'Hello there!, How can I assist you today?',\n    hello: 'Hi! How can I assist you today?',\n    hey: 'Hey! How can I help you?',\n    greetings: 'Greetings! What can I assist you with?',\n    thanks: 'You\\'re welcome!',\n    bye: 'Goodbye! Have a great day!',\n    goodbye: 'Goodbye! Have a great day!',\n    'thank you': 'You\\'re welcome!',\n    'thank you for your help': 'You\\'re welcome!',\n    'good morning': 'Good morning! How can I assist you today?',\n    'good afternoon': 'Good afternoon! What can I do for you?',\n    'good evening': 'Good evening! How can I help?',\n    'hey there': 'Hey! What can I assist you with?',\n    'hi there': 'Hello! How may I assist you?',\n    'hello there': 'Hello! How can I assist you today?',\n    'how are you': 'I\\'m doing well, thank you! How can I help you?',\n    'can you help me': 'You can ask me to create an API you want!',\n    'what can I ask you': 'You can ask me to create an API you want!',\n    'what can you do': 'I can help you with creating APIs based on the information you share with me',\n    'what do you do': 'I can help you create APIs based on the information you share with me!',\n    'what do you know': 'I know a lot about creating APIs! What API are you looking to create?',\n    'what are you': 'I am the API Design Assistant. I can help you create APIs based on the information you share with me!',\n    'what are u': 'I am the API Design Assistant. I can help you create APIs based on the information you share with me!',\n    'who are you': 'I am the API Design Assistant. I can help you create APIs based on the information you share with me!',\n    'who are u': 'I am the API Design Assistant. I can help you create APIs based on the information you share with me!',\n    'what is your name': 'I am the API Design Assistant. I can help you create APIs based on the information you share with me!',\n    'whats ur name': 'I am the API Design Assistant. I can help you create APIs based on the information you share with me!',\n};\n\nconst calculateStringSimilarity = (string1, string2) => {\n    const str1 = string1.toLowerCase();\n    const str2 = string2.toLowerCase();\n\n    if (str1.length < 2 || str2.length < 2) return 0;\n\n    const subsequenceMap = new Map();\n    for (let i = 0; i < str1.length - 1; i++) {\n        const subsequence = str1.substr(i, 2);\n        subsequenceMap.set(subsequence, subsequenceMap.has(subsequence) ? subsequenceMap.get(subsequence) + 1 : 1);\n    }\n\n    let matchCount = 0;\n    for (let j = 0; j < str2.length - 1; j++) {\n        const subsequence = str2.substr(j, 2);\n        const count = subsequenceMap.has(subsequence) ? subsequenceMap.get(subsequence) : 0;\n        if (count > 0) {\n            subsequenceMap.set(subsequence, count - 1);\n            matchCount++;\n        }\n    }\n\n    return (matchCount * 2) / (str1.length + str2.length - 2);\n};\n\nconst findBestMatchingAnswer = (inputString) => {\n    let bestMatch = null;\n    let bestScore = -1;\n\n    const searchString = inputString.toLowerCase();\n\n    if (searchString.length < 2) return null;\n\n    for (const [key] of Object.entries(predefinedAnswers)) {\n        const comparisonString = key.toLowerCase();\n\n        const score = calculateStringSimilarity(searchString, comparisonString);\n\n        if (score > bestScore) {\n            bestScore = score;\n            bestMatch = key;\n        }\n    }\n\n    if (bestScore < 0.8) return null;\n\n    return predefinedAnswers[bestMatch];\n};\n\nexport default findBestMatchingAnswer;\n","/*eslint-disable*/\n/*\n * Copyright (c) 2025, WSO2 LLC. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useRef, useEffect } from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\nimport { Typography } from '@mui/material';\nimport ApiChatBanner from './components/ApiChatBanner';\nimport ApiChatExecute from './components/ApiChatExecute';\nimport ApiChatResponse from './components/ApiChatResponse';\nimport SampleQueryCard from './components/SampleQueryCard';\nimport DisplayCode from './components/DisplayCode';\nimport AlertDialog from './components/AlertDialog';\nimport WelcomeMessage from './components/WelcomeMessage';\nimport LoadingDots from './components/LoadingDots';\nimport { useHistory } from 'react-router-dom';\nimport API from 'AppData/api';\nimport { usePublisherSettings } from 'AppComponents/Shared/AppContext';\nimport { FormattedMessage } from 'react-intl';\nimport LaunchIcon from '@mui/icons-material/Launch';\nimport Alert from '@mui/material/Alert';\nimport findBestMatchingAnswer from './components/SimilaritySearch';\n\n/**\n * Renders the Create API with AI UI.\n * @returns {JSX} Create API with AI page to render.\n */\nconst ApiCreateWithAI = () => {\n    const [sessionId, setSessionId] = useState(null);\n    const [inputQuery, setInputQuery] = useState('');\n    const [lastQuery, setLastQuery] = useState('');\n    const [finalOutcome, setFinalOutcome] = useState('');\n    const [apiType, setApiType] = useState('');\n    const [finalOutcomeCode, setFinalOutcomeCode] = useState('');\n    const [executionResults, setExecutionResults] = useState([]);\n    const [messages, setMessages] = useState([]);\n    const [taskId, setTaskId] = useState('');\n    const [taskStatus, setTaskStatus] = useState('');\n    const [loading, setLoading] = useState(false); \n    const [isSuggestion, setIsSuggestion] = useState('');\n    const [selectedTitles, setSelectedTitles] = useState([]);\n    const [paths, setPaths] = useState([]);\n    const [apiTypeSuggestion, setApiTypeSuggestion] = useState('');\n    const [missingValues, setMissingValues] = useState('');\n    const history = useHistory();\n    const [lastRenderedComponent, setLastRenderedComponent] = useState(<ApiChatBanner />);\n    const { data: settings, isLoading } = usePublisherSettings();\n    const [specEnrichmentError, setSpecEnrichmentError] = useState('');\n    const [specEnrichmentErrorLevel, setSpecEnrichmentErrorLevel] = useState('');\n    const [multiGateway, setMultiGateway] = useState([]);\n\n    let gatewayDetails = {\n        'wso2/synapse': {\n            value: 'wso2/synapse',\n            name: 'Universal Gateway',\n            description: 'API gateway embedded in APIM runtime.',\n            isNew: false\n        },\n        'wso2/apk': {\n            value: 'wso2/apk',\n            name: 'Kubernetes Gateway',\n            description: 'API gateway running on Kubernetes.',\n            isNew: false\n        },\n        'AWS': {\n            value: 'AWS',\n            name: 'AWS Gateway',\n            description: 'API gateway offered by AWS cloud.',\n            isNew: false\n        },\n        'Azure': {\n            value: 'Azure',\n            name: 'Azure Gateway',\n            description: 'API gateway offered by Azure cloud.',\n            isNew: false\n        }\n    };\n\n    const chatContainerRef = useRef(null);\n    useEffect(() => {\n        if (chatContainerRef.current) {\n            const element = chatContainerRef.current;\n            element.scrollTop = element.scrollHeight;\n        }\n    }, [messages]);\n\n    useEffect(() => {\n        if (taskStatus === 'COMPLETE') {\n            setLastRenderedComponent(\n                <DisplayCode \n                    finalOutcomeCode={finalOutcomeCode}\n                    apiType={apiType}\n                    sessionId={sessionId}\n                />\n            );\n        } else if (taskStatus === null) {\n            setLastRenderedComponent(<ApiChatBanner />);\n        }\n    }, [taskStatus]);\n\n    useEffect(() => {\n        if (!isLoading) {\n            const apiTypes = settings.gatewayFeatureCatalog.apiTypes;\n            const data = settings.gatewayTypes;\n            const settingsEnvList = settings.environment;\n            const filteredEnvironments = settingsEnvList ? settingsEnvList\n                .filter(env => env?.mode !== 'READ_ONLY') : [];\n            const distinctGatewayTypes = [...new Set(filteredEnvironments.map(env => env.gatewayType))];\n            const commonGatewayTypes = distinctGatewayTypes.filter(type => data.includes(type));\n            const gatewayTypes = commonGatewayTypes.map(item => {\n                if (item === \"Regular\") return \"wso2/synapse\";\n                if (item === \"APK\") return \"wso2/apk\";\n                return item;\n            });\n\n            const customGateways = {};\n            gatewayTypes.forEach((gw) => {\n                if (!gatewayDetails[gw]) {\n                    const customGateway = {\n                        value: gw,\n                        name: gw + \" Gateway\",\n                        description: \"Custom API Gateway for \" + gw,\n                        isNew: false\n                    };\n                    customGateways[gw] = customGateway;\n                }\n            });\n\n            gatewayDetails = {...gatewayDetails, ...customGateways};\n            setMultiGateway(apiTypes?.rest.filter(t=>gatewayTypes.includes(t)).map(type => gatewayDetails[type]));\n\n        }\n    }, [isLoading]);\n\n    const handleQueryChange = (event) => {\n        const { value } = event.target;\n        setInputQuery(value);\n    };\n\n    const handleExecute = async () => {\n        if (inputQuery.length !== 0) {\n            const query = inputQuery;\n            setInputQuery('');\n            setLastQuery(inputQuery);    \n            setTaskStatus('IN_PROGRESS');\n\n            setMessages((prevMessages) => [\n                ...prevMessages,\n                { role: 'user', content: query },\n            ]);\n\n            if (!sessionId) {\n                const newSessionId = generateSessionId();\n                setSessionId(newSessionId);\n                sendInitialRequest(query, newSessionId);\n            } else {\n                sendInitialRequest(query, sessionId);\n            }\n        }\n    };\n\n    const handleExecuteSampleQuery = async (query) => {\n        setInputQuery('');\n        setLastQuery(query);\n        setTaskStatus('IN_PROGRESS');\n\n        setMessages((prevMessages) => [\n            ...prevMessages,\n            { role: 'user', content: query }\n        ]);\n\n        if (!sessionId) {\n            const newSessionId = generateSessionId();\n            setSessionId(newSessionId);\n            sendInitialRequest(query, newSessionId);\n        } else {\n            sendInitialRequest(query, sessionId);\n        }\n    };\n\n    const generateSessionId = () => {\n        const uuid = (function() {\n            return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n                const r = Math.random() * 16 | 0;\n                const v = c === 'x' ? r : (r & 0x3 | 0x8);\n                return v.toString(16);\n            });\n        })();\n    \n        const dateTime = new Date().toISOString();\n        const sessionId = `${uuid}-${dateTime}`;\n        const encodedSessionId = btoa(sessionId);\n        const modifiedSessionId = encodedSessionId.slice(0, -2);\n    \n        return encodedSessionId;\n    };\n    \n    const authTokenNotProvidedWarning = (\n        <FormattedMessage\n            id='Apis.Details.ApiChat.warning.authTokenMissing'\n            defaultMessage={'You must provide a token to start using API Design Assistant. To obtain one, '\n                + 'follow the steps provided under {apiAiChatDocLink} '}\n            values={{\n                apiAiChatDocLink: (\n                    <a\n                        id='api-chat-doc-link'\n                        href='https://apim.docs.wso2.com/en/4.6.0/manage-apis/design/create-api/create-api-with-ai/'\n                        target='_blank'\n                        rel='noopener noreferrer'\n                    >\n                        Create APIs with AI\n                        <LaunchIcon\n                            style={{ marginLeft: '2px' }}\n                            fontSize='small'\n                        />\n                    </a>\n                ),\n            }}\n        />\n    );\n\n    const handleSelectedTitles = (titles) => { \n        const titlesString = 'Modify this API to include the following features as well:\\n' + \n        titles.map(title => `- ${title}`).join('\\n');\n        setSelectedTitles(titlesString); \n        setLastQuery(titlesString);\n        setTaskStatus('IN_PROGRESS');\n\n        setMessages((prevMessages) => [\n            ...prevMessages,\n            { role: 'user', content: titlesString }\n        ]);\n\n        sendInitialRequest(titlesString, sessionId);\n    };\n    \n    async function sendQuery(query, sessionId) { \n        try {\n            const queryDesignAssistant = new API();\n            const response = await queryDesignAssistant.sendChatAPIDesignAssistant(query, sessionId);\n    \n            if (!response || typeof response !== 'object') {\n                throw new Error('Invalid response received from API.');\n            }\n    \n            return response;\n        } catch (error) {\n            console.error('Error in sendQuery:', error);\n            throw error;\n        }\n    }\n    \n    const sendInitialRequest = async (query, currentSessionId) => {\n        setFinalOutcome('');\n        setLoading(true);\n\n        try {\n            const queryText = query.trim().toLowerCase();\n            const response = findBestMatchingAnswer(queryText);\n\n            if (response) {\n                setMessages((prevMessages) => [\n                    ...prevMessages,\n                    { role: 'system', content: response, suggestions: false }\n                ]);\n            } else {\n                const jsonResponse = await sendQuery(query, currentSessionId);\n                \n                const {\n                    backendResponse,\n                    isSuggestions,\n                    typeOfApi,\n                    code,\n                    paths,\n                    apiTypeSuggestion,\n                    missingValues,\n                    state\n                } = jsonResponse;\n\n                setFinalOutcome(backendResponse);\n                setIsSuggestion(isSuggestions);\n                setApiType(typeOfApi);\n                setFinalOutcomeCode(code);\n                setPaths(paths);\n                setApiTypeSuggestion(apiTypeSuggestion);\n                setMissingValues(missingValues);\n                setTaskStatus(state);\n\n                if (backendResponse) {\n                    setMessages((prevMessages) => [\n                        ...prevMessages,\n                        { role: 'system', content: backendResponse, suggestions: isSuggestions }\n                    ]);\n                }\n\n                if (apiTypeSuggestion) {\n                    setMessages((prevMessages) => [\n                        ...prevMessages,\n                        { role: 'system', content: apiTypeSuggestion, suggestions: false }\n                    ]);\n                }\n\n                if (missingValues) {\n                    setMessages((prevMessages) => [\n                        ...prevMessages,\n                        { role: 'system', content: missingValues, suggestions: false }\n                    ]);\n                }\n            }\n\n        } catch (error) {\n            console.error('Error:', error);\n\n            let content;\n            try {\n                switch (error.response.status) {\n                    case 401: // Unauthorized\n                        content = 'Apologies for the inconvenience. It appears that your token is invalid or expired. Please'\n                        + ' provide a valid token or upgrade your subscription plan.';\n                        break;\n                    case 429: // Token limit exceeded\n                        content = 'Apologies for the inconvenience. It appears that the token limit has been exceeded.';\n                        break;\n                    case 504: // Handle gateway timeout scenario\n                        content = 'Apologies for the inconvenience. The request has timed out. Please try again.';\n                        break;\n                    default:\n                        content = 'Apologies for the inconvenience. It seems that something went wrong with the'\n                        + ' API Design Assistant. Please try again.';\n                        break;\n                }\n\n            } catch (err) {\n                content = 'Apologies for the inconvenience. It seems that something went wrong with the'\n                + ' API Design Assistant. Please try again.';\n            }\n\n            setMessages((prevMessages) => [\n                ...prevMessages,\n                { role: 'system', content: content, isSuggestions: false }\n            ]);\n\n            throw error;\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const handleBack = () => {\n        if (window.history.length > 1) {\n            history.goBack();\n        } else {\n            history.push('/apis');\n        }\n\n    };\n    \n    return (\n        <div>\n            <Stack \n                direction='column' \n                sx={{ width: '100%', height: 'calc(100vh - 99px)', minHeight: 'calc(100vh - 99px)' }}>\n                <Box sx={{\n                    display: 'flex',\n                    flex: 9,\n                    flexDirection: 'row',\n                    paddingTop:'10px',\n                    marginTop:'10px',\n                    overflow: 'auto',\n                }}>\n                    <Stack\n                        direction='row'\n                        sx={{ width: '100%', height: '100%', overflow: 'auto' }}\n                    >\n                        <Box \n                            sx={{\n                                flex: 1,\n                                display: 'flex',\n                                flexDirection: 'column',\n                                paddingTop:'10px',\n                                paddingBottom:'10px',\n                                marginLeft: '20px',\n                                borderLeft: '1px solid #dee0e8',\n                                borderBottom: '1px solid #dee0e8',\n                                borderTop: '1px solid #dee0e8',\n                                borderRight: '1px solid #dee0e8',\n                                minwidth:'50%'\n                            }}\n                        >\n                            <Stack\n                                direction='column' \n                                sx={{ width: '100%', height: '100%', overflowY: 'auto', overflowX: 'hidden' }}\n                            >\n                                {!lastQuery && (\n                                    <Box>\n                                        <WelcomeMessage/>\n                                        <Stack \n                                            direction=\"column\" \n                                            spacing={2} \n                                            justifyContent=\"center\"\n                                            sx={{ \n                                                width: '420px', \n                                                display: 'flex', \n                                                marginTop: '40px', \n                                                marginLeft: 'auto', \n                                                marginRight: 'auto', \n                                                marginBottom: '0' \n                                            }}\n                                        >\n                                            <SampleQueryCard \n                                                onExecuteClick={handleExecuteSampleQuery} \n                                                queryHeading='Create an API for a banking transaction' \n                                                sx={{ textAlign: 'left' }} \n                                            />\n                                            <SampleQueryCard \n                                                onExecuteClick={handleExecuteSampleQuery} \n                                                queryHeading='Create a GraphQL API to query patient data' \n                                                sx={{ textAlign: 'left' }} \n                                            />  \n                                            <SampleQueryCard \n                                                onExecuteClick={handleExecuteSampleQuery} \n                                                queryHeading='Create an API for live sports scores' \n                                                sx={{ textAlign: 'left' }} \n                                            />                                          \n                                        </Stack>\n                                    </Box>\n                                )}\n                                <Box \n                                    ref={chatContainerRef} \n                                    sx={{ \n                                        flexGrow: 1, \n                                        textAlign: 'left', \n                                        overflowY: 'auto', \n                                        overflowX: 'auto', \n                                        scrollBehavior: 'smooth' }}\n                                >\n                                    {(lastQuery || finalOutcome) && (\n                                        <ApiChatResponse \n                                            messages={messages} \n                                            onTitlesSelected={handleSelectedTitles}\n                                            taskStatus={taskStatus}\n                                        />\n                                    )}\n                                    {loading && <LoadingDots />}\n                                </Box>\n                                <Box>\n                                    <Box \n                                        display='flex' \n                                        alignItems='center' \n                                        flexDirection='column' \n                                        marginTop={1} \n                                        marginBottom={2}\n                                    >\n                                        {/* Handle prepare call failed scenario */}\n                                        {specEnrichmentError && specEnrichmentErrorLevel && (\n                                            <Alert severity={specEnrichmentErrorLevel}>\n                                                <Typography variant='body1'>\n                                                    {specEnrichmentError}\n                                                </Typography>\n                                            </Alert>\n                                        )}\n                                        {/* Handle auth token not provided scenario */}\n                                        {settings && !settings?.aiAuthTokenProvided && (\n                                            <Alert severity='warning'>\n                                                <Typography variant='body1'>\n                                                    {authTokenNotProvidedWarning}\n                                                </Typography>\n                                            </Alert>\n                                        )}\n                                    </Box>\n                                    <Box>\n                                        <ApiChatExecute\n                                            lastQuery={lastQuery}\n                                            inputQuery={inputQuery}\n                                            handleExecute={handleExecute}\n                                            handleQueryChange={handleQueryChange}\n                                            paths={paths} \n                                            loading={loading}\n                                        />\n                                    </Box>\n                                </Box>\n                                \n                            </Stack>\n                        </Box>\n                        <Box \n                            sx={{\n                                flex: 1,\n                                display: 'flex',\n                                flexDirection: 'column',\n                                justifyContent: 'center',\n                                alignItems: 'center',\n                                textAlign: 'left',\n                                borderLeft: '1px solid #dee0e8',\n                                borderRight: '1px solid #dee0e8',\n                                borderBottom: '1px solid #dee0e8',\n                                borderTop: '1px solid #dee0e8',\n                                paddingLeft: '10px',\n                                paddingRight: '10px',\n                                backgroundColor: '#fff',\n                                marginRight: '20px',\n                                minwidth:'50%',\n                                overflowY: 'hidden',\n                                overflowX: 'hidden'\n                            }}\n                        >\n                            {lastRenderedComponent}\n                        </Box>\n                    </Stack>\n                </Box>\n                <Box\n                    sx={{ \n                        display: 'flex',\n                        flex: 1,\n                        flexDirection: 'row',\n                        alignItems: 'center',\n                        justifyContent: 'flex-end',\n                        padding:'10px 20px',\n                    }}\n                >\n                    <Button\n                        size='small'\n                        variant='outlined'\n                        color='primary'\n                        onClick={handleBack}\n                        sx={{ marginRight: '10px', minWidth: '100px',  height: '35px',}}\n                    >\n                        Cancel\n                    </Button>\n                    <AlertDialog \n                        sessionId={sessionId}\n                        loading={loading}\n                        taskStatus={taskStatus}\n                        spec={finalOutcomeCode}\n                        apiType={apiType}\n                        settings={settings}\n                        multiGateway={multiGateway}\n                    />\n                </Box>\n            </Stack>\n        </div>\n    );\n};\n\nexport default ApiCreateWithAI;\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Suspense, lazy } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport Progress from 'AppComponents/Shared/Progress';\nimport AuthManager from 'AppData/AuthManager';\nimport MCPRouteGuard from 'AppComponents/Shared/MCPRouteGuard';\n\nimport Listing from './Listing/Listing';\nimport APICreateWithAI from './Create/CreateAPIWithAI/APICreateWithAI';\n\n/* if needs to pre fetch use 'webpackPrefetch: true' */\n\nconst Details = lazy(() => import('./Details/index' /* webpackChunkName: \"DeferredDetails\" */));\nconst DeferredDetails = (props) => (\n    <Suspense fallback={<Progress per={50} message='Loading Details component ...' />}>\n        <Details {...props} />\n    </Suspense>\n);\n\nconst APICreateRoutes = lazy(\n    () => import(/* webpackPrefetch: true */ './Create/APICreateRoutes' /* webpackChunkName: \"APICreateRoutes\" */),\n);\nconst DeferredAPICreateRoutes = (props) => (\n    <Suspense fallback={<Progress per={70} message='Loading API Create component ...' />}>\n        <APICreateRoutes {...props} />\n    </Suspense>\n);\n\nconst DefferedAIApiCreateRoutes = (props) => (\n    <Suspense fallback={<Progress per={70} message='Loading AI API Create component ...' />}>\n        <APICreateWithAI {...props} />\n    </Suspense>\n);\n\n/**\n * Have used key={Date.now()} for `Route` element in `/apis` and `/api-products`\n */\nconst Apis = () => {\n    return (\n        <Switch>\n            <Route\n                exact\n                path='/apis'\n                key={Date.now()}\n                render={(props) => <Listing {...props} isAPIProduct={false} />}\n            />\n            <Route\n                exact\n                path='/api-products'\n                key={Date.now()}\n                render={(props) => {\n                    return <Listing {...props} isAPIProduct />;\n                }}\n            />\n            <Route\n                exact\n                path='/mcp-servers'\n                key={Date.now()}\n                render={(props) => (\n                    <MCPRouteGuard>\n                        <Listing {...props} isMCPServer />\n                    </MCPRouteGuard>\n                )}\n            />\n            <Route\n                exact\n                path='/search'\n                key={Date.now()}\n                render={(props) => <Listing {...props} isAPIProduct={false} />}\n            />\n            <Route path='/apis/create' component={DeferredAPICreateRoutes} />\n            <Route path='/apis/design-assistant' component={DefferedAIApiCreateRoutes} />\n            <Route\n                path='/api-products/create'\n                render={() => {\n                    if (AuthManager.isNotPublisher()) {\n                        return <Redirect to='/apis' />;\n                    } else {\n                        return <DeferredAPICreateRoutes />;\n                    }\n                }}\n            />\n            <Route \n                path='/mcp-servers/create' \n                render={(props) => (\n                    <MCPRouteGuard>\n                        <DeferredAPICreateRoutes {...props} />\n                    </MCPRouteGuard>\n                )}\n            />\n            <Route path='/apis/:apiUUID/' render={(props) => <DeferredDetails {...props} isAPIProduct={false} />} />\n            <Route\n                path='/api-products/:apiProdUUID/'\n                render={(props) => {\n                    return <DeferredDetails {...props} isAPIProduct />;\n                }}\n            />\n            <Route\n                path='/mcp-servers/:mcpServerUUID/'\n                render={(props) => (\n                    <MCPRouteGuard>\n                        <DeferredDetails {...props} isMCPServer />\n                    </MCPRouteGuard>\n                )}\n            />\n        </Switch>\n    );\n};\n\nexport default Apis;\n","/*\n * Copyright (c) 2025, WSO2 LLC. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ResourceNotFoundError from 'AppComponents/Base/Errors/ResourceNotFoundError';\nimport { usePublisherSettings } from 'AppComponents/Shared/AppContext';\nimport Progress from 'AppComponents/Shared/Progress';\n\n/**\n * Route guard component that checks if MCP support is enabled\n * If MCP support is disabled, it renders a 404 page\n * @param {Object} props - Component props\n * @param {React.Component} props.children - Child component to render if MCP is enabled\n * @returns {JSX.Element} Component or 404 page\n */\nconst MCPRouteGuard = ({ children }) => {\n    const { data: settings, isLoading } = usePublisherSettings();\n    \n    // Show loading state while settings are being fetched\n    if (isLoading) {\n        return <Progress per={80} message='Loading app settings ...' />;\n    }\n    \n    const isMCPSupportEnabled = settings && settings.isMCPSupportEnabled;\n\n    if (!isMCPSupportEnabled) {\n        const resourceNotFoundMessage = {\n            title: 'MCP Support Disabled',\n            body: 'MCP support is not enabled in this environment.',\n        };\n        return <ResourceNotFoundError message={resourceNotFoundMessage} />;\n    }\n\n    return children;\n};\n\nMCPRouteGuard.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n\nexport default MCPRouteGuard;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.swagger-ui .copy-to-clipboard {\n    display: none !important;\n  }\n  \n\n.swagger-ui .authorization__btn {\n    display: none !important;\n  }\n\n.swagger-ui .servers {\n    display: none !important;\n  }\n\n.swagger-ui .scheme-container {\n    display: none !important;\n  }`, \"\",{\"version\":3,\"sources\":[\"webpack://./source/src/app/components/Apis/Create/CreateAPIWithAI/components/swaggerUIChatbot/swagger-ui-overrides.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,wBAAwB;EAC1B;;;AAGF;IACI,wBAAwB;EAC1B;;AAEF;IACI,wBAAwB;EAC1B;;AAEF;IACI,wBAAwB;EAC1B\",\"sourcesContent\":[\".swagger-ui .copy-to-clipboard {\\n    display: none !important;\\n  }\\n  \\n\\n.swagger-ui .authorization__btn {\\n    display: none !important;\\n  }\\n\\n.swagger-ui .servers {\\n    display: none !important;\\n  }\\n\\n.swagger-ui .scheme-container {\\n    display: none !important;\\n  }\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["PREFIX","classes","card","concat","apiDetails","apiActions","thumbHeader","textTruncate","row","textWrapper","chip","suppressLinkStyles","StyledCard","styled","Card","_ref","theme","_defineProperty","width","height","margin","spacing","borderRadius","transition","display","flexDirection","padding","paddingBottom","gap","flex","justifyContent","color","palette","text","primary","cursor","fontWeight","lineHeight","whiteSpace","overflow","textOverflow","secondary","textDecoration","backgroundColor","DocThumbClassic","props","doc","_useState2","_slicedToArray","useState","isHover","setIsHover","apiNameLabel","associatedType","toggleMouseOver","event","type","linkTo","getBasePath","apiUUID","id","React","onMouseOver","onFocus","onMouseOut","onBlur","elevation","className","name","Link","to","CardContent","style","position","CardMedia","component","LetterGenerator","title","artifact","charLength","customLightColor","customDarkColor","ThumbIcon","iconProps","CustomIcon","_extends","icon","Tooltip","arrow","Typography","variant","noWrap","gutterBottom","align","FormattedMessage","defaultMessage","apiProvider","apiName","apiDisplayName","apiVersion","marginTop","Chip","size","root","label","Divider","sx","marginLeft","marginRight","CardActions","Box","alignItems","marginBottom","AccessTimeIcon","fontSize","Utils","formatUpdatedTime","updatedTime","propTypes","PropTypes","sourceType","isRequired","provider","bullet","pos","contextBox","caption","imageDisplay","minWidth","transform","maxWidth","grey","maxHeight","Icon","mt","Component","DocThumb","custom","useTheme","thumbnailTemplates","active","DocThumbPlain","button","mainTitleWrapper","APICreateMenu","Root","background","paper","borderBottom","A200","paddingLeft","flexGrow","TopMenu","data","setListType","count","isAPIProduct","isMCPServer","listType","showToggle","query","mainTitle","fontFamily","px","mb","isSingular","getTitleForArtifactType","VerticalDivider","Button","disabled","isRestricted","startIcon","AddIcon","m","mr","ButtonGroup","IconButton","onClick","GridOn","List","SampleAPI","intl","useIntl","apiproductAddIcon","landingPage","icons","Onboarding","subTitle","OnboardingMenuCard","AuthManager","isNotPublisher","formatMessage","iconName","shape","func","withRouter","injectIntl","DefThumbClassic","def","wordBreak","overflowWrap","DefThumb","DefThumbPlain","contentInside","paddingTop","boxShadow","TableView","_React$Component","_this","_classCallCheck","_callSuper","_this$state","state","totalCount","themeAdditions","muiTheme","overrides","MUIDataTable","tableRoot","MUIDataTableBodyCell","flexWrap","MuiTableBody","Object","assign","createTheme","adaptV4Theme","rowsPerPage","page","setState","loading","xhrRequest","then","body","list","total","pagination","apisAndApiProducts","notFound","catch","Alert","error","finally","value","localStorage","setItem","_this$props","_this$props2","composeQuery","queryString","limit","offset","API","search","APIProduct","all","MCPServer","defaultApiView","_typeof","length","getItem","prevRowsPerPage","parseInt","bind","updateData","getDisplayStatus","_inherits","key","_this$state2","this","getData","userRowsPerPage","prevProps","_this$props3","_this$state3","_this2","_this$state4","Math","max","newPage","setTimeout","_this3","_this$props4","_this$state5","columns","options","filter","customBodyRender","tableMeta","updateValue","tableViewObj","arguments","undefined","rowData","_tableViewObj$props","rowIndex","displayName","urlPrefix","apiType","apiId","sort","_tableViewObj$state$a","apiData","subtype","CONSTS","ARTIFACT_TYPES","MCP","DEFINITION","DOCUMENT","transportType","API_TYPES","toUpperCase","_tableViewObj$state$a2","gatewayType","gatewayVendor","filterType","responsive","serverSide","onChangePage","changePage","selectableRows","onChangeRowsPerPage","newNumberOfRows","textLabels","displayRows","toolbar","downloadCsv","print","viewColumns","customRowRender","dataIndex","_tableViewObj$props2","ApiThumb","api","download","customToolbar","ResourceNotFound","Progress","per","message","StyledEngineProvider","injectFirst","ThemeProvider","getMuiTheme","SampleAPIProduct","MCPServerLanding","APILanding","defaultProps","content","Listing","location","tryAiBannerCont","tryAiBannerImgWrap","tryAiBannerContentWrap","tryAiBannerContent","tryAiBannerTriangle","gridGap","top","left","right","Stack","textAlign","alt","src","app","context","rootSmall","rootLarge","readOnlyDefault","readOnlyPlain","rounded","focused","textInput","textInputLarge","inputAdornedEnd","inputAdornedEndAlignTop","textarea","inputGroup","_ref2","minHeight","common","white","border","alpha","main","resize","borderColor","black","light","paddingRight","borderWidth","typography","body1","overline","alignSelf","TextInput","ref","readOnly","helperText","rows","multiline","_props$size","optional","tooltip","inputTooltip","testId","info","actions","_props$variant","_props$rounded","_props$resizeIndicato","resizeIndicator","rest","_objectWithoutProperties","_excluded","InputBase","clsx","multilineReadonly","multilineResizeIndicator","inputMultiline","input","adornedEnd","ml","forwardRef","tryAiBottom","tryAiBottomInner","reExecuteWrap","tryAiBottomTextInputWrap","disclaimerText","ExecuteQuery","MentionMenu","chars","index","complete","zIndex","overflowY","overflowX","map","c","i","onMouseDown","e","preventDefault","lastQuery","inputQuery","handleQueryChange","handleExecute","paths","textareaRef","useRef","mentionPos","setMentionPos","mentionIndex","setMentionIndex","dynamicCharacters","setDynamicCharacters","settings","aiAuthTokenProvided","designAssistantEnabled","useEffect","transformedPaths","path","startsWith","MENTION_REG","filteredCharacters","useMemo","match","slice","caret","toLowerCase","completeMention","current","selected","newValue","target","newLength","setSelectionRange","pl","pr","fullWidth","placeholder","onChange","selectionStart","rect","getBoundingClientRect","onKeyDown","code","nextIndex","prevIndex","onKeyPress","endAdornment","inputProps","maxLength","createPortal","document","disableGutters","square","divider","expandIcon","ArrowForwardIosSharp","A","borderTop","StyledButton","description","onAdd","onRemove","expanded","setExpanded","isAdded","setIsAdded","stopPropagation","messages","executionResults","finalOutcome","onTitlesSelected","user","setUser","selectedTitles","setSelectedTitles","copyText","copyBtnText","setCopyBtnText","capitalizeWords","split","word","charAt","join","handleAddTitle","prevTitles","handleRemoveTitle","t","handleApplyChanges","role","AutoAwesome","borderLeft","borderRight","suggestions","parsedContent","JSON","parse","console","Array","isArray","keys","item","warn","AccountCircle","sampleQuery","sampleQueryCard","onExecuteClick","queryHeading","queryData","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","locals","disableAuthorizeAndInfoPlugin","wrapComponents","authorizeBtn","disableTryItOutPlugin","statePlugins","spec","wrapSelectors","allowTryItOutFor","SwaggerUI","componentProps","validatorUrl","docExpansion","defaultModelsExpandDepth","plugins","SwaggerUILib","finalOutcomeCode","sessionId","showCode","setShowCode","FormControlLabel","control","Switch","checked","prevState","labelPlacement","fileExtension","blob","Blob","url","URL","createObjectURL","a","createElement","href","appendChild","click","removeChild","revokeObjectURL","CloudDownloadRounded","language","minimap","enabled","scrollBeyondLastLine","wordWrap","taskStatus","multiGateway","open","setOpen","showProgress","setShowProgress","history","handleClose","handleError","messageId","Error","createBlobAndFile","File","CircularProgress","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","endpointValue","apiContext","createData","file","graphQLInfo","version","endpoint","protocol","asyncTransportProtocols","source","validationResponse","definition","jsonContent","replace","response","validateOpenAPIByFile","obj","validateOpenAPIDefinition","isValid","push","includes","validateAsyncAPIByFile","validateAsyncAPIDefinition","validateGraphQLFile","validateGraphQLSchema","autoFocus","dotStyle","animation","animationDelay","predefinedAnswers","hi","hiii","hello","hey","greetings","thanks","bye","goodbye","calculateStringSimilarity","string1","string2","str1","str2","subsequenceMap","Map","subsequence","substr","set","has","get","matchCount","j","inputString","bestMatch","bestScore","searchString","_i","_Object$entries","entries","comparisonString","score","r","Symbol","n","iterator","o","toStringTag","prototype","Generator","u","create","_regeneratorDefine2","f","p","y","G","v","d","l","TypeError","call","done","return","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","_regenerator","w","defineProperty","_invoke","enumerable","configurable","writable","asyncGeneratorStep","Promise","resolve","_asyncToGenerator","apply","_next","_throw","ownKeys","getOwnPropertySymbols","getOwnPropertyDescriptor","_objectSpread","forEach","getOwnPropertyDescriptors","defineProperties","toPrimitive","String","_toPrimitive","_toPropertyKey","_toConsumableArray","_arrayLikeToArray","_arrayWithoutHoles","from","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","_arrayWithHoles","next","_iterableToArrayLimit","_nonIterableRest","toString","constructor","test","setSessionId","_useState4","setInputQuery","_useState6","setLastQuery","_useState8","setFinalOutcome","_useState0","setApiType","_useState10","setFinalOutcomeCode","_useState12","_useState14","setMessages","_useState16","_useState18","setTaskStatus","_useState20","setLoading","_useState22","setIsSuggestion","_useState24","_useState26","setPaths","_useState28","setApiTypeSuggestion","_useState30","setMissingValues","useHistory","_useState32","ApiChatBanner","lastRenderedComponent","setLastRenderedComponent","_usePublisherSettings","usePublisherSettings","isLoading","_useState34","specEnrichmentError","_useState36","specEnrichmentErrorLevel","_useState38","setMultiGateway","gatewayDetails","isNew","chatContainerRef","element","scrollTop","scrollHeight","DisplayCode","apiTypes","gatewayFeatureCatalog","gatewayTypes","settingsEnvList","environment","filteredEnvironments","env","mode","Set","customGateways","gw","customGateway","_callee","newSessionId","_context","prevMessages","sendInitialRequest","generateSessionId","handleExecuteSampleQuery","_callee2","_context2","_x","uuid","random","dateTime","Date","toISOString","encodedSessionId","btoa","authTokenNotProvidedWarning","values","apiAiChatDocLink","rel","LaunchIcon","sendQuery","_x2","_x3","_sendQuery","_callee4","queryDesignAssistant","_t4","_context4","sendChatAPIDesignAssistant","_ref3","_callee3","currentSessionId","queryText","jsonResponse","backendResponse","isSuggestions","typeOfApi","_paths","_apiTypeSuggestion","_missingValues","_t","_t2","_context3","trim","findBestMatchingAnswer","apiTypeSuggestion","missingValues","status","_x4","_x5","direction","minwidth","WelcomeMessage","SampleQueryCard","scrollBehavior","ApiChatResponse","titles","titlesString","LoadingDots","severity","ApiChatExecute","window","goBack","AlertDialog","Details","lazy","DeferredDetails","Suspense","fallback","APICreateRoutes","DeferredAPICreateRoutes","DefferedAIApiCreateRoutes","APICreateWithAI","Route","exact","now","render","MCPRouteGuard","Redirect","children","isMCPSupportEnabled","ResourceNotFoundError","___CSS_LOADER_EXPORT___","module"],"sourceRoot":""}