{"version":3,"file":"react-overflow-list.esm.js","sources":["../src/index.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  useMount,\n  useMeasure,\n  usePrevious,\n  useShallowCompareEffect,\n  useUpdateEffect,\n} from 'react-use';\n\ntype CollapseDirection = 'start' | 'end';\ntype OverflowDirection = 'none' | 'grow' | 'shrink';\n\nexport interface OverflowListProps<T> {\n  items: T[];\n  itemRenderer: (item: T, index: number) => React.ReactNode;\n  overflowRenderer: (items: T[]) => React.ReactNode;\n  minVisibleItems?: number;\n  onOverflow?: (items: T[]) => void;\n  collapseFrom?: CollapseDirection;\n  className?: string;\n  tagName?: keyof JSX.IntrinsicElements;\n  alwaysRenderOverflow?: boolean;\n}\n\ninterface OverflowListState<T> {\n  visible: T[];\n  overflow: T[];\n  lastOverflowCount: number;\n  overflowDirection: OverflowDirection;\n}\n\nexport function OverflowList<T>(props: OverflowListProps<T>) {\n  const {\n    items,\n    collapseFrom = 'end',\n    minVisibleItems = 0,\n    tagName = 'div',\n    className = '',\n    alwaysRenderOverflow = false,\n    overflowRenderer,\n    itemRenderer,\n  } = props;\n  const [state, setState] = React.useState<OverflowListState<T>>({\n    visible: items,\n    overflow: [],\n    lastOverflowCount: 0,\n    overflowDirection: 'none',\n  });\n\n  const spacer = React.useRef<HTMLDivElement>(null);\n\n  useShallowCompareEffect(() => {\n    repartition(false);\n  }, [state]);\n\n  useMount(() => {\n    repartition(false);\n  });\n\n  useUpdateEffect(() => {\n    setState(() => ({\n      overflowDirection: 'none',\n      lastOverflowCount: 0,\n      overflow: [],\n      visible: items,\n    }));\n  }, [items]);\n\n  const WrapperComponent = tagName;\n\n  const maybeOverflow =\n    state.overflow.length === 0 && !alwaysRenderOverflow\n      ? null\n      : overflowRenderer(state.overflow);\n\n  const repartition = (growing: boolean) => {\n    if (!spacer.current) {\n      return;\n    }\n\n    if (growing) {\n      setState((state) => ({\n        overflowDirection: 'grow',\n        lastOverflowCount:\n          state.overflowDirection === 'none'\n            ? state.overflow.length\n            : state.lastOverflowCount,\n        overflow: [],\n        visible: props.items,\n      }));\n    } else if (spacer.current.getBoundingClientRect().width < 0.9) {\n      setState((state) => {\n        if (state.visible.length <= minVisibleItems!) {\n          return state;\n        }\n        const collapseFromStart = collapseFrom === 'start';\n        const visible = state.visible.slice();\n        const next = collapseFromStart ? visible.shift() : visible.pop();\n        if (!next) {\n          return state;\n        }\n        const overflow = collapseFromStart\n          ? [...state.overflow, next]\n          : [next, ...state.overflow];\n        return {\n          ...state,\n          direction:\n            state.overflowDirection === 'none'\n              ? 'shrink'\n              : state.overflowDirection,\n          overflow,\n          visible,\n        };\n      });\n    } else {\n      setState((prevState) => {\n        return { ...prevState, overflowDirection: 'none' };\n      });\n    }\n  };\n\n  const [ref, { width }] = useMeasure<any>();\n  const previousWidth = usePrevious(width);\n\n  React.useEffect(() => {\n    if (!previousWidth) return;\n\n    repartition(width > previousWidth);\n  }, [width, previousWidth]);\n\n  return (\n    <WrapperComponent\n      // @ts-ignore\n      ref={ref}\n      className={className}\n      style={{\n        display: 'flex',\n        flexWrap: 'nowrap',\n        minWidth: 0,\n      }}\n    >\n      {collapseFrom === 'start' ? maybeOverflow : null}\n      {state.visible.map(itemRenderer)}\n      {collapseFrom === 'end' ? maybeOverflow : null}\n      <div style={{ flexShrink: 1, width: 1 }} ref={spacer} />\n    </WrapperComponent>\n  );\n}\n"],"names":["OverflowList","props","items","collapseFrom","minVisibleItems","tagName","className","alwaysRenderOverflow","overflowRenderer","itemRenderer","React","useState","visible","overflow","lastOverflowCount","overflowDirection","state","setState","spacer","useRef","useShallowCompareEffect","repartition","useMount","useUpdateEffect","WrapperComponent","maybeOverflow","length","growing","current","getBoundingClientRect","width","collapseFromStart","slice","next","shift","pop","direction","prevState","useMeasure","ref","previousWidth","usePrevious","useEffect","style","display","flexWrap","minWidth","map","flexShrink"],"mappings":"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"}