import { Key, ReactElement, ReactNode } from 'react';
import { BorderProps, IMarginProps } from '../../enhancers';
import { AvatarProps } from '../Avatar/Avatar';
import { StackProps } from '../Stack';
export declare type AvatarListItemProps = Pick<AvatarProps, 'fg' | 'bg' | 'name' | 'src' | 'icon' | 'isInverted'>;
export declare type AvatarListProps = IMarginProps & Pick<BorderProps, 'border' | 'borderColor'> & {
    /** The size of the avatars. */
    size?: AvatarProps['size'];
    /** Displays the avatar colors reversed. */
    isInverted?: boolean;
    /** The avatars to show */
    items?: AvatarListItemProps[];
    /**
     * Do not set a title or alt attribute. Useful if handling this another way, for example with a wrapping tooltip.
     */
    noTitleAlt?: boolean;
    /** The minimum number of avatars to show */
    minVisibleItems?: number;
    /** The maximum number of avatars to show. If this is set, the dynamic limiting will be disabled */
    maxVisibleItems?: number;
    /** The spacing between the avatars */
    spacing?: StackProps['spacing'];
    /** Customize the rendering of the item, including wrapping the item. */
    itemRendererOverride?: (itemProps: AvatarListItemProps, key: Key, itemElem: ReactElement) => ReactNode;
    /** Customize the rendering of the overflow item, including wrapping the item. */
    overflowRendererOverride?: (overflowItemProps: AvatarListItemProps[], overflowElem: ReactElement) => ReactNode;
};
export declare const AvatarList: (props: AvatarListProps) => JSX.Element;
