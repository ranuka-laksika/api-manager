{"version":3,"file":"code-editor.esm.js","sources":["../../../libs/code-editor/src/components/ReactSimpleCodeEditor.tsx","../../../libs/code-editor/src/components/CodeEditor/CodeEditor.tsx"],"sourcesContent":["// @ts-nocheck\n// Copied from https://raw.githubusercontent.com/satya164/react-simple-code-editor/20b3ec8a49918b3200b7d9c89ba6dcd649661671/src/index.js\n\n/* @flow */\n/* global global */\n\nimport * as React from 'react';\n\ntype Props = React.ElementConfig<'div'> & {\n  // Props for the component\n  value: string;\n  onValueChange: (value: string) => void;\n  highlight: (value: string) => string | React.Node;\n  tabSize: number;\n  insertSpaces: boolean;\n  ignoreTabKey: boolean;\n  padding: number | string;\n  style?: {};\n\n  // Props for the textarea\n  textareaId?: string;\n  textareaClassName?: string;\n  autoFocus?: boolean;\n  disabled?: boolean;\n  form?: string;\n  maxLength?: number;\n  minLength?: number;\n  name?: string;\n  placeholder?: string;\n  readOnly?: boolean;\n  required?: boolean;\n  onClick?: (e: MouseEvent) => void;\n  onFocus?: (e: FocusEvent) => void;\n  onBlur?: (e: FocusEvent) => void;\n  onKeyUp?: (e: KeyboardEvent) => void;\n  onKeyDown?: (e: KeyboardEvent) => void;\n\n  // Props for the hightlighted codeâ€™s pre element\n  preClassName?: string;\n};\n\ntype State = {\n  capture: boolean;\n};\n\ntype Record = {\n  value: string;\n  selectionStart: number;\n  selectionEnd: number;\n};\n\ntype History = {\n  stack: Array<Record & { timestamp: number }>;\n  offset: number;\n};\n\nconst KEYCODE_ENTER = 13;\nconst KEYCODE_TAB = 9;\nconst KEYCODE_BACKSPACE = 8;\nconst KEYCODE_Y = 89;\nconst KEYCODE_Z = 90;\nconst KEYCODE_M = 77;\nconst KEYCODE_PARENS = 57;\nconst KEYCODE_BRACKETS = 219;\nconst KEYCODE_QUOTE = 222;\nconst KEYCODE_BACK_QUOTE = 192;\nconst KEYCODE_ESCAPE = 27;\n\nconst HISTORY_LIMIT = 100;\nconst HISTORY_TIME_GAP = 3000;\n\nconst isWindows = 'navigator' in global && /Win/i.test(navigator.platform);\nconst isMacLike = 'navigator' in global && /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform);\n\nconst textareaClassName = 'npm__react-simple-code-editor__textarea';\n\nconst cssText = /* CSS */ `\n/**\n * Reset the text fill color so that placeholder is visible\n */\n.${textareaClassName}:empty {\n  -webkit-text-fill-color: inherit !important;\n}\n\n/**\n * Hack to apply on some CSS on IE10 and IE11\n */\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  /**\n    * IE doesn't support '-webkit-text-fill-color'\n    * So we use 'color: transparent' to make the text transparent on IE\n    * Unlike other browsers, it doesn't affect caret color in IE\n    */\n  .${textareaClassName} {\n    color: transparent !important;\n  }\n\n  .${textareaClassName}::selection {\n    background-color: #accef7 !important;\n    color: transparent !important;\n  }\n}\n`;\n\nexport default class ReactSimpleCodeEditor extends React.Component<Props, State> {\n  static defaultProps = {\n    tabSize: 2,\n    insertSpaces: true,\n    ignoreTabKey: false,\n    padding: 0,\n  };\n\n  state = {\n    capture: true,\n  };\n\n  componentDidMount() {\n    this._recordCurrentState();\n  }\n\n  _recordCurrentState = () => {\n    const input = this._input;\n\n    if (!input) return;\n\n    // Save current state of the input\n    const { value, selectionStart, selectionEnd } = input;\n\n    this._recordChange({\n      value,\n      selectionStart,\n      selectionEnd,\n    });\n  };\n\n  _getLines = (text: string, position: number) => text.substring(0, position).split('\\n');\n\n  _recordChange = (record: Record, overwrite?: boolean = false) => {\n    const { stack, offset } = this._history;\n\n    if (stack.length && offset > -1) {\n      // When something updates, drop the redo operations\n      this._history.stack = stack.slice(0, offset + 1);\n\n      // Limit the number of operations to 100\n      const count = this._history.stack.length;\n\n      if (count > HISTORY_LIMIT) {\n        const extras = count - HISTORY_LIMIT;\n\n        this._history.stack = stack.slice(extras, count);\n        this._history.offset = Math.max(this._history.offset - extras, 0);\n      }\n    }\n\n    const timestamp = Date.now();\n\n    if (overwrite) {\n      const last = this._history.stack[this._history.offset];\n\n      if (last && timestamp - last.timestamp < HISTORY_TIME_GAP) {\n        // A previous entry exists and was in short interval\n\n        // Match the last word in the line\n        const re = /[^a-z0-9]([a-z0-9]+)$/i;\n\n        // Get the previous line\n        const previous = this._getLines(last.value, last.selectionStart).pop().match(re);\n\n        // Get the current line\n        const current = this._getLines(record.value, record.selectionStart).pop().match(re);\n\n        if (previous && current && current[1].startsWith(previous[1])) {\n          // The last word of the previous line and current line match\n          // Overwrite previous entry so that undo will remove whole word\n          this._history.stack[this._history.offset] = { ...record, timestamp };\n\n          return;\n        }\n      }\n    }\n\n    // Add the new operation to the stack\n    this._history.stack.push({ ...record, timestamp });\n    this._history.offset++;\n  };\n\n  _updateInput = (record: Record) => {\n    const input = this._input;\n\n    if (!input) return;\n\n    // Update values and selection state\n    input.value = record.value;\n    input.selectionStart = record.selectionStart;\n    input.selectionEnd = record.selectionEnd;\n\n    this.props.onValueChange(record.value);\n  };\n\n  _applyEdits = (record: Record) => {\n    // Save last selection state\n    const input = this._input;\n    const last = this._history.stack[this._history.offset];\n\n    if (last && input) {\n      this._history.stack[this._history.offset] = {\n        ...last,\n        selectionStart: input.selectionStart,\n        selectionEnd: input.selectionEnd,\n      };\n    }\n\n    // Save the changes\n    this._recordChange(record);\n    this._updateInput(record);\n  };\n\n  _undoEdit = () => {\n    const { stack, offset } = this._history;\n\n    // Get the previous edit\n    const record = stack[offset - 1];\n\n    if (record) {\n      // Apply the changes and update the offset\n      this._updateInput(record);\n      this._history.offset = Math.max(offset - 1, 0);\n    }\n  };\n\n  _redoEdit = () => {\n    const { stack, offset } = this._history;\n\n    // Get the next edit\n    const record = stack[offset + 1];\n\n    if (record) {\n      // Apply the changes and update the offset\n      this._updateInput(record);\n      this._history.offset = Math.min(offset + 1, stack.length - 1);\n    }\n  };\n\n  _handleKeyDown = (e: any) => {\n    const { tabSize, insertSpaces, ignoreTabKey, onKeyDown } = this.props;\n\n    if (onKeyDown) {\n      onKeyDown(e);\n\n      if (e.defaultPrevented) {\n        return;\n      }\n    }\n\n    if (e.keyCode === KEYCODE_ESCAPE) {\n      e.target.blur();\n    }\n\n    const { value, selectionStart, selectionEnd } = e.target;\n\n    const tabCharacter = (insertSpaces ? ' ' : '\\t').repeat(tabSize);\n\n    if (e.keyCode === KEYCODE_TAB && !ignoreTabKey && this.state.capture) {\n      // Prevent focus change\n      e.preventDefault();\n\n      if (e.shiftKey) {\n        // Unindent selected lines\n        const linesBeforeCaret = this._getLines(value, selectionStart);\n        const startLine = linesBeforeCaret.length - 1;\n        const endLine = this._getLines(value, selectionEnd).length - 1;\n        const nextValue = value\n          .split('\\n')\n          .map((line, i) => {\n            if (i >= startLine && i <= endLine && line.startsWith(tabCharacter)) {\n              return line.substring(tabCharacter.length);\n            }\n\n            return line;\n          })\n          .join('\\n');\n\n        if (value !== nextValue) {\n          const startLineText = linesBeforeCaret[startLine];\n\n          this._applyEdits({\n            value: nextValue,\n            // Move the start cursor if first line in selection was modified\n            // It was modified only if it started with a tab\n            selectionStart: startLineText.startsWith(tabCharacter)\n              ? selectionStart - tabCharacter.length\n              : selectionStart,\n            // Move the end cursor by total number of characters removed\n            selectionEnd: selectionEnd - (value.length - nextValue.length),\n          });\n        }\n      } else if (selectionStart !== selectionEnd) {\n        // Indent selected lines\n        const linesBeforeCaret = this._getLines(value, selectionStart);\n        const startLine = linesBeforeCaret.length - 1;\n        const endLine = this._getLines(value, selectionEnd).length - 1;\n        const startLineText = linesBeforeCaret[startLine];\n\n        this._applyEdits({\n          value: value\n            .split('\\n')\n            .map((line, i) => {\n              if (i >= startLine && i <= endLine) {\n                return tabCharacter + line;\n              }\n\n              return line;\n            })\n            .join('\\n'),\n          // Move the start cursor by number of characters added in first line of selection\n          // Don't move it if it there was no text before cursor\n          selectionStart: /\\S/.test(startLineText) ? selectionStart + tabCharacter.length : selectionStart,\n          // Move the end cursor by total number of characters added\n          selectionEnd: selectionEnd + tabCharacter.length * (endLine - startLine + 1),\n        });\n      } else {\n        const updatedSelection = selectionStart + tabCharacter.length;\n\n        this._applyEdits({\n          // Insert tab character at caret\n          value: value.substring(0, selectionStart) + tabCharacter + value.substring(selectionEnd),\n          // Update caret position\n          selectionStart: updatedSelection,\n          selectionEnd: updatedSelection,\n        });\n      }\n    } else if (e.keyCode === KEYCODE_BACKSPACE) {\n      const hasSelection = selectionStart !== selectionEnd;\n      const textBeforeCaret = value.substring(0, selectionStart);\n\n      if (textBeforeCaret.endsWith(tabCharacter) && !hasSelection) {\n        // Prevent default delete behaviour\n        e.preventDefault();\n\n        const updatedSelection = selectionStart - tabCharacter.length;\n\n        this._applyEdits({\n          // Remove tab character at caret\n          value: value.substring(0, selectionStart - tabCharacter.length) + value.substring(selectionEnd),\n          // Update caret position\n          selectionStart: updatedSelection,\n          selectionEnd: updatedSelection,\n        });\n      }\n    } else if (e.keyCode === KEYCODE_ENTER) {\n      // Ignore selections\n      if (selectionStart === selectionEnd) {\n        // Get the current line\n        const line = this._getLines(value, selectionStart).pop();\n        const matches = line.match(/^\\s+/);\n\n        if (matches && matches[0]) {\n          e.preventDefault();\n\n          // Preserve indentation on inserting a new line\n          const indent = '\\n' + matches[0];\n          const updatedSelection = selectionStart + indent.length;\n\n          this._applyEdits({\n            // Insert indentation character at caret\n            value: value.substring(0, selectionStart) + indent + value.substring(selectionEnd),\n            // Update caret position\n            selectionStart: updatedSelection,\n            selectionEnd: updatedSelection,\n          });\n        }\n      }\n    } else if (\n      e.keyCode === KEYCODE_PARENS ||\n      e.keyCode === KEYCODE_BRACKETS ||\n      e.keyCode === KEYCODE_QUOTE ||\n      e.keyCode === KEYCODE_BACK_QUOTE\n    ) {\n      let chars;\n\n      if (e.keyCode === KEYCODE_PARENS && e.shiftKey) {\n        chars = ['(', ')'];\n      } else if (e.keyCode === KEYCODE_BRACKETS) {\n        if (e.shiftKey) {\n          chars = ['{', '}'];\n        } else {\n          chars = ['[', ']'];\n        }\n      } else if (e.keyCode === KEYCODE_QUOTE) {\n        if (e.shiftKey) {\n          chars = ['\"', '\"'];\n        } else {\n          chars = [\"'\", \"'\"];\n        }\n      } else if (e.keyCode === KEYCODE_BACK_QUOTE && !e.shiftKey) {\n        chars = ['`', '`'];\n      }\n\n      // If text is selected, wrap them in the characters\n      if (selectionStart !== selectionEnd && chars) {\n        e.preventDefault();\n\n        this._applyEdits({\n          value:\n            value.substring(0, selectionStart) +\n            chars[0] +\n            value.substring(selectionStart, selectionEnd) +\n            chars[1] +\n            value.substring(selectionEnd),\n          // Update caret position\n          selectionStart,\n          selectionEnd: selectionEnd + 2,\n        });\n      }\n    } else if (\n      (isMacLike\n        ? // Trigger undo with âŒ˜+Z on Mac\n          e.metaKey && e.keyCode === KEYCODE_Z\n        : // Trigger undo with Ctrl+Z on other platforms\n          e.ctrlKey && e.keyCode === KEYCODE_Z) &&\n      !e.shiftKey &&\n      !e.altKey\n    ) {\n      e.preventDefault();\n\n      this._undoEdit();\n    } else if (\n      (isMacLike\n        ? // Trigger redo with âŒ˜+Shift+Z on Mac\n          e.metaKey && e.keyCode === KEYCODE_Z && e.shiftKey\n        : isWindows\n        ? // Trigger redo with Ctrl+Y on Windows\n          e.ctrlKey && e.keyCode === KEYCODE_Y\n        : // Trigger redo with Ctrl+Shift+Z on other platforms\n          e.ctrlKey && e.keyCode === KEYCODE_Z && e.shiftKey) &&\n      !e.altKey\n    ) {\n      e.preventDefault();\n\n      this._redoEdit();\n    } else if (e.keyCode === KEYCODE_M && e.ctrlKey && (isMacLike ? e.shiftKey : true)) {\n      e.preventDefault();\n\n      // Toggle capturing tab key so users can focus away\n      this.setState(state => ({\n        capture: !state.capture,\n      }));\n    }\n  };\n\n  _handleChange = (e: any) => {\n    const { value, selectionStart, selectionEnd } = e.target;\n\n    this._recordChange(\n      {\n        value,\n        selectionStart,\n        selectionEnd,\n      },\n      true,\n    );\n\n    this.props.onValueChange(value);\n  };\n\n  _history: History = {\n    stack: [],\n    offset: -1,\n  };\n\n  _input?: HTMLTextAreaElement;\n\n  get session() {\n    return {\n      history: this._history,\n    };\n  }\n\n  set session(session: { history: History }) {\n    this._history = session.history;\n  }\n\n  render() {\n    const {\n      value,\n      style,\n      padding,\n      highlight,\n      textareaId,\n      className,\n      autoFocus,\n      disabled,\n      form,\n      maxLength,\n      minLength,\n      name,\n      placeholder,\n      readOnly,\n      required,\n      onClick,\n      onFocus,\n      onBlur,\n      onKeyUp,\n      /* eslint-disable no-unused-vars */\n      onKeyDown,\n      onValueChange,\n      tabSize,\n      insertSpaces,\n      ignoreTabKey,\n      /* eslint-enable no-unused-vars */\n      preClassName,\n      ...rest\n    } = this.props;\n\n    const contentStyle = {\n      paddingTop: padding,\n      paddingRight: padding,\n      paddingBottom: padding,\n      paddingLeft: padding,\n    };\n\n    const highlighted = highlight(value);\n\n    return (\n      <div {...rest} style={{ ...styles.container, ...style }}>\n        <textarea\n          ref={c => (this._input = c)}\n          style={{\n            ...styles.editor,\n            ...styles.textarea,\n            ...contentStyle,\n          }}\n          className={textareaClassName + (className ? ` ${className}` : '')}\n          id={textareaId}\n          value={value}\n          onChange={this._handleChange}\n          onKeyDown={this._handleKeyDown}\n          onClick={onClick}\n          onKeyUp={onKeyUp}\n          onFocus={onFocus}\n          onBlur={onBlur}\n          disabled={disabled}\n          form={form}\n          maxLength={maxLength}\n          minLength={minLength}\n          name={name}\n          placeholder={placeholder}\n          readOnly={readOnly}\n          required={required}\n          autoFocus={autoFocus}\n          autoCapitalize=\"off\"\n          autoComplete=\"off\"\n          autoCorrect=\"off\"\n          spellCheck={false}\n          data-gramm={false}\n        />\n        <pre\n          className={preClassName}\n          aria-hidden=\"true\"\n          style={{\n            ...styles.editor,\n            ...styles.highlight,\n            ...contentStyle,\n            color: `var(--color-text)`,\n          }}\n          {...(typeof highlighted === 'string'\n            ? { dangerouslySetInnerHTML: { __html: highlighted + '<br />' } }\n            : { children: highlighted })}\n        />\n        {/* eslint-disable-next-line react/no-danger */}\n        <style type=\"text/css\" dangerouslySetInnerHTML={{ __html: cssText }} />\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  container: {\n    position: 'relative',\n    textAlign: 'left',\n    boxSizing: 'border-box',\n    padding: 0,\n    overflow: 'hidden',\n  },\n  textarea: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    height: '100%',\n    width: '100%',\n    resize: 'none',\n    color: 'inherit',\n    overflow: 'hidden',\n    MozOsxFontSmoothing: 'grayscale',\n    WebkitFontSmoothing: 'antialiased',\n    WebkitTextFillColor: 'transparent',\n  },\n  highlight: {\n    position: 'relative',\n    pointerEvents: 'none',\n  },\n  editor: {\n    margin: 0,\n    background: 'none',\n    boxSizing: 'inherit',\n    display: 'inherit',\n    fontFamily: 'inherit',\n    fontSize: 'inherit',\n    fontStyle: 'inherit',\n    fontVariantLigatures: 'inherit',\n    fontWeight: 'inherit',\n    letterSpacing: 'inherit',\n    lineHeight: 'inherit',\n    tabSize: 'inherit',\n    textIndent: 'inherit',\n    textRendering: 'inherit',\n    textTransform: 'inherit',\n    whiteSpace: 'pre-wrap',\n    wordBreak: 'keep-all',\n    overflowWrap: 'break-word',\n  },\n};\n","import { Box, BoxOwnProps, IntentVals, NoSsr, useId } from '@stoplight/mosaic';\nimport { HighlightCodeFallback, useHighlight } from '@stoplight/mosaic-code-viewer';\nimport cn from 'clsx';\nimport { Language } from 'prism-react-renderer';\nimport * as React from 'react';\n\nimport ReactSimpleCodeEditor from '../ReactSimpleCodeEditor';\n\ninterface ICodeEditorProps extends BoxOwnProps {\n  value: string;\n  onChange(code: string): void;\n  padding?: number;\n  language?: Language;\n  autoFocus?: boolean;\n  showLineNumbers?: boolean;\n  style?: React.CSSProperties;\n  placeholder?: string;\n  intent?: IntentVals;\n}\n\nexport const CodeEditor = ({\n  value,\n  language,\n  className,\n  style = {},\n  placeholder,\n  autoFocus,\n  showLineNumbers = true,\n  onChange,\n  padding = 12,\n  intent,\n  border,\n  borderColor = {\n    default: 'transparent',\n    hover: 'input',\n    focus: 'primary',\n  },\n  ...props\n}: ICodeEditorProps) => {\n  const id = useId();\n  const { gutterWidth, lines, renderHighlight } = useHighlight({\n    value,\n    language,\n    showLineNumbers,\n    style,\n  });\n\n  let textAreaCss;\n  if (showLineNumbers) {\n    textAreaCss = `.sl-code-editor[id=\"${id}\"] textarea {\n      padding-left: ${padding + gutterWidth}px !important;\n      word-break: break-all !important;\n    }`;\n  }\n\n  return (\n    <Box\n      className={cn('sl-code-editor', className)}\n      id={id}\n      {...props}\n      style={{\n        fontFamily: style.fontFamily ?? 'var(--font-code)',\n        fontSize: style.fontSize ?? 'var(--fs-code)',\n        lineHeight: style.lineHeight ?? 'var(--lh-code)',\n      }}\n    >\n      <NoSsr fallback={<HighlightCodeFallback lines={lines} />}>\n        <Box\n          as={ReactSimpleCodeEditor}\n          style={style}\n          placeholder={placeholder}\n          autoFocus={autoFocus}\n          value={value}\n          onValueChange={onChange}\n          highlight={renderHighlight}\n          padding={padding}\n          border={border}\n          borderColor={borderColor}\n        />\n\n        {textAreaCss ? <style type=\"text/css\" dangerouslySetInnerHTML={{ __html: textAreaCss }} /> : null}\n      </NoSsr>\n    </Box>\n  );\n};\n"],"names":["KEYCODE_ENTER","KEYCODE_TAB","KEYCODE_BACKSPACE","KEYCODE_Y","KEYCODE_Z","KEYCODE_M","KEYCODE_PARENS","KEYCODE_BRACKETS","KEYCODE_QUOTE","KEYCODE_BACK_QUOTE","KEYCODE_ESCAPE","HISTORY_LIMIT","HISTORY_TIME_GAP","isWindows","global","test","navigator","platform","isMacLike","textareaClassName","cssText","ReactSimpleCodeEditor","React","Component","constructor","capture","input","_input","value","selectionStart","selectionEnd","_recordChange","text","position","substring","split","record","overwrite","stack","offset","_history","length","slice","count","extras","Math","max","timestamp","Date","now","last","re","previous","_getLines","pop","match","current","startsWith","push","props","onValueChange","_updateInput","min","e","tabSize","insertSpaces","ignoreTabKey","onKeyDown","defaultPrevented","keyCode","target","blur","tabCharacter","repeat","state","preventDefault","shiftKey","linesBeforeCaret","startLine","endLine","nextValue","map","line","i","join","startLineText","_applyEdits","updatedSelection","hasSelection","textBeforeCaret","endsWith","matches","indent","chars","metaKey","ctrlKey","altKey","_undoEdit","_redoEdit","setState","componentDidMount","_recordCurrentState","session","history","render","_a","style","padding","highlight","textareaId","className","autoFocus","disabled","form","maxLength","minLength","name","placeholder","readOnly","required","onClick","onFocus","onBlur","onKeyUp","preClassName","rest","contentStyle","paddingTop","paddingRight","paddingBottom","paddingLeft","highlighted","_jsxs","styles","container","_jsx","ref","c","editor","textarea","id","onChange","_handleChange","_handleKeyDown","autoCapitalize","autoComplete","autoCorrect","spellCheck","color","dangerouslySetInnerHTML","__html","children","type","textAlign","boxSizing","overflow","top","left","height","width","resize","MozOsxFontSmoothing","WebkitFontSmoothing","WebkitTextFillColor","pointerEvents","margin","background","display","fontFamily","fontSize","fontStyle","fontVariantLigatures","fontWeight","letterSpacing","lineHeight","textIndent","textRendering","textTransform","whiteSpace","wordBreak","overflowWrap","CodeEditor","language","showLineNumbers","intent","border","borderColor","default","hover","focus","useId","gutterWidth","lines","renderHighlight","useHighlight","textAreaCss","Box","cn","NoSsr","fallback","HighlightCodeFallback","as"],"mappings":"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"}