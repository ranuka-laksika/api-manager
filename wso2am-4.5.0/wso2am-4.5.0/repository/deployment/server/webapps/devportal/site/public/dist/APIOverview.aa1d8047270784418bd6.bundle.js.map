{"version":3,"file":"APIOverview.aa1d8047270784418bd6.bundle.js","mappings":"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","sources":["webpack://@wso2apim/devportal/./node_modules/@mui/icons-material/CloudDownloadRounded.js","webpack://@wso2apim/devportal/./node_modules/@mui/icons-material/MailOutline.js","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Details/Documents/View.jsx","webpack://@wso2apim/devportal/./node_modules/@mui/material/TableContainer/tableContainerClasses.js","webpack://@wso2apim/devportal/./node_modules/@mui/material/TableContainer/TableContainer.js","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Details/Social/EmbedCode.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Details/Social/Social.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Details/TaskState.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Details/GoToTryOut.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Details/SolaceEndpoints.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Details/Environments.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Details/OverviewDocuments.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Details/SourceDownload.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Details/Overview.jsx"],"sourcesContent":["\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96M17 13l-4.65 4.65c-.2.2-.51.2-.71 0L7 13h3V9h4v4z\"\n}), 'CloudDownloadRounded');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2m0 14H4V8l8 5 8-5zm-8-7L4 6h16z\"\n}), 'MailOutline');","/* eslint-disable react/no-children-prop */\n/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, {\n    useState, useEffect, useContext, Suspense, lazy,\n} from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Icon from '@mui/material/Icon';\nimport Button from '@mui/material/Button';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport API from 'AppData/api';\nimport Settings from 'Settings';\nimport remarkGfm from 'remark-gfm';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { vscDarkPlus, vs } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport HTMLRender from 'AppComponents/Shared/HTMLRender';\nimport { ApiContext } from '../ApiContext';\nimport Alert from '../../../Shared/Alert';\n\nconst PREFIX = 'View';\n\nconst classes = {\n    root: `${PREFIX}-root`,\n    docTitle: `${PREFIX}-docTitle`,\n    docBadge: `${PREFIX}-docBadge`,\n    button: `${PREFIX}-button`,\n    displayURL: `${PREFIX}-displayURL`,\n    displayURLLink: `${PREFIX}-displayURLLink`,\n    docSummary: `${PREFIX}-docSummary`,\n    fileAvailability: `${PREFIX}-fileAvailability`,\n};\n\n// TODO jss-to-styled codemod: The Fragment root was replaced by div. Change the tag if needed.\nconst Root = styled('div')((\n    {\n        theme,\n    },\n) => ({\n    [`& .${classes.root}`]: {\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n    },\n\n    [`& .${classes.docTitle}`]: {\n        fontWeight: 100,\n        fontSize: 50,\n        color: theme.palette.grey[500],\n    },\n\n    [`& .${classes.docBadge}`]: {\n        padding: theme.spacing(1),\n        background: theme.palette.primary.main,\n        position: 'absolute',\n        top: 0,\n        marginTop: -22,\n        color: theme.palette.getContrastText(theme.palette.primary.main),\n    },\n\n    [`& .${classes.button}`]: {\n        padding: theme.spacing(2),\n        marginTop: theme.spacing(2),\n    },\n\n    [`& .${classes.displayURL}`]: {\n        padding: theme.spacing(2),\n        marginTop: theme.spacing(2),\n        background: theme.palette.grey[200],\n        color: theme.palette.getContrastText(theme.palette.grey[200]),\n        display: 'flex',\n    },\n\n    [`& .${classes.displayURLLink}`]: {\n        paddingLeft: theme.spacing(2),\n    },\n\n    [`& .${classes.docSummary}`]: {\n        marginTop: theme.spacing(2),\n        color: theme.palette.text.primary,\n    },\n\n    [`& .${classes.fileAvailability}`]: {\n        marginTop: theme.spacing(1),\n        marginLeft: theme.spacing(0.8),\n    },\n}));\n\nconst ReactMarkdown = lazy(() => import('react-markdown' /* webpackChunkName: \"MDReactMarkdown\" */));\n\n/**\n *\n *\n * @param {*} props\n * @returns\n */\nfunction View(props) {\n    const {\n        doc, apiId, intl,\n    } = props;\n    const { api } = useContext(ApiContext);\n    const [code, setCode] = useState('');\n    const [isFileAvailable, setIsFileAvailable] = useState(false);\n    const restAPI = new API();\n    const { skipHtml } = Settings.app.markdown;\n    const markdownSyntaxHighlighterProps = Settings.app.markdown.syntaxHighlighterProps || {};\n    const { syntaxHighlighterDarkTheme } = Settings.app.markdown;\n\n    const loadContentForDoc = () => {\n        const docPromise = restAPI.getInlineContentOfDocument(apiId, doc.documentId);\n        docPromise\n            .then((dataDoc) => {\n                let { text } = dataDoc;\n\n                Object.keys(api).forEach((fieldName) => {\n                    // eslint-disable-next-line no-useless-escape\n                    const regex = new RegExp('\\_\\_\\_' + fieldName + '\\_\\_\\_', 'g');\n                    text = text.replace(regex, api[fieldName]);\n                });\n                setCode(text);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n            });\n    };\n\n    useEffect(() => {\n        if (doc.sourceType === 'MARKDOWN' || doc.sourceType === 'INLINE') loadContentForDoc();\n        if (doc.sourceType === 'FILE') {\n            const promisedGetContent = restAPI.getFileForDocument(apiId, doc.documentId);\n            promisedGetContent\n                .then(() => {\n                    setIsFileAvailable(true);\n                })\n                .catch(() => {\n                    setIsFileAvailable(false);\n                });\n        }\n    }, [props.doc]);\n\n    /**\n     * Download the document related file\n     * @param {any} response Response of download file\n     */\n    const downloadFile = (response) => {\n        let fileName = '';\n        const contentDisposition = response.headers['content-disposition'];\n\n        if (contentDisposition && contentDisposition.indexOf('attachment') !== -1) {\n            const fileNameReg = /filename[^;=\\n]*=((['\"]).*?\\2|[^;\\n]*)/;\n            const matches = fileNameReg.exec(contentDisposition);\n            if (matches != null && matches[1]) fileName = matches[1].replace(/['\"]/g, '');\n        }\n        const contentType = response.headers['content-type'];\n        const blob = new Blob([response.data], {\n            type: contentType,\n        });\n        if (typeof window.navigator.msSaveBlob !== 'undefined') {\n            window.navigator.msSaveBlob(blob, fileName);\n        } else {\n            const URL = window.URL || window.webkitURL;\n            const downloadUrl = URL.createObjectURL(blob);\n\n            if (fileName) {\n                const aTag = document.createElement('a');\n                if (typeof aTag.download === 'undefined') {\n                    window.location = downloadUrl;\n                } else {\n                    aTag.href = downloadUrl;\n                    aTag.download = fileName;\n                    document.body.appendChild(aTag);\n                    aTag.click();\n                }\n            } else {\n                window.location = downloadUrl;\n            }\n\n            setTimeout(() => {\n                URL.revokeObjectURL(downloadUrl);\n            }, 100);\n        }\n    };\n    const handleDownload = () => {\n        const promisedGetContent = restAPI.getFileForDocument(apiId, doc.documentId);\n        promisedGetContent\n            .then((done) => {\n                downloadFile(done, document);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Documents.View.error.downloading',\n                        defaultMessage: 'Error downloading the file',\n                    }));\n                }\n            });\n    };\n    return (\n        <Root>\n            {(doc.summary && doc.otherTypeName !== '_overview') && (\n                <Typography variant='body1' className={classes.docSummary}>\n                    {doc.summary}\n                </Typography>\n            )}\n\n            {doc.sourceType === 'MARKDOWN' && (\n                <div className='markdown-content-wrapper'>\n                    <Suspense fallback={<CircularProgress />}>\n                        <ReactMarkdown\n                            skipHtml={skipHtml}\n                            children={code}\n                            remarkPlugins={[remarkGfm]}\n                            components={{\n                                code({\n                                    node, inline, className, children, ...propsInner\n                                }) {\n                                    const match = /language-(\\w+)/.exec(className || '');\n                                    return !inline && match ? (\n                                        <SyntaxHighlighter\n                                            children={String(children).replace(/\\n$/, '')}\n                                            style={syntaxHighlighterDarkTheme ? vscDarkPlus : vs}\n                                            language={match[1]}\n                                            PreTag='div'\n                                            {...propsInner}\n                                            {...markdownSyntaxHighlighterProps}\n                                        />\n                                    ) : (\n                                        <code className={className} {...propsInner}>\n                                            {children}\n                                        </code>\n                                    );\n                                },\n                            }}\n                        />\n                    </Suspense>\n                </div>\n            )}\n            {doc.sourceType === 'INLINE' && <HTMLRender html={code} />}\n            {doc.sourceType === 'URL' && (\n                <a className={classes.displayURL} href={doc.sourceUrl} target='_blank' rel='noreferrer'>\n                    {doc.sourceUrl}\n                    <Icon className={classes.displayURLLink}>open_in_new</Icon>\n                </a>\n            )}\n            {doc.sourceType === 'FILE' && (\n                <Button\n                    variant='contained'\n                    className={classes.button}\n                    disabled={!isFileAvailable}\n                    onClick={handleDownload}\n                >\n                    <FormattedMessage id='Apis.Details.Documents.View.btn.download' defaultMessage='Download' />\n\n                    <Icon>arrow_downward</Icon>\n                </Button>\n            )}\n            {doc.sourceType === 'FILE' && !isFileAvailable && (\n                <Typography className={classes.fileAvailability}>\n                    <FormattedMessage\n                        id='Apis.Details.Documents.View.file.availability'\n                        defaultMessage='No file available'\n                    />\n                </Typography>\n            )}\n        </Root>\n    );\n}\n\nView.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    doc: PropTypes.shape({}).isRequired,\n    apiId: PropTypes.string.isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\n\nexport default injectIntl((View));\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableContainerUtilityClass(slot) {\n  return generateUtilityClass('MuiTableContainer', slot);\n}\nconst tableContainerClasses = generateUtilityClasses('MuiTableContainer', ['root']);\nexport default tableContainerClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport styled from '../styles/styled';\nimport { getTableContainerUtilityClass } from './tableContainerClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableContainerUtilityClass, classes);\n};\nconst TableContainerRoot = styled('div', {\n  name: 'MuiTableContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  width: '100%',\n  overflowX: 'auto'\n});\nconst TableContainer = /*#__PURE__*/React.forwardRef(function TableContainer(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTableContainer'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TableContainerRoot, _extends({\n    ref: ref,\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableContainer.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally `Table`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableContainer;","import React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Modal from '@mui/material/Modal';\nimport CodeIcon from '@mui/icons-material/Code';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Tooltip from '@mui/material/Tooltip';\nimport IconButton from '@mui/material/IconButton';\nimport FileCopy from '@mui/icons-material/FileCopy';\n\nconst PREFIX = 'EmbedCode';\n\nconst classes = {\n    paper: `${PREFIX}-paper`,\n    codeIcon: `${PREFIX}-codeIcon`,\n    code: `${PREFIX}-code`,\n    iconStyle: `${PREFIX}-iconStyle`,\n};\n\nconst Root = styled('div')((\n    {\n        theme,\n    },\n) => ({\n    [`& .${classes.paper}`]: {\n        position: 'absolute',\n        width: 400,\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n\n    [`& .${classes.codeIcon}`]: {\n        cursor: 'pointer',\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n    },\n\n    [`& .${classes.code}`]: {\n        background: '#efefef',\n        color: 'cc0000',\n        border: 'solid 1px #ccc',\n        padding: theme.spacing(1),\n    },\n\n    [`& .${classes.iconStyle}`]: {\n        position: 'absolute',\n        top: 60,\n        right: 30,\n    },\n}));\n\n/**\n * Position the modal\n * @returns {JSON} css atrributes JSON.\n */\nfunction getModalStyle() {\n    const top = 50;\n    const left = 50;\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\n/**\n * Adds two numbers together.\n * @param {JSON} props props passed from parent\n * @returns {JSX} code in a modal\n */\nfunction EmbedCode(props) {\n    const { intl } = props;\n\n    // getModalStyle is not a pure function, we roll the style only on the first render\n    const [modalStyle] = React.useState(getModalStyle);\n    const [open, setOpen] = React.useState(false);\n    const [codeCopied, setCodeCopied] = React.useState(false);\n    const url = new URL(window.location);\n    url.searchParams.set('widget', true);\n\n    const onCopy = () => {\n        setCodeCopied(true);\n        setTimeout(() => setCodeCopied(false), 2000);\n    };\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n    const embedCode = '<iframe width=\"450\" height=\"120\" src=\"'\n        + url + '\" frameBorder=\"0\" allowFullScreen title=\"Embed API\" />';\n\n    return (\n        <Root>\n            <CodeIcon className={classes.codeIcon} onClick={handleOpen} />\n            <Modal\n                open={open}\n                onClose={handleClose}\n                aria-labelledby='simple-modal-title'\n                aria-describedby='simple-modal-description'\n            >\n                <div style={modalStyle} className={classes.paper}>\n                    <h2 id='simple-modal-title'>\n                        <FormattedMessage\n                            id='Apis.Details.Social.EmbedCode'\n                            defaultMessage='Embed'\n                        />\n                    </h2>\n                    <div className={classes.code}>\n                        <code>{embedCode}</code>\n                    </div>\n                    <Tooltip\n                        title={\n                            codeCopied\n                                ? intl.formatMessage({\n                                    defaultMessage: 'Copied',\n                                    id: 'Apis.Details.Environments.copied',\n                                })\n                                : intl.formatMessage({\n                                    defaultMessage: 'Copy to clipboard',\n                                    id: 'Apis.Details.Environments.copy.to.clipboard',\n                                })\n                        }\n                        placement='right'\n                        className={classes.iconStyle}\n                    >\n                        <IconButton\n                            id='copy-to-clipbord-icon'\n                            aria-label='Copy to clipboard'\n                            size='large'\n                            onClick={() => { navigator.clipboard.writeText(embedCode).then(onCopy()); }}\n                        >\n                            <FileCopy color='secondary'>file_copy</FileCopy>\n                        </IconButton>\n                    </Tooltip>\n                </div>\n            </Modal>\n        </Root>\n    );\n}\n\nexport default injectIntl(EmbedCode);\n","/*\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useContext } from 'react';\nimport { styled, useTheme } from '@mui/material/styles';\nimport { injectIntl } from 'react-intl';\nimport { app } from 'Settings';\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\nimport EmbedCode from 'AppComponents/Apis/Details/Social/EmbedCode';\nimport MailOutlineIcon from '@mui/icons-material/MailOutline';\n\nconst PREFIX = 'Social';\n\nconst classes = {\n    socialLink: `${PREFIX}-socialLink`,\n    oneFlex: `${PREFIX}-oneFlex`,\n    socialLinkWrapper: `${PREFIX}-socialLinkWrapper`,\n    divider: `${PREFIX}-divider`,\n    codeIcon: `${PREFIX}-codeIcon`,\n};\n\n// TODO jss-to-styled codemod: The Fragment root was replaced by div. Change the tag if needed.\nconst Root = styled('div')((\n    {\n        theme,\n    },\n) => ({\n    [`& .${classes.socialLink}`]: {\n        display: 'inline-block',\n        '& img': {\n            width: 32,\n            marginRight: theme.spacing(1),\n        },\n    },\n\n    [`& .${classes.oneFlex}`]: {\n        flex: 1,\n    },\n\n    [`& .${classes.socialLinkWrapper}`]: {\n        marginTop: 16,\n        display: 'flex',\n        alignItems: 'center',\n        paddingRight: theme.spacing(2),\n        '& > div': {\n            display: 'inline-block',\n        },\n    },\n\n    [`& .${classes.divider}`]: {\n        display: 'inline-block',\n        borderRight: 'solid 1px #ccc',\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        height: 30,\n    },\n\n    [`& .${classes.codeIcon}`]: {\n        cursor: 'pointer',\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n    },\n}));\n\n/**\n * Render the social icons\n * @param {int} num1 The first number.\n * @param {int} num2 The second number.\n * @returns {int} The sum of the two numbers.\n */\nfunction Social() {\n    const { api } = useContext(ApiContext);\n    const { name: apiName } = api;\n    const apiUrl = encodeURI(window.location);\n    const theme = useTheme();\n    const [slack, github] = [\n        api.additionalProperties.find((prop) => prop.name === 'slack_url'),\n        api.additionalProperties.find((prop) => prop.name === 'github_repo'),\n    ];\n    const {\n        custom: {\n            social: {\n                showSharing: {\n                    active, showFacebook, showReddit, showTwitter, showEmbed, showEmail,\n                },\n            },\n        },\n    } = theme;\n    return (\n        <Root>\n            <div className={classes.oneFlex} />\n            <div className={classes.socialLinkWrapper}>\n                {slack && (\n                    <>\n                        <a\n                            className={classes.socialLink}\n                            id='Slack'\n                            href={slack.value}\n                            target='_blank'\n                            rel='noopener noreferrer'\n                            title='Slack'\n                        >\n                            <img\n                                src={`${app.context}/site/public/images/social/slack.png`}\n                                alt='Slack'\n                            />\n                        </a>\n                    </>\n                )}\n                {github && (\n                    <>\n                        <a\n                            className={classes.socialLink}\n                            id='github'\n                            href={github.value}\n                            target='_blank'\n                            rel='noopener noreferrer'\n                            title='GitHub'\n                        >\n                            <img\n                                src={`${app.context}/site/public/images/social/github.jpg`}\n                                alt='GitHub'\n                            />\n                        </a>\n                    </>\n                )}\n                {active && (slack || github) && (\n                    <div className={classes.divider} />\n                )}\n                {active && showFacebook && (\n                    <a\n                        className={classes.socialLink}\n                        id='facebook'\n                        href={`http://www.facebook.com/sharer.php?u=${apiUrl}`}\n                        target='_blank'\n                        rel='noopener noreferrer'\n                        title='Facebook'\n                    >\n                        <img\n                            src={`${app.context}/site/public/images/social/facebook.png`}\n                            alt='Facebook'\n                        />\n                    </a>\n                )}\n                {/* Twitter */}\n                {active && showTwitter && (\n                    <a\n                        className={classes.socialLink}\n                        id='Twitter'\n                        href={`http://twitter.com/share?url=${apiUrl}&text=${apiName}`}\n                        target='_blank'\n                        rel='noopener noreferrer'\n                        title='Twitter'\n                    >\n                        <img\n                            src={`${app.context}/site/public/images/social/twitter.png`}\n                            alt='Twitter'\n                        />\n                    </a>\n                )}\n                {/* Reddit */}\n                {active && showReddit && (\n                    <a\n                        className={classes.socialLink}\n                        id='Reddit'\n                        href={`http://www.reddit.com/submit?url=${apiUrl}&title=${apiName}`}\n                        target='_blank'\n                        rel='noopener noreferrer'\n                        title='Reddit'\n                    >\n                        <img\n                            src={`${app.context}/site/public/images/social/reddit.png`}\n                            alt='Reddit'\n                        />\n                    </a>\n                )}\n                {active && showEmbed && (\n                    <>\n                        <div className={classes.divider} />\n                        {/* TODO: Fix spelling mistake ~tmkb */}\n                        <EmbedCode />\n                    </>\n                )}\n                {active && showEmail && (\n                    <>\n                        <div className={classes.divider} />\n                        <a href={`mailto:?Subject=${apiName}&body=Link+:+${apiUrl}\"`} className={classes.codeIcon}>\n                            <MailOutlineIcon />\n                        </a>\n                    </>\n                )}\n            </div>\n        </Root>\n    );\n}\n\nexport default injectIntl(Social);\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Alert from '@mui/material/Alert';\nimport { FormattedMessage } from 'react-intl';\nimport CircularProgress from '@mui/material/CircularProgress';\n\n/**\n * @export\n * @param {JSON} props props from parent\n * @return {JSX} rendered output\n */\nexport default function TaskState(props) {\n    const {\n        completed, errors, inProgress, children, completedMessage, inProgressMessage,\n    } = props;\n    let severity;\n    let message = children;\n    if (completed) {\n        severity = 'success';\n        if (completedMessage) {\n            message = completedMessage;\n        }\n    } else if (inProgress) {\n        severity = 'info';\n        if (inProgressMessage) {\n            message = inProgressMessage;\n        }\n    } else {\n        severity = 'warning';\n    }\n    if (errors) {\n        severity = 'error';\n        if (errors.response) {\n            const { body } = errors.response;\n            message = (\n                <>\n                    <b>\n                        [\n                        {body.code}\n                        ]\n                    </b>\n                    {' '}\n                    :\n                    {body.description}\n                </>\n            );\n        } else {\n            message = (\n                <>\n                    <FormattedMessage\n                        id='Apis.Listing.TaskState.generic.error.prefix'\n                        defaultMessage='Error while'\n                    />\n                    {' '}\n                    {inProgressMessage}\n                </>\n            );\n        }\n    }\n\n    return (\n        <>\n            <Grid item xs={12}>\n                <Alert\n                    icon={inProgress ? <CircularProgress size={20} thickness={2} /> : null}\n                    variant={errors ? 'standard' : 'plain'}\n                    severity={severity}\n                >\n                    {message}\n                </Alert>\n            </Grid>\n        </>\n    );\n}\n","/* eslint-disable prefer-destructuring */\n/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, {\n    useReducer, useContext, useState,\n} from 'react';\nimport Button from '@mui/material/Button';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { useHistory } from 'react-router-dom';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport Modal from '@mui/material/Modal';\nimport Backdrop from '@mui/material/Backdrop';\nimport Fade from '@mui/material/Fade';\nimport API from 'AppData/api';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport { useTheme } from '@mui/material';\nimport Typography from '@mui/material/Typography';\nimport Application from 'AppData/Application';\nimport Alert from 'AppComponents/Shared/Alert';\nimport AuthManager from 'AppData/AuthManager';\nimport CONSTANTS from 'AppData/Constants';\nimport { ApiContext } from './ApiContext';\nimport TaskState from './TaskState';\n\nconst keyStates = {\n    COMPLETED: 'COMPLETED',\n    APPROVED: 'APPROVED',\n    CREATED: 'CREATED',\n    REJECTED: 'REJECTED',\n};\n\nconst restApi = new API();\nconst initialTaskStates = {\n    subscribe: { inProgress: true, completed: false, errors: false },\n    prepare: { inProgress: false, completed: false, errors: false },\n    generate: { inProgress: false, completed: false, errors: false },\n};\n\nconst tasksReducer = (state, action) => {\n    const { name, status } = action;\n    if (name === 'reset') {\n        return initialTaskStates;\n    }\n    // In the case of a key collision, the right-most (last) object's value wins out\n    return { ...state, [name]: { ...state[name], ...status } };\n};\n/**\n *\n * @returns {JSX} rendered output\n */\nexport default function GoToTryOut() {\n    const user = AuthManager.getUser();\n    const {\n        api, subscribedApplications, applicationsAvailable, updateSubscriptionData,\n    } = useContext(ApiContext);\n    const defaultApplications = applicationsAvailable.filter((x) => x.label === 'DefaultApplication');\n    const defaultApplication = defaultApplications.length > 0 ? defaultApplications[0] : null;\n    const [tasksStatus, tasksStatusDispatcher] = useReducer(tasksReducer, initialTaskStates);\n    const [showStatus, setShowStatus] = useState(false);\n    const intl = useIntl();\n    const history = useHistory();\n    const theme = useTheme();\n    const isXsOrBelow = useMediaQuery(theme.breakpoints.down('sm'));\n    const isAsyncAPI = (api\n        && (api.type === CONSTANTS.API_TYPES.WS\n            || api.type === CONSTANTS.API_TYPES.WEBSUB\n            || api.type === CONSTANTS.API_TYPES.SSE\n            || api.type === CONSTANTS.API_TYPES.ASYNC));\n    const isPrototypedAPI = api.lifeCycleStatus && api.lifeCycleStatus.toLowerCase() === 'prototyped';\n    const getKeyRequest = async () => {\n        const promisedKeyManagers = restApi.getKeyManagers();\n        return promisedKeyManagers\n            .then((response) => {\n                const keyRequest = {\n                    keyType: 'SANDBOX',\n                    supportedGrantTypes: [],\n                    callbackUrl: '',\n                    additionalProperties: {},\n                    keyManager: '',\n                };\n                const responseKeyManagerList = [];\n                response.body.list.map((item) => responseKeyManagerList.push(item));\n\n                // Selecting a key manager from the list of key managers.\n                let selectedKeyManager;\n                if (responseKeyManagerList.length > 0) {\n                    const responseKeyManagerListDefault = responseKeyManagerList.filter((x) => x.name === 'Resident Key Manager');\n                    selectedKeyManager = responseKeyManagerListDefault.length > 0 ? responseKeyManagerListDefault[0]\n                        : responseKeyManagerList[0];\n                }\n\n                // Setting key request\n                try {\n                    keyRequest.keyManager = selectedKeyManager.id;\n                    // Filtering Grant Types for Token Exchange\n                    keyRequest.supportedGrantTypes = selectedKeyManager.availableGrantTypes\n                        .filter((k) => (k !== 'urn:ietf:params:oauth:grant-type:token-exchange'));\n                    if (selectedKeyManager.availableGrantTypes.includes('implicit')\n                        || selectedKeyManager.availableGrantTypes.includes('authorization_code')) {\n                        keyRequest.callbackUrl = 'http://localhost';\n                    }\n                } catch (e) {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Credentials.Wizard.GenerateKeysStep.error.keymanager',\n                        defaultMessage: 'Error while selecting the key manager',\n                    }));\n                }\n                return keyRequest;\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n            });\n    };\n    const generateKeys = async (keyRequest, applicationId) => {\n        const application = await Application.get(applicationId);\n        const keys = await application.getKeys(keyRequest.keyType);\n        if (keys.size > 0) {\n            return;\n        }\n        application.generateKeys(\n            keyRequest.keyType, keyRequest.supportedGrantTypes,\n            keyRequest.callbackUrl,\n            keyRequest.additionalProperties, keyRequest.keyManager,\n        ).then((response) => {\n            if (response.keyState === keyStates.CREATED || response.keyState === keyStates.REJECTED) {\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.GoToTryOut.error.keymanager',\n                    defaultMessage: 'Key Generation is Blocked.',\n                }));\n            } else {\n                console.log('Keys generated successfully with ID : ' + response);\n            }\n            return response;\n        }).catch((error) => {\n            if (process.env.NODE_ENV !== 'production') {\n                console.log(error);\n            }\n            const { status } = error;\n            if (status === 404) {\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.GoToTryOut.error.404',\n                    defaultMessage: 'Resource not found.',\n                }));\n            }\n        });\n    };\n\n    const taskManager = async (promisedTask, name) => {\n        tasksStatusDispatcher({ name, status: { inProgress: true } });\n        let taskResult;\n        try {\n            taskResult = await promisedTask;\n        } catch (errors) {\n            console.error(errors);\n            tasksStatusDispatcher({ name, status: { errors } });\n        }\n        tasksStatusDispatcher({ name, status: { inProgress: false, completed: true } });\n        return taskResult;\n    };\n\n    const pushToTryout = async () => {\n        await updateSubscriptionData();\n        if (isAsyncAPI) {\n            history.push('/apis/' + api.id + '/definition');\n        } else {\n            history.push('/apis/' + api.id + '/api-console');\n        }\n    };\n\n    /**\n     *Handle onClick event for `Deploy Sample API` Button\n     * @memberof GoToTryOut\n     */\n    const handleTryOutClick = async () => {\n        let throttlingPolicy = null;\n        if (api.tiers && api.tiers.length > 0) {\n            throttlingPolicy = api.tiers[0].tierName;\n        } else {\n            history.push('/apis/' + api.id + '/test');\n        }\n        setShowStatus(true);\n        // Get the request for key generation using the key managers.\n        const keyRequest = await taskManager(getKeyRequest(), 'prepare');\n        // Generate consumer key and secret\n        await taskManager(generateKeys(keyRequest, defaultApplication.value), 'generate');\n        // Subscribe this API to the default application\n        await taskManager(restApi.subscribe(\n            api.id,\n            defaultApplication.value,\n            throttlingPolicy,\n        ), 'subscribe');\n    };\n\n    Object.values(tasksStatus)\n        .map((tasks) => tasks.completed)\n        .reduce((done, current) => current && done);\n    const anyErrors = Object.values(tasksStatus).map((tasks) => tasks.errors).find((error) => error !== false);\n\n    const redirectButton = isAsyncAPI ? (\n        <Button\n            variant='outlined'\n            color='primary'\n            size='small'\n            classes={{\n                root: { minWidth: 120 },\n                label: { whiteSpace: 'nowrap' },\n            }}\n            onClick={pushToTryout}\n        >\n            <FormattedMessage\n                id='Apis.Details.GoToTryOut.btn.view.definition'\n                defaultMessage='View Definition'\n            />\n        </Button>\n    ) : (\n        <Button\n            variant='contained'\n            color='primary'\n            size='medium'\n            sx={{\n                whiteSpace: 'nowrap',\n            }}\n            onClick={pushToTryout}\n            aria-label='Go to Try Out page'\n        >\n            <FormattedMessage\n                id='Apis.Details.GoToTryOut.btn.tryout'\n                defaultMessage='Try Out'\n            />\n        </Button>\n    );\n    if (!defaultApplication\n        || subscribedApplications.length > 0\n        || api.advertiseInfo.advertised\n        || (api.gatewayVendor && api.gatewayVendor !== 'wso2')\n        || !user\n        || isAsyncAPI\n        || isPrototypedAPI) {\n        return (\n            <>{redirectButton}</>\n\n        );\n    }\n    return (\n        <>\n            <Button\n                onClick={handleTryOutClick}\n                variant='contained'\n                color='primary'\n                size='medium'\n                aria-label='Try Out the API'\n                sx={{\n                    whiteSpace: 'nowrap',\n                }}\n            >\n                <FormattedMessage\n                    id='Apis.Details.GoToTryOut.btn.tryout'\n                    defaultMessage='Try Out'\n                />\n            </Button>\n\n            <Modal\n                aria-label='Preparing to Try Out the API'\n                sx={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                }}\n                open={showStatus}\n                // onClose={handleClose}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                    timeout: 500,\n                }}\n                role='status'\n            >\n                <Fade in={showStatus}>\n                    <Box\n                        bgcolor='background.paper'\n                        borderRadius='borderRadius'\n                        width={isXsOrBelow ? 4 / 5 : 1 / 4}\n                        sx={{\n                            outline: 'none',\n                            bgcolor: 'background.paper',\n                            transform: 'translate(-50%, -50%)',\n                            position: 'absolute',\n                            top: '50%',\n                            left: '50%',\n                            borderRadius: 4,\n                        }}\n                        p={2}\n                    >\n                        <Grid\n                            container\n                            direction='row'\n                            justifyContent='center'\n                            alignItems='center'\n                        >\n                            <TaskState\n                                completed={tasksStatus.subscribe.completed}\n                                errors={tasksStatus.subscribe.errors}\n                                inProgress={tasksStatus.subscribe.inProgress}\n                                completedMessage={(\n                                    <FormattedMessage\n                                        id='Apis.Details.GoToTryOut.popup.subscribe.complete.success'\n                                        defaultMessage='API subscribe to DefaultApplication successfully!'\n                                    />\n                                )}\n                                inProgressMessage={(\n                                    <FormattedMessage\n                                        id='Apis.Details.GoToTryOut.popup.subscribe.inprogress'\n                                        defaultMessage='API subscribing to DefaultApplication ...'\n                                    />\n                                )}\n                            >\n                                <FormattedMessage\n                                    id='Apis.Details.GoToTryOut.popup.subscribe.complete'\n                                    defaultMessage='API subscribe to DefaultApplication'\n                                />\n                            </TaskState>\n                            <TaskState\n                                completed={tasksStatus.prepare.completed}\n                                errors={tasksStatus.prepare.errors}\n                                inProgress={tasksStatus.prepare.inProgress}\n                                completedMessage={(\n                                    <FormattedMessage\n                                        id='Apis.Details.GoToTryOut.popup.prepare.complete'\n                                        defaultMessage='Getting ready to generate keys'\n                                    />\n                                )}\n                                inProgressMessage={(\n                                    <FormattedMessage\n                                        id='Apis.Details.GoToTryOut.popup.prepare.inprogress'\n                                        defaultMessage='Gathering information to generate keys ...'\n                                    />\n                                )}\n                            >\n                                <FormattedMessage\n                                    id='Apis.Details.GoToTryOut.popup.prepare.complete'\n                                    defaultMessage='Getting ready to generate keys'\n                                />\n                            </TaskState>\n                            <TaskState\n                                completed={tasksStatus.generate.completed}\n                                errors={tasksStatus.generate.errors}\n                                inProgress={tasksStatus.generate.inProgress}\n                                completedMessage={(\n                                    <FormattedMessage\n                                        id='Apis.Details.GoToTryOut.popup.generate.complete'\n                                        defaultMessage='Consumer key and secret generated successfully!'\n                                    />\n                                )}\n                                inProgressMessage={(\n                                    <FormattedMessage\n                                        id='Apis.Details.GoToTryOut.popup.generate.inprogress'\n                                        defaultMessage='Generating Consumer key and secret ...'\n                                    />\n                                )}\n                            >\n                                <FormattedMessage\n                                    id='Apis.Details.GoToTryOut.popup.key.secret'\n                                    defaultMessage='Consumer key and secret'\n                                />\n                            </TaskState>\n                            {anyErrors ? (\n                                <Grid item xs={12}>\n                                    <Button\n                                        onClick={() => {\n                                            setShowStatus(false);\n                                            tasksStatusDispatcher({ name: 'reset' });\n                                        }}\n                                        variant='outlined'\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Details.GoToTryOut.continue.on.close'\n                                            defaultMessage='Close'\n                                        />\n                                    </Button>\n                                </Grid>\n                            ) : (\n                                <>\n                                    <Grid item xs={12}>\n                                        <Typography variant='caption'>\n                                            <FormattedMessage\n                                                id='Apis.Details.GoToTryOut.popup.final.message'\n                                                defaultMessage={'All set to try out. Use the \"Generate Keys\"'\n                                                + ' button to get an access token while you are on the Try Out page.'}\n                                            />\n                                        </Typography>\n\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Box display='flex' pr={4}>\n                                            <Box flex={1} />\n                                            {redirectButton}\n                                        </Box>\n                                    </Grid>\n                                </>\n                            )}\n                        </Grid>\n                    </Box>\n                </Fade>\n            </Modal>\n        </>\n    );\n}\n","/*\n *  Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\nimport React, { useContext, useEffect, useState } from 'react';\nimport { styled } from '@mui/material/styles';\nimport Paper from '@mui/material/Paper';\nimport InputBase from '@mui/material/InputBase';\nimport IconButton from '@mui/material/IconButton';\nimport PropTypes from 'prop-types';\nimport Icon from '@mui/material/Icon';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport Typography from '@mui/material/Typography';\nimport Avatar from '@mui/material/Avatar';\nimport Grid from '@mui/material/Grid';\nimport Chip from '@mui/material/Chip';\nimport Tooltip from '@mui/material/Tooltip';\nimport { upperCaseString } from 'AppData/stringFormatter';\nimport { ApiContext } from './ApiContext';\nimport GoToTryOut from './GoToTryOut';\n\nconst PREFIX = 'SolaceEndpoints';\n\nconst classes = {\n    root: `${PREFIX}-root`,\n    input: `${PREFIX}-input`,\n    avatar: `${PREFIX}-avatar`,\n    iconStyle: `${PREFIX}-iconStyle`,\n    sectionTitle: `${PREFIX}-sectionTitle`,\n};\n\n// TODO jss-to-styled codemod: The Fragment root was replaced by div. Change the tag if needed.\nconst Root = styled('div')((\n    {\n        theme,\n    },\n) => ({\n    [`& .${classes.root}`]: {\n        padding: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n        width: '100%',\n        border: `solid 1px ${theme.palette.grey[300]}`,\n        '& .MuiInputBase-root:before,  .MuiInputBase-root:hover': {\n            borderBottom: 'none !important',\n            color: theme.palette.primary.main,\n        },\n        '& .MuiSelect-select': {\n            color: theme.palette.primary.main,\n            paddingLeft: theme.spacing(),\n        },\n        '& .MuiInputBase-input': {\n            color: theme.palette.primary.main,\n        },\n        '& .material-icons': {\n            fontSize: 16,\n            color: `${theme.palette.grey[700]} !important`,\n        },\n        borderRadius: 10,\n        marginRight: theme.spacing(),\n    },\n\n    [`& .${classes.input}`]: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n\n    [`& .${classes.avatar}`]: {\n        width: 30,\n        height: 30,\n        background: 'transparent',\n        border: `solid 1px ${theme.palette.grey[300]}`,\n    },\n\n    [`& .${classes.iconStyle}`]: {\n        cursor: 'pointer',\n        margin: '-10px 0',\n        padding: '0 0 0 5px',\n        '& .material-icons': {\n            fontSize: 18,\n            color: '#9c9c9c',\n        },\n    },\n\n    [`& .${classes.sectionTitle}`]: {\n        color: '#424242',\n        fontSize: '0.85rem',\n        marginRight: 20,\n        fontWeight: 400,\n    },\n}));\n\nfunction SolaceEndpoints() {\n    const { api } = useContext(ApiContext);\n    const [urlCopied, setUrlCopied] = useState(false);\n    const [protocols, setProtocols] = useState(null);\n\n    const intl = useIntl();\n\n    const onCopy = () => {\n        setUrlCopied(true);\n        const caller = function () {\n            setUrlCopied(false);\n        };\n        setTimeout(caller, 2000);\n    };\n\n    useEffect(() => {\n        const protocolsList = [];\n        if (api.asyncTransportProtocols) {\n            api.asyncTransportProtocols.map((e) => {\n                protocolsList.push(JSON.parse(e));\n                return null;\n            });\n            setProtocols(protocolsList);\n        }\n    }, [api]);\n\n    return (\n        <Root>\n            {(api.gatewayType === 'solace') && (\n                <Grid container spacing={2} xs={12}>\n                    <Grid item spacing={2} xs={2}>\n                        <Typography\n                            variant='subtitle2'\n                            component='label'\n                            gutterBottom\n                            align='left'\n                            className={classes.sectionTitle}\n                        >\n                            <FormattedMessage\n                                id='Apis.Details.protocols.and.endpoints'\n                                defaultMessage='Protocols & Endpoints'\n                            />\n                        </Typography>\n                    </Grid>\n                    <Grid item spacing={2} xs={10}>\n                        <GoToTryOut />\n                    </Grid>\n                    <Grid item spacing={2} xs={12}>\n                        <Grid container spacing={2} xs={12}>\n\n                            <Grid item spacing={2} xs={12}>\n                                {api.endpointURLs.map((e) => (\n                                    <Typography\n                                        component='p'\n                                        variant='subtitle2'\n                                    >\n                                        {e.environmentDisplayName}\n                                    </Typography>\n                                ))}\n                            </Grid>\n                            <Grid item spacing={2} xs={12}>\n                                {protocols && protocols.map((p) => (\n                                    <Grid container spacing={2} xs={12}>\n                                        <Grid\n                                            item\n                                            style={{\n                                                display: 'flex',\n                                                alignItems: 'center',\n                                                justifyContent: 'center',\n                                                marginBottom: '15px',\n                                            }}\n                                        >\n                                            <Typography component='p' variant='body1'>\n                                                <FormattedMessage\n                                                    id='Apis.Details.NewOverview.Endpoints.blank'\n                                                    defaultMessage='-'\n                                                />\n                                            </Typography>\n                                        </Grid>\n                                        <Grid\n                                            item\n                                            style={{\n                                                display: 'flex',\n                                                alignItems: 'center',\n                                                justifyContent: 'center',\n                                                marginBottom: '15px',\n                                            }}\n                                        >\n                                            <Chip\n                                                label={upperCaseString(p.protocol)}\n                                                data-testid={upperCaseString(p.protocol) + '-label'}\n                                                color='primary'\n                                                style={{\n                                                    width: '120px',\n                                                }}\n                                            />\n                                        </Grid>\n                                        <Grid\n                                            xs={9}\n                                            item\n                                            style={{\n                                                display: 'flex',\n                                                alignItems: 'center',\n                                                justifyContent: 'center',\n                                                marginBottom: '15px',\n                                            }}\n                                        >\n                                            <Paper\n                                                id='gateway-envirounment'\n                                                component='form'\n                                                className={classes.root}\n                                            >\n                                                <InputBase\n                                                    className={classes.input}\n                                                    inputProps={{ 'aria-label': 'api url' }}\n                                                    value={p.endPointUrl}\n                                                />\n                                                <Avatar className={classes.avatar} sizes={30}>\n                                                    <Tooltip\n                                                        title={\n                                                            urlCopied\n                                                                ? intl.formatMessage({\n                                                                    defaultMessage: 'Copied',\n                                                                    id: 'Apis.Details.Environments.copied',\n                                                                })\n                                                                : intl.formatMessage({\n                                                                    defaultMessage: 'Copy to clipboard',\n                                                                    id: 'Apis.Details.Environments.copy.to.clipboard',\n                                                                })\n                                                        }\n                                                        interactive\n                                                        placement='right'\n                                                        className={classes.iconStyle}\n                                                    >\n                                                        <IconButton\n                                                            aria-label='Copy the API URL to clipboard'\n                                                            size='large'\n                                                            onClick={() => {\n                                                                navigator.clipboard\n                                                                    .writeText(p.endPointUrl).then(() => onCopy('urlCopied'));\n                                                            }}\n                                                        >\n                                                            <Icon color='secondary'>file_copy</Icon>\n                                                        </IconButton>\n                                                    </Tooltip>\n                                                </Avatar>\n                                            </Paper>\n                                        </Grid>\n                                    </Grid>\n                                ))}\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            )}\n        </Root>\n    );\n}\n\nSolaceEndpoints.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\n\nexport default SolaceEndpoints;\n","/* eslint-disable no-unreachable */\n/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useContext, useState } from 'react';\nimport { styled } from '@mui/material/styles';\nimport Paper from '@mui/material/Paper';\nimport InputBase from '@mui/material/InputBase';\nimport IconButton from '@mui/material/IconButton';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\nimport VerticalDivider from 'AppComponents/Shared/VerticalDivider';\nimport Avatar from '@mui/material/Avatar';\nimport PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Tooltip from '@mui/material/Tooltip';\nimport Box from '@mui/material/Box';\nimport Icon from '@mui/material/Icon';\nimport Divider from '@mui/material/Divider';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { ApiContext } from './ApiContext';\nimport GoToTryOut from './GoToTryOut';\n\nconst PREFIX = 'Environments';\n\nconst classes = {\n    root: `${PREFIX}-root`,\n    input: `${PREFIX}-input`,\n    avatar: `${PREFIX}-avatar`,\n    iconStyle: `${PREFIX}-iconStyle`,\n    sectionTitle: `${PREFIX}-sectionTitle`,\n};\n\nconst StyledBox = styled(Box)((\n    {\n        theme,\n    },\n) => ({\n    [`& .${classes.root}`]: {\n        padding: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n        width: '100%',\n        border: `solid 1px ${theme.palette.grey[300]}`,\n        '& .MuiInputBase-root:before,  .MuiInputBase-root:hover': {\n            borderBottom: 'none !important',\n            color: theme.palette.primary.main,\n        },\n        '& .MuiSelect-select': {\n            color: theme.palette.primary.main,\n            paddingLeft: theme.spacing(),\n        },\n        '& .MuiInputBase-input': {\n            color: theme.palette.primary.main,\n        },\n        '& .material-icons': {\n            fontSize: 16,\n            color: `${theme.palette.grey[700]} !important`,\n        },\n        borderRadius: 10,\n        marginRight: theme.spacing(),\n    },\n\n    [`& .${classes.input}`]: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n\n    [`& .${classes.avatar}`]: {\n        width: 30,\n        height: 30,\n        background: 'transparent',\n        border: `solid 1px ${theme.palette.grey[300]}`,\n    },\n\n    [`& .${classes.iconStyle}`]: {\n        cursor: 'pointer',\n        margin: '-10px 0',\n        padding: '0 0 0 5px',\n        '& .material-icons': {\n            fontSize: 18,\n            color: '#9c9c9c',\n        },\n    },\n\n    [`& .${classes.sectionTitle}`]: {\n        color: '#424242',\n        fontSize: '0.85rem',\n        marginRight: 20,\n        fontWeight: 400,\n    },\n}));\n\n/**\n *  @inheritdoc\n */\nfunction Environments(props) {\n    const { selectedEndpoint, updateSelectedEndpoint } = props;\n    const {\n        api,\n        api: { advertiseInfo },\n    } = useContext(ApiContext);\n    const [urlCopied, setUrlCopied] = useState(false);\n\n    const intl = useIntl();\n\n    const onCopy = () => {\n        setUrlCopied(true);\n        const caller = function () {\n            setUrlCopied(false);\n        };\n        setTimeout(caller, 2000);\n    };\n\n    const getDefaultVersionUrl = () => {\n        const { defaultVersionURLs } = selectedEndpoint;\n        if (defaultVersionURLs\n            && (defaultVersionURLs.https\n                || defaultVersionURLs.http\n                || defaultVersionURLs.ws\n                || defaultVersionURLs.wss)) {\n            return (\n                <>\n                    {`\n            ${intl.formatMessage({\n                    id: 'Apis.Details.Environments.default.url',\n                    defaultMessage: '( Default Version ) ',\n                })}\n            ${(defaultVersionURLs.https || defaultVersionURLs.http || defaultVersionURLs.ws || defaultVersionURLs.wss)}`}\n                    <Tooltip\n                        title={\n                            urlCopied\n                                ? intl.formatMessage({\n                                    defaultMessage: 'Copied',\n                                    id: 'Apis.Details.Environments.copied',\n                                })\n                                : intl.formatMessage({\n                                    defaultMessage: 'Copy to clipboard',\n                                    id: 'Apis.Details.Environments.copy.to.clipboard',\n                                })\n                        }\n                        interactive\n                        placement='right'\n                        className={classes.iconStyle}\n                    >\n                        <IconButton\n                            aria-label='Copy the Default Version URL to clipboard'\n                            size='large'\n                            onClick={() => {\n                                navigator.clipboard.writeText(defaultVersionURLs.https\n                                || defaultVersionURLs.http\n                                || defaultVersionURLs.ws\n                                || defaultVersionURLs.wss).then(onCopy('urlCopied'));\n                            }}\n                        >\n                            <Icon color='secondary'>file_copy</Icon>\n                        </IconButton>\n                    </Tooltip>\n                </>\n            );\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     *  @inheritdoc\n     */\n    // if (!selectedEndpoint) {\n    //     return <Progress />;\n    // }\n    return (\n        <StyledBox display='flex' flexDirection='column' width='100%'>\n            <Box mr={5} display='flex' area-label='API URL details' alignItems='center' width='100%' flexDirection='row'>\n                {selectedEndpoint && (!advertiseInfo || !advertiseInfo.advertised) && (\n                    <>\n                        <Typography\n                            variant='subtitle2'\n                            component='label'\n                            for='gateway-envirounment'\n                            gutterBottom\n                            align='left'\n                            className={classes.sectionTitle}\n                        >\n                            <FormattedMessage\n                                id='Apis.Details.Environments.label.url'\n                                defaultMessage='URL'\n                            />\n                        </Typography>\n                        <Paper id='gateway-envirounment' component='form' className={classes.root}>\n                            {api.endpointURLs.length > 1 && (\n                                <>\n                                    <Select\n                                        variant='standard'\n                                        value={selectedEndpoint.environmentName}\n                                        onChange={updateSelectedEndpoint}\n                                        aria-label='Select the Gateway Environment'\n                                    >\n                                        {api.endpointURLs.map((endpoint) => (\n                                            <MenuItem value={endpoint.environmentName}>\n                                                {endpoint.environmentDisplayName || endpoint.environmentName}\n                                            </MenuItem>\n                                        ))}\n                                    </Select>\n                                    <VerticalDivider height={api.type === 'GRAPHQL' && (selectedEndpoint.URLs.ws\n                                        || selectedEndpoint.URLs.wss) ? 80 : 30}\n                                    />\n                                </>\n                            )}\n                            <Box display='flex' flexDirection='column' width='100%'>\n                                <Box py={0.5} display='flex' alignItems='center' width='100%' flexDirection='row'>\n                                    <Tooltip\n                                        title={(\n                                            <Typography color='inherit'>\n                                                {(api.type === 'GRAPHQL')\n                                                    ? intl.formatMessage({\n                                                        defaultMessage: 'Gateway HTTP URL for GraphQL Queries and Mutations',\n                                                        id: 'Apis.Details.Environments.GraphQL.HTTP.Gateway.URL',\n                                                    })\n                                                    : intl.formatMessage({\n                                                        defaultMessage: 'Gateway URL',\n                                                        id: 'Apis.Details.Environments.Gateway.URL',\n                                                    })}\n                                            </Typography>\n                                        )}\n                                        placement='left-start'\n                                        arrow\n                                    >\n                                        <InputBase\n                                            className={classes.input}\n                                            inputProps={{ 'aria-label': 'api url' }}\n                                            value={selectedEndpoint.URLs.https\n                                            || selectedEndpoint.URLs.http\n                                            || selectedEndpoint.URLs.wss\n                                            || selectedEndpoint.URLs.ws}\n                                            data-testid='http-url'\n                                        />\n                                    </Tooltip>\n                                    <Avatar className={classes.avatar} sizes={30}>\n                                        <Tooltip\n                                            title={\n                                                urlCopied\n                                                    ? intl.formatMessage({\n                                                        defaultMessage: 'Copied',\n                                                        id: 'Apis.Details.Environments.copied',\n                                                    })\n                                                    : intl.formatMessage({\n                                                        defaultMessage: 'Copy to clipboard',\n                                                        id: 'Apis.Details.Environments.copy.to.clipboard',\n                                                    })\n                                            }\n                                            interactive\n                                            placement='right'\n                                            className={classes.iconStyle}\n                                        >\n                                            <IconButton\n                                                aria-label='Copy the API URL to clipboard'\n                                                size='large'\n                                                onClick={() => {\n                                                    navigator.clipboard.writeText(selectedEndpoint.URLs.https\n                                                    || selectedEndpoint.URLs.http\n                                                    || selectedEndpoint.URLs.wss\n                                                    || selectedEndpoint.URLs.ws).then(onCopy('urlCopied'));\n                                                }}\n                                            >\n                                                <Icon color='secondary'>file_copy</Icon>\n                                            </IconButton>\n                                        </Tooltip>\n                                    </Avatar>\n                                </Box>\n                                {api.type === 'GRAPHQL' && (selectedEndpoint.URLs.ws || selectedEndpoint.URLs.wss)\n                            && (\n                                <>\n                                    <Divider sx={{ opacity: 0.2 }} />\n                                    <Box pt={0.5} display='flex' alignItems='center' width='100%' flexDirection='row'>\n                                        <>\n                                            <Tooltip\n                                                title={(\n                                                    <Typography color='inherit'>\n                                                        {intl.formatMessage({\n                                                            defaultMessage: 'Gateway Websocket URL for GraphQL Subscriptions',\n                                                            id: 'Apis.Details.Environments.GraphQL.WS.Gateway.URL',\n                                                        })}\n                                                    </Typography>\n                                                )}\n                                                placement='left-start'\n                                                arrow\n                                            >\n                                                <InputBase\n                                                    className={classes.input}\n                                                    inputProps={{ 'aria-label': 'api url' }}\n                                                    value={selectedEndpoint.URLs.wss\n                                                    || selectedEndpoint.URLs.ws}\n                                                    data-testid='websocket-url'\n                                                />\n                                            </Tooltip>\n                                            <Avatar className={classes.avatar} sizes={30}>\n                                                <Tooltip\n                                                    title={urlCopied\n                                                        ? intl.formatMessage({\n                                                            defaultMessage: 'Copied',\n                                                            id: 'Apis.Details.Environments.copied',\n                                                        })\n                                                        : intl.formatMessage({\n                                                            defaultMessage: 'Copy to clipboard',\n                                                            id: 'Apis.Details.Environments.copy.to.clipboard',\n                                                        })}\n                                                    interactive\n                                                    placement='right'\n                                                    className={classes.iconStyle}\n                                                >\n                                                    <IconButton\n                                                        aria-label='Copy the API URL to clipboard'\n                                                        size='large'\n                                                        onClick={() => {\n                                                            navigator.clipboard.writeText(selectedEndpoint.URLs.wss\n                                                            || selectedEndpoint.URLs.ws).then(onCopy('urlCopied'));\n                                                        }}\n                                                    >\n                                                        <Icon color='secondary'>file_copy</Icon>\n                                                    </IconButton>\n                                                </Tooltip>\n                                            </Avatar>\n                                        </>\n                                    </Box>\n\n                                </>\n                            )}\n                            </Box>\n                        </Paper>\n                    </>\n                )}\n                {advertiseInfo && advertiseInfo.advertised && (advertiseInfo.apiExternalProductionEndpoint\n                    || advertiseInfo.apiExternalSandboxEndpoint) && (\n                    <>\n                        <Typography\n                            variant='subtitle2'\n                            component='label'\n                            for='external-endpoint-url'\n                            gutterBottom\n                            align='left'\n                            className={classes.sectionTitle}\n                        >\n                            <FormattedMessage\n                                id='Apis.Details.Environments.externalEndpoint.label.url'\n                                defaultMessage='URL'\n                            />\n                        </Typography>\n                        <Paper id='external-endpoint-url' component='form' className={classes.root}>\n                            <Box display='flex' flexDirection='column' width='100%'>\n                                <Box py={0.5} display='flex' alignItems='center' width='100%' flexDirection='row'>\n                                    <Tooltip\n                                        title={(\n                                            <Typography color='inherit'>\n                                                {intl.formatMessage({\n                                                    defaultMessage: 'External Production Endpoint',\n                                                    id: 'Apis.Details.Environments.apiExternalProductionEndpoint',\n                                                })}\n                                            </Typography>\n                                        )}\n                                        placement='left-start'\n                                        arrow\n                                    >\n                                        <InputBase\n                                            className={classes.input}\n                                            inputProps={{ 'aria-label': 'api url' }}\n                                            value={advertiseInfo.apiExternalProductionEndpoint}\n                                        />\n                                    </Tooltip>\n                                    <Avatar className={classes.avatar} sizes={30}>\n                                        <Tooltip\n                                            title={\n                                                urlCopied\n                                                    ? intl.formatMessage({\n                                                        defaultMessage: 'Copied',\n                                                        id: 'Apis.Details.Environments.copied',\n                                                    })\n                                                    : intl.formatMessage({\n                                                        defaultMessage: 'Copy to clipboard',\n                                                        id: 'Apis.Details.Environments.copy.to.clipboard',\n                                                    })\n                                            }\n                                            interactive\n                                            placement='right'\n                                            className={classes.iconStyle}\n                                        >\n                                            <IconButton\n                                                aria-label='Copy the API URL to clipboard'\n                                                size='large'\n                                                onClick={() => {\n                                                    navigator.clipboard.writeText(\n                                                        advertiseInfo.apiExternalProductionEndpoint,\n                                                    )\n                                                        .then(onCopy('urlCopied'));\n                                                }}\n                                            >\n                                                <Icon color='secondary'>file_copy</Icon>\n                                            </IconButton>\n                                        </Tooltip>\n                                    </Avatar>\n                                </Box>\n                                {advertiseInfo.apiExternalSandboxEndpoint && (\n                                    <>\n                                        <Divider sx={{ opacity: 0.2 }} />\n                                        <Box pt={0.5} display='flex' alignItems='center' width='100%' flexDirection='row'>\n                                            <>\n                                                <Tooltip\n                                                    title={(\n                                                        <Typography color='inherit'>\n                                                            {intl.formatMessage({\n                                                                defaultMessage: 'External Sandbox Endpoint',\n                                                                id: 'Apis.Details.Environments.apiExternalSandboxEndpoint',\n                                                            })}\n                                                        </Typography>\n                                                    )}\n                                                    placement='left-start'\n                                                    arrow\n                                                >\n                                                    <InputBase\n                                                        className={classes.input}\n                                                        inputProps={{ 'aria-label': 'api url' }}\n                                                        value={advertiseInfo.apiExternalSandboxEndpoint}\n                                                    />\n                                                </Tooltip>\n                                                <Avatar className={classes.avatar} sizes={30}>\n                                                    <Tooltip\n                                                        title={urlCopied\n                                                            ? intl.formatMessage({\n                                                                defaultMessage: 'Copied',\n                                                                id: 'Apis.Details.Environments.copied',\n                                                            })\n                                                            : intl.formatMessage({\n                                                                defaultMessage: 'Copy to clipboard',\n                                                                id: 'Apis.Details.Environments.copy.to.clipboard',\n                                                            })}\n                                                        interactive\n                                                        placement='right'\n                                                        className={classes.iconStyle}\n                                                    >\n                                                        <IconButton\n                                                            aria-label='Copy the API URL to clipboard'\n                                                            size='large'\n                                                            onClick={() => {\n                                                                navigator.clipboard.writeText(\n                                                                    advertiseInfo.apiExternalSandboxEndpoint,\n                                                                )\n                                                                    .then(onCopy('urlCopied'));\n                                                            }}\n                                                        >\n                                                            <Icon color='secondary'>file_copy</Icon>\n                                                        </IconButton>\n                                                    </Tooltip>\n                                                </Avatar>\n                                            </>\n                                        </Box>\n\n                                    </>\n                                )}\n                            </Box>\n                        </Paper>\n                    </>\n                )}\n                {!selectedEndpoint && (advertiseInfo && advertiseInfo.advertised\n                    && !(advertiseInfo.apiExternalProductionEndpoint || advertiseInfo.apiExternalSandboxEndpoint)) && (\n                    <Typography variant='subtitle2' component='p' gutterBottom align='left' className={classes.sectionTitle}>\n                        <FormattedMessage\n                            id='Apis.Details.Environments.label.noendpoint'\n                            defaultMessage='No endpoints yet.'\n                        />\n                    </Typography>\n                )}\n                <GoToTryOut />\n            </Box>\n            {(!api.advertiseInfo || !api.advertiseInfo.advertised) && (\n                <Box ml={8} alignItems='center' mt={1}>\n                    {selectedEndpoint && (\n                        <Typography variant='caption'>\n                            {getDefaultVersionUrl()}\n                        </Typography>\n                    )}\n                </Box>\n            )}\n        </StyledBox>\n    );\n}\nEnvironments.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\n\nexport default Environments;\n","/* eslint-disable react/prop-types */\n/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect } from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport Icon from '@mui/material/Icon';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport API from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\n\nconst PREFIX = 'OverviewDocuments';\n\nconst classes = {\n    root: `${PREFIX}-root`,\n    iconClass: `${PREFIX}-iconClass`,\n    boxBadge: `${PREFIX}-boxBadge`,\n    subscriptionBox: `${PREFIX}-subscriptionBox`,\n    linkStyle: `${PREFIX}-linkStyle`,\n    subscriptionTop: `${PREFIX}-subscriptionTop`,\n    resourceWrapper: `${PREFIX}-resourceWrapper`,\n    actionPanel: `${PREFIX}-actionPanel`,\n    linkToTest: `${PREFIX}-linkToTest`,\n    emptyBox: `${PREFIX}-emptyBox`,\n    listWrapper: `${PREFIX}-listWrapper`,\n    listItemStyle: `${PREFIX}-listItemStyle`,\n    listItemIcon: `${PREFIX}-listItemIcon`,\n    listItemPrimary: `${PREFIX}-listItemPrimary`,\n};\n\n// TODO jss-to-styled codemod: The Fragment root was replaced by div. Change the tag if needed.\nconst Root = styled('div')((\n    {\n        theme,\n    },\n) => ({\n    [`& .${classes.root}`]: {\n        padding: theme.spacing(3),\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n\n    [`& .${classes.iconClass}`]: {\n        marginRight: 10,\n        color: theme.palette.secondary.main,\n    },\n\n    [`& .${classes.boxBadge}`]: {\n        background: theme.palette.grey.A400,\n        color: theme.palette.getContrastText(theme.palette.grey.A400),\n        fontSize: theme.typography.h5.fontSize,\n        padding: theme.spacing(1),\n        width: 30,\n        height: 30,\n        marginRight: 20,\n        textAlign: 'center',\n    },\n\n    [`& .${classes.subscriptionBox}`]: {\n        paddingLeft: theme.spacing(2),\n    },\n\n    [`& .${classes.linkStyle}`]: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n        fontSize: theme.typography.fontSize,\n    },\n\n    [`& .${classes.subscriptionTop}`]: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n\n    [`& .${classes.resourceWrapper}`]: {\n        height: 192,\n        overflow: 'auto',\n    },\n\n    [`& .${classes.actionPanel}`]: {\n        justifyContent: 'flex-start',\n    },\n\n    [`& .${classes.linkToTest}`]: {\n        textDecoration: 'none',\n    },\n\n    [`& .${classes.emptyBox}`]: {\n        background: '#ffffff55',\n        color: '#444',\n        border: 'solid 1px #fff',\n        padding: theme.spacing(2),\n        marginTop: 50,\n    },\n\n    [`& .${classes.listWrapper}`]: {\n        padding: 0,\n        margin: 0,\n        width: '100%',\n    },\n\n    [`& .${classes.listItemStyle}`]: {\n        padding: 0,\n        margin: 0,\n    },\n\n    [`& .${classes.listItemIcon}`]: {\n        minWidth: 30,\n        color: '#BBBEBC66',\n    },\n\n    [`& .${classes.listItemPrimary}`]: {\n        fontSize: '14px',\n    },\n}));\n\n/**\n * Add two numbers.\n * @param {number} props The second number.\n * @returns {JSX} jsx.\n */\nfunction OverviewDocuments(props) {\n    const [docs, setDocs] = useState([]);\n    const intl = useIntl();\n    const { apiId } = props;\n    const history = useHistory();\n    useEffect(() => {\n        const restApi = new API();\n        const promisedApi = restApi.getDocumentsByAPIId(apiId);\n        promisedApi\n            .then((response) => {\n                if (response.obj.list.length > 0) {\n                    // Rearanging the response to group them by the sourceType property.\n                    setDocs(response.obj.list);\n                }\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Overview.documents.error.occurred',\n                        defaultMessage: 'Error occurred',\n                    }));\n                }\n            });\n    }, []);\n\n    const gotoDoc = (documentId) => {\n        history.push('/apis/' + apiId + '/documents/' + documentId);\n    };\n    /**\n     *\n     *\n     * @returns\n     * @memberof Overview\n     */\n\n    if (docs.length === 0) {\n        return (\n            <Root>\n                <Grid container className={classes.root} spacing={2}>\n                    <Grid item xs={12}>\n                        <div className={classes.emptyBox}>\n                            <Typography variant='body2'>\n                                <FormattedMessage\n                                    id='Apis.Details.Overview.documents.no.content'\n                                    defaultMessage='No Documents Available'\n                                />\n                            </Typography>\n                        </div>\n                    </Grid>\n                </Grid>\n            </Root>\n        );\n    }\n\n    return (\n        docs.length > 0 && (\n            <Root>\n                <List\n                    component='nav'\n                    aria-label='Available document list'\n                    className={classes.listWrapper}\n                >\n                    {docs.map((doc, index) => (\n                        index <= 1\n                        && (\n                            <ListItem button onClick={() => gotoDoc(doc.documentId)} className={classes.listItemStyle} key={doc.name}>\n                                <ListItemIcon classes={{ root: classes.listItemIcon }}>\n                                    <Icon>insert_drive_file</Icon>\n                                </ListItemIcon>\n                                <ListItemText\n                                    primary={doc.name}\n                                    // secondary={truncateString(100, doc.summary)}\n                                    classes={{ primary: classes.listItemPrimary }}\n                                />\n                            </ListItem>\n                        )\n                    ))}\n                </List>\n            </Root>\n        )\n    );\n}\n\nOverviewDocuments.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n};\n\nexport default (OverviewDocuments);\n","/* eslint-disable no-unreachable */\n/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useContext, useState } from 'react';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport { Link } from '@mui/material';\nimport CloudDownloadRounded from '@mui/icons-material/CloudDownloadRounded';\nimport Tooltip from '@mui/material/Tooltip';\nimport API from 'AppData/api';\nimport Utils from 'AppData/Utils';\nimport Alert from 'AppComponents/Shared/Alert';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport FileCopyIcon from '@mui/icons-material/FileCopy';\nimport Settings from 'Settings';\nimport queryString from 'query-string';\nimport { ApiContext } from './ApiContext';\n\n/**\n * Renders the download links.\n * @returns {JSX} rendered output\n */\nfunction SourceDownload(props) {\n    const { selectedEndpoint } = props;\n    const { api } = useContext(ApiContext);\n    const apiClient = new API();\n    const intl = useIntl();\n    const accessTokenPart = Utils.getCookieWithoutEnvironment('WSO2_AM_TOKEN_1_Default');\n    const [isTokenCopied, setIsTokenCopied] = useState(false);\n\n    const { location } = window;\n\n    const { app: { customUrl: { tenantDomain: customUrlEnabledDomain } } } = Settings;\n    let tenantDomain = '';\n    if (customUrlEnabledDomain !== 'null') {\n        tenantDomain = customUrlEnabledDomain;\n    } else if (location) {\n        const { tenant } = queryString.parse(location.search);\n        if (tenant) {\n            tenantDomain = tenant;\n        }\n    }\n    const tenant = tenantDomain;\n    /**\n     * Downloads the WSDL of the api for the provided environment\n     *\n     * @param {EventListener} e element click event\n     */\n    const downloadWSDL = (e) => {\n        e.preventDefault();\n        const wsdlClient = apiClient.getWsdlClient();\n        const promisedGet = wsdlClient.downloadWSDLForEnvironment(api.id, selectedEndpoint.environmentName);\n        promisedGet\n            .then((done) => {\n                Utils.downloadFile(done);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Environments.download.wsdl.error',\n                        defaultMessage: 'Error downloading the WSDL',\n                    }));\n                }\n            });\n    };\n\n    const downloadGraphQLSchema = (e) => {\n        e.preventDefault();\n        const promisedGraphQL = apiClient.getGraphQLSchemaByAPIId(api.id);\n        promisedGraphQL.then((response) => {\n            const fileName = api.provider + '-' + api.name + '-' + api.version + '.graphql';\n            Utils.downloadFile(response, fileName);\n        })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Environments.download.graphql.error',\n                        defaultMessage: 'Error downloading the GraphQL Schema',\n                    }));\n                }\n            });\n    };\n\n    /**\n     * Downloads the swagger of the api for the provided environment\n     *\n     * @param {string} apiId uuid of the API\n     * @param {string} environment name of the environment\n     */\n    const downloadSwagger = (e) => {\n        e.preventDefault();\n        let promiseSwagger;\n\n        if (selectedEndpoint.environmentName) {\n            promiseSwagger = apiClient.getSwaggerByAPIIdAndEnvironment(api.id, selectedEndpoint.environmentName);\n        } else {\n            promiseSwagger = apiClient.getSwaggerByAPIId(api.id);\n        }\n        promiseSwagger.then((done) => {\n            Utils.downloadFile(done);\n        }).catch((error) => {\n            console.log(error);\n            Alert.error(intl.formatMessage({\n                id: 'Apis.Details.Environments.download.swagger.error',\n                defaultMessage: 'Error downloading the Swagger',\n            }));\n        });\n    };\n\n    /**\n     * Downloads the asyncapi specification of the api for the provided environment\n     *\n     * @param {string} apiId uuid of the API\n     * @param {string} environment name of the environment\n     */\n    const downloadAsync = (e) => {\n        e.preventDefault();\n        const promiseAsync = apiClient.getAsyncApiSpecificationByAPIIdAndEnvironment(api.id, selectedEndpoint.environmentName);\n        promiseAsync\n            .then((done) => {\n                Utils.downloadFile(done);\n            })\n            .catch((error) => {\n                console.error(error);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.Environments.download.asyncapi.error',\n                    defaultMessage: 'Error downloading the AsyncAPI Specification',\n                }));\n            });\n    };\n\n    if (\n        api.type === 'SOAP') {\n        return (\n            <Tooltip\n                title={(\n                    <FormattedMessage\n                        id='Apis.Details.Environments.download.wsdl'\n                        defaultMessage='WSDL'\n                    />\n                )}\n                placement='right'\n                sx={{\n                    cursor: 'pointer',\n                    margin: '-10px 0',\n                    padding: '0 0 0 5px',\n                    '& .material-icons': (theme) => ({\n                        fontSize: 18,\n                        color: theme.palette.secondary.main,\n                    }),\n                }}\n            >\n                <a\n                    onKeyDown={downloadWSDL}\n                    onClick={downloadWSDL}\n                    className={(theme) => ({\n                        fontSize: 14,\n                        color: theme.palette.primary.main,\n                        display: 'flex',\n                    })}\n                >\n                    <CloudDownloadRounded sx={{\n                        marginRight: 1,\n                    }}\n                    />\n                    <FormattedMessage\n                        id='Apis.Details.Environments.download.wsdl.text'\n                        defaultMessage='Download WSDL'\n                    />\n                </a>\n            </Tooltip>\n        );\n    }\n    if (api.type === 'HTTP' || api.type === 'SOAPTOREST') {\n        return (\n            <Box display='flex' alignItems='center'>\n                <Tooltip\n                    title={(\n                        <FormattedMessage\n                            id='Apis.Details.Environments.download.swagger'\n                            defaultMessage='Swagger'\n                        />\n                    )}\n                    placement='right'\n                    sx={(theme) => ({\n                        cursor: 'pointer',\n                        '& .material-icons': {\n                            fontSize: 18,\n                            color: theme.palette.secondary.main,\n                        },\n                    })}\n                >\n                    <Link\n                        onClick={downloadSwagger}\n                        onKeyDown={downloadSwagger}\n                        sx={(theme) => ({\n                            fontSize: 14,\n                            color: theme.palette.primary.main,\n                            display: 'flex',\n                            textDecoration: 'none',\n                        })}\n                        id='swagger-download-btn'\n                        variant='body2'\n                    >\n                        <CloudDownloadRounded sx={{ mt: 0.5, mr: 1 }} />\n                        <FormattedMessage\n                            id='Apis.Details.Environments.download.swagger.text'\n                            defaultMessage='Download Swagger'\n                        />\n                    </Link>\n                </Tooltip>\n                <Tooltip\n                    title={isTokenCopied\n                        ? (\n                            <FormattedMessage\n                                id='Apis.Details.Swagger.URL.copied'\n                                defaultMessage='Copied'\n                            />\n                        )\n                        : (\n                            <FormattedMessage\n                                id='Apis.Details.Swagger.URL.copy.to.clipboard'\n                                defaultMessage='Copy to clipboard'\n                            />\n                        )}\n                    placement='top'\n                >\n                    <Button\n                        aria-label='Copy to clipboard'\n                        size='small'\n                        color='grey'\n                        onClick={() => {\n                            navigator.clipboard.writeText(location.origin + '/api/am/devportal/v3/apis/' + api.id\n                            + '/swagger?accessToken=' + accessTokenPart + '&X-WSO2-Tenant-Q='\n                            + tenant + '&environmentName='\n                            + selectedEndpoint.environmentName).then(() => setIsTokenCopied('urlCopied'));\n                        }}\n                        sx={{ minWidth: 'auto', ml: 1 }}\n                    >\n                        <FileCopyIcon />\n                    </Button>\n                </Tooltip>\n            </Box>\n        );\n    }\n    if (api.type === 'WS' || api.type === 'WEBSUB' || api.type === 'SSE' || api.type === 'ASYNC') {\n        return (\n            <Tooltip\n                title={(\n                    <FormattedMessage\n                        id='Apis.Details.Environments.download.asyncapi'\n                        defaultMessage='AsyncAPI Specification'\n                    />\n                )}\n                placement='right'\n                sx={(theme) => ({\n                    cursor: 'pointer',\n                    margin: '-10px 0',\n                    padding: '0 0 0 5px',\n                    '& .material-icons': {\n                        fontSize: 18,\n                        color: theme.palette.secondary.main,\n                    },\n                })}\n            >\n                <a\n                    onKeyDown={downloadAsync}\n                    onClick={downloadAsync}\n                    className={(theme) => ({\n                        fontSize: 14,\n                        color: theme.palette.primary.main,\n                        display: 'flex',\n                    })}\n                    id='swagger-download-btn'\n                >\n                    <CloudDownloadRounded sx={{\n                        marginRight: 1,\n                    }}\n                    />\n                    <FormattedMessage\n                        id='Apis.Details.Environments.download.asyncapi.text'\n                        defaultMessage='Download AsyncAPI Specification'\n                    />\n                </a>\n            </Tooltip>\n        );\n    }\n    if (api.type === 'GRAPHQL') {\n        return (\n            <Tooltip\n                title={(\n                    <FormattedMessage\n                        id='Apis.Details.Environments.download.graphQL'\n                        defaultMessage='GraphQL'\n                    />\n                )}\n                placement='right'\n                sx={(theme) => ({\n                    cursor: 'pointer',\n                    margin: '-10px 0',\n                    padding: '0 0 0 5px',\n                    '& .material-icons': {\n                        fontSize: 18,\n                        color: theme.palette.secondary.main,\n                    },\n                })}\n            >\n                <a\n                    onKeyDown={downloadGraphQLSchema}\n                    onClick={downloadGraphQLSchema}\n                    className={(theme) => ({\n                        fontSize: 14,\n                        color: theme.palette.primary.main,\n                        display: 'flex',\n                    })}\n                >\n                    <CloudDownloadRounded sx={{\n                        marginRight: 1,\n                    }}\n                    />\n                    <FormattedMessage\n                        id='Apis.Details.Environments.download.graphql.text'\n                        defaultMessage='Download GraphQL'\n                    />\n                </a>\n            </Tooltip>\n        );\n    }\n}\n\nexport default SourceDownload;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useContext, useState, useEffect } from 'react';\nimport { styled, useTheme } from '@mui/material/styles';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport { Link as MUILink } from '@mui/material';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport VerticalDivider from 'AppComponents/Shared/VerticalDivider';\nimport Box from '@mui/material/Box';\nimport Chip from '@mui/material/Chip';\nimport Typography from '@mui/material/Typography';\nimport Card from '@mui/material/Card';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport CardContent from '@mui/material/CardContent';\nimport LaunchIcon from '@mui/icons-material/Launch';\nimport ReactMarkdown from 'react-markdown';\nimport gfm from 'remark-gfm';\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\nimport ApiThumb from 'AppComponents/Apis/Listing/ApiThumb';\nimport StarRatingBar from 'AppComponents/Apis/Listing/StarRatingBar';\nimport StarRatingSummary from 'AppComponents/Apis/Details/StarRatingSummary';\nimport Social from 'AppComponents/Apis/Details/Social/Social';\nimport ResourceNotFound from 'AppComponents/Base/Errors/ResourceNotFound';\nimport AuthManager from 'AppData/AuthManager';\nimport Alert from 'AppComponents/Shared/Alert';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\nimport Progress from 'AppComponents/Shared/Progress';\nimport API from 'AppData/api';\nimport CONSTANTS from 'AppData/Constants';\nimport View from 'AppComponents/Apis/Details/Documents/View';\nimport Settings from 'Settings';\nimport SolaceEndpoints from './SolaceEndpoints';\nimport Environments from './Environments';\nimport Comments from './Comments/Comments';\nimport OverviewDocuments from './OverviewDocuments';\nimport SourceDownload from './SourceDownload';\n\nconst PREFIX = 'Overview';\n\nconst classes = {\n    root: `${PREFIX}-root`,\n    linkTitle: `${PREFIX}-linkTitle`,\n    description: `${PREFIX}-description`,\n    textLabel: `${PREFIX}-textLabel`,\n    textValue: `${PREFIX}-textValue`,\n    apiThumb: `${PREFIX}-apiThumb`,\n    chipRoot: `${PREFIX}-chipRoot`,\n    subtitle: `${PREFIX}-subtitle`,\n    cardRoot: `${PREFIX}-cardRoot`,\n    sectionTitle: `${PREFIX}-sectionTitle`,\n    moreLink: `${PREFIX}-moreLink`,\n    table: `${PREFIX}-table`,\n    requestCount: `${PREFIX}-requestCount`,\n    requestUnit: `${PREFIX}-requestUnit`,\n    launchIcon: `${PREFIX}-launchIcon`,\n    originalDevportalUrl: `${PREFIX}-originalDevportalUrl`,\n};\n\n// TODO jss-to-styled codemod: The Fragment root was replaced by div. Change the tag if needed.\nconst Root = styled('div')((\n    {\n        theme,\n    },\n) => ({\n    [`& .${classes.root}`]: {\n        width: '100%',\n        height: '100vh',\n        paddingLeft: theme.spacing(2),\n        paddingTop: theme.spacing(2),\n    },\n\n    [`& .${classes.linkTitle}`]: {\n        color: theme.palette.grey[800],\n    },\n\n    [`& .${classes.description}`]: {\n        color: theme.palette.grey[700],\n    },\n\n    [`& .${classes.textLabel}`]: {\n        fontWeight: 400,\n        color: theme.palette.grey[800],\n    },\n\n    [`& .${classes.textValue}`]: {\n        textIndent: theme.spacing(1),\n    },\n\n    [`& .${classes.apiThumb}`]: {\n        padding: theme.spacing(),\n        border: 'solid 1px',\n        borderColor: theme.palette.grey[800],\n        width: 100,\n    },\n\n    [`& .${classes.chipRoot}`]: {\n        cursor: 'pointer',\n        marginRight: theme.spacing(),\n    },\n\n    [`& .${classes.subtitle}`]: {\n        color: theme.palette.grey[800],\n    },\n\n    [`& .${classes.cardRoot}`]: {\n        width: 150,\n        height: 150,\n        marginRight: theme.spacing(),\n        marginTop: theme.spacing(2),\n    },\n\n    [`& .${classes.sectionTitle}`]: {\n        color: theme.palette.grey[800],\n        fontSize: '0.95rem',\n        fontWeight: 400,\n    },\n\n    [`& .${classes.moreLink}`]: {\n        fontSize: '14px',\n    },\n\n    [`& .${classes.table}`]: {\n        '& th': {\n            fontWeight: 400,\n        },\n    },\n\n    [`& .${classes.requestCount}`]: {\n        fontSize: 22,\n    },\n\n    [`& .${classes.requestUnit}`]: {\n        fontSize: 13,\n    },\n\n    [`& .${classes.launchIcon}`]: {\n        paddingLeft: theme.spacing(1),\n    },\n\n    [`& .${classes.originalDevportalUrl}`]: {\n        marginTop: theme.spacing(4),\n    },\n}));\n\n/**\n * @returns {JSX} overview section\n */\nfunction Overview() {\n    const theme = useTheme();\n\n    const {\n        custom: {\n            apiDetailPages: {\n                showCredentials,\n                showComments,\n                showDocuments,\n            },\n            infoBar: { showThumbnail },\n            social: { showRating },\n            showSwaggerDescriptionOnOverview,\n        },\n    } = theme;\n    const intl = useIntl();\n    const {\n        api,\n        api: { advertiseInfo },\n        subscribedApplications,\n    } = useContext(ApiContext);\n    const [descriptionHidden, setDescriptionHidden] = useState(true);\n    const [isLoading, setIsLoading] = useState(false);\n    const [notFound, setNotFound] = useState(false);\n    const [allDocuments, setAllDocuments] = useState(null);\n    const [overviewDocOverride, setOverviewDocOverride] = useState(null);\n    const [swaggerDescription, setSwaggerDescription] = useState(null);\n    const [allPolicies, setAllPolicies] = useState(null);\n    const [rating, setRating] = useState({\n        avgRating: 0,\n        total: 0,\n        count: 0,\n    });\n    const [selectedEndpoint, setSelectedEndpoint] = useState((api.endpointURLs && api.endpointURLs.length > 0)\n        ? api.endpointURLs[0]\n        : null);\n\n    // Truncating the description\n    let descriptionIsBig = false;\n    let smallDescription = '';\n    if (api.description) {\n        const limit = 40;\n        if (api.description.split(' ').length > limit) {\n            const newContent = api.description.split(' ').slice(0, limit);\n            smallDescription = newContent.join(' ') + '...';\n            descriptionIsBig = true;\n        }\n    }\n\n    const subscriptionTimeUnits = {\n        min: intl.formatMessage({\n            id: 'Apis.Details.Overview.business.plans.time.unit.min',\n            defaultMessage: 'min',\n        }),\n        hours: intl.formatMessage({\n            id: 'Apis.Details.Overview.business.plans.time.unit.hours',\n            defaultMessage: 'hours',\n        }),\n        days: intl.formatMessage({\n            id: 'Apis.Details.Overview.business.plans.time.unit.days',\n            defaultMessage: 'days',\n        }),\n        months: intl.formatMessage({\n            id: 'Apis.Details.Overview.business.plans.time.unit.months',\n            defaultMessage: 'months',\n        }),\n        years: intl.formatMessage({\n            id: 'Apis.Details.Overview.business.plans.time.unit.years',\n            defaultMessage: 'years',\n        }),\n    };\n\n    const isApiPolicy = (policyName) => {\n        const filteredApiPolicies = api.tiers.filter((t) => t.tierName === policyName);\n        return filteredApiPolicies && filteredApiPolicies.length > 0;\n    };\n\n    const isSubValidationDisabled = api.tiers && api.tiers.length === 1\n            && api.tiers[0].tierName.includes(CONSTANTS.DEFAULT_SUBSCRIPTIONLESS_PLAN);\n\n    const updateSelectedEndpoint = (e) => {\n        const selectedEnvName = e.target.value;\n        const filteredEndpoints = api.endpointURLs.filter((ep) => ep.environmentName === selectedEnvName);\n        if (filteredEndpoints && filteredEndpoints.length > 0) {\n            setSelectedEndpoint(filteredEndpoints[0]);\n        } else {\n            Alert.error(intl.formatMessage({\n                id: 'Apis.Details.Overview.select.env.error',\n                defaultMessage: 'Error Selecting Environment',\n            }));\n        }\n    };\n\n    const getSubscriptionPolicies = () => {\n        const restApi = new API();\n        return restApi.getAllTiers('subscription', Settings.app.throttlingPolicyLimit)\n            .then((response) => {\n                try {\n                    // Filter policies base on async or not.\n                    const filteredList = response.body.list.filter((str) => isApiPolicy(str.name));\n                    setAllPolicies(filteredList);\n                } catch (e) {\n                    console.log(e);\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Overview.error.occurred',\n                        defaultMessage: 'Error occurred',\n                    }));\n                }\n            }).catch((error) => {\n                console.log(error);\n                const { status } = error;\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.Overview.error.occurred.subs',\n                    defaultMessage: 'Error occurred when fetching subscription policies',\n                }));\n                if (status === 404) {\n                    setNotFound(true);\n                }\n                setAllDocuments([]);\n                setIsLoading(false);\n            });\n    };\n\n    const getDocuments = () => {\n        const restApi = new API();\n        return restApi.getDocumentsByAPIId(api.id)\n            .then((response) => {\n                const overviewDoc = response.body.list.filter((item) => item.otherTypeName === '_overview');\n                if (overviewDoc.length > 0) {\n                    // We can override the UI with this content\n                    setOverviewDocOverride(overviewDoc[0]); // Only one doc we can render\n                }\n                setAllDocuments(response.body.list);\n            })\n            .catch((error) => {\n                console.log(error);\n                const { status } = error;\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.Overview.error.occurred.docs',\n                    defaultMessage: 'Error occurred when fetching documents',\n                }));\n                if (status === 404) {\n                    setNotFound(true);\n                }\n                setAllDocuments([]);\n                setIsLoading(false);\n            });\n    };\n    useEffect(() => {\n        setIsLoading(true);\n        const { endpointURLs } = api;\n        if (endpointURLs && endpointURLs.length > 0) {\n            setSelectedEndpoint(endpointURLs[0]);\n        }\n        Promise.all([getDocuments(), getSubscriptionPolicies()])\n            .then(() => {\n                setIsLoading(false);\n            });\n    }, [api]);\n    useEffect(() => {\n        const restApi = new API();\n        if (showSwaggerDescriptionOnOverview) {\n            restApi.getSwaggerByAPIIdAndEnvironment(api.id, selectedEndpoint.environmentName)\n                .then((swaggerResponse) => {\n                    const swagger = swaggerResponse.obj;\n                    if (swagger && swagger.info) {\n                        setSwaggerDescription(swagger.info.description);\n                    } else {\n                        setSwaggerDescription('');\n                    }\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setSwaggerDescription('');\n                });\n        } else {\n            setIsLoading(true);\n            Promise.all([getDocuments(), getSubscriptionPolicies()])\n                .then(() => {\n                    setIsLoading(false);\n                });\n        }\n    }, []);\n\n    /**\n     * @param {event} e click event\n     */\n    const collapseAllDescription = (e) => {\n        e.preventDefault();\n        setDescriptionHidden(!descriptionHidden);\n    };\n\n    /**\n     * @returns {string} provider\n     */\n    const getProvider = () => {\n        let { provider } = api;\n        if (\n            api.businessInformation\n            && api.businessInformation.businessOwner\n            && api.businessInformation.businessOwner.trim() !== ''\n        ) {\n            provider = api.businessInformation.businessOwner;\n        }\n        return provider;\n    };\n\n    /**\n     * @param {number} ratings rating value\n     */\n    const setRatingUpdate = (ratingLocal) => {\n        if (ratingLocal) {\n            const { avgRating, total, count } = ratingLocal;\n            setRating({ avgRating, total, count });\n        }\n    };\n\n    /**\n     * @param {JSON} api api object\n     * @returns {JSON} key managers\n     */\n    const getKeyManagers = () => {\n        if (api.keyManagers) {\n            if (api.keyManagers[0] === 'all') {\n                return null;\n            } else {\n                return (\n                    api.keyManagers.map((km) => (<Typography variant='body2'>{km}</Typography>))\n                );\n            }\n        } else {\n            return null;\n        }\n    };\n\n    const user = AuthManager.getUser();\n    if (isLoading) {\n        return (<Progress />);\n    }\n    if (showSwaggerDescriptionOnOverview) {\n        if (!swaggerDescription) {\n            return (<Progress />);\n        } else {\n            return (\n                <Box p={3}>\n                    <ReactMarkdown plugins={[gfm]} escapeHtml>\n                        {swaggerDescription}\n                    </ReactMarkdown>\n                </Box>\n            );\n        }\n    }\n    if (!allDocuments) {\n        return (<Progress />);\n    }\n    if (notFound) {\n        return (\n            <ResourceNotFound message={intl.formattedMessage({\n                id: 'Apis.Details.Overview.not.found.message',\n                defaultMessage: 'Resource Not Found',\n            })}\n            />\n        );\n    }\n    if (overviewDocOverride) {\n        return (\n            <Root>\n                <Paper className={classes.paperWithDoc} elevation={0}>\n                    <View doc={overviewDocOverride} apiId={api.id} fullScreen dontShowName />\n                </Paper>\n            </Root>\n        );\n    }\n    return (\n        <Root>\n            <Paper className={classes.root} elevation={0}>\n                <Grid container>\n                    <Grid item sm={8} xl={9}>\n                        <Box display='flex' flexDirection='column'>\n                            <Box display='flex' flexDirection='row'>\n                                {showThumbnail && (\n                                    <Box id='overview-thumbnail' width={86} display='flex' alignItems='center'>\n                                        <Box className={classes.apiThumb}>\n                                            <ApiThumb\n                                                api={api}\n                                                customWidth={70}\n                                                customHeight={50}\n                                                showInfo={false}\n                                            />\n                                        </Box>\n                                    </Box>\n                                )}\n                                <Box ml={3} mr={2}>\n                                    <Typography variant='h4' component='h2'>{api.name}</Typography>\n                                    {api.description && (\n                                        <Typography variant='body2' gutterBottom align='left' className={classes.description}>\n                                            {(descriptionIsBig && descriptionHidden) ? smallDescription : api.description}\n                                            {descriptionIsBig && (\n                                                <a aria-label='Show more/less description' onClick={collapseAllDescription} href='#'>\n                                                    {descriptionHidden\n                                                        ? intl.formatMessage({\n                                                            defaultMessage: ' more',\n                                                            id: 'Apis.Details.Overview.description.more',\n                                                        })\n                                                        : intl.formatMessage({\n                                                            defaultMessage: ' less',\n                                                            id: 'Apis.Details.Overview.description.less',\n                                                        })}\n                                                </a>\n                                            )}\n                                        </Typography>\n                                    )}\n                                    <Box display='flex' area-lable='API version and owner details' flexDirection='row'>\n                                        <Typography variant='body2' gutterBottom align='left' className={classes.textLabel}>\n                                            <FormattedMessage\n                                                id='Apis.Details.Overview.list.version'\n                                                defaultMessage='Version '\n                                            />\n                                        </Typography>\n                                        {' '}\n                                        <Typography variant='body2' gutterBottom align='left' className={classes.textValue}>\n                                            {api.version}\n                                        </Typography>\n                                        <VerticalDivider height={20} />\n                                        <Typography variant='body2' gutterBottom align='left' className={classes.textLabel}>\n                                            <FormattedMessage\n                                                id='Apis.Details.Overview.list.provider'\n                                                defaultMessage='By '\n                                            />\n                                        </Typography>\n                                        {' '}\n                                        <Typography variant='body2' gutterBottom align='left' className={classes.textValue}>\n                                            {getProvider()}\n                                        </Typography>\n                                    </Box>\n                                </Box>\n                            </Box>\n                            <Box alignItems='center' mt={2} pr={6}>\n                                {\n                                    (api.gatewayType === 'solace') ? (\n                                        <SolaceEndpoints />\n                                    ) : (\n                                        <Environments updateSelectedEndpoint={updateSelectedEndpoint} selectedEndpoint={selectedEndpoint} />\n                                    )\n                                }\n                            </Box>\n                            <Box\n                                display='flex'\n                                flexDirection='row'\n                                alignItems='center'\n                                className={classes.originalDevportalUrl}\n                                mt={2}\n                                pr={6}\n                            >\n                                {advertiseInfo && advertiseInfo.advertised && advertiseInfo.originalDevPortalUrl && (\n                                    <MUILink\n                                        target='_blank'\n                                        rel='noopener noreferrer'\n                                        href={advertiseInfo.originalDevPortalUrl}\n                                        variant='body3'\n                                        underline='hover'\n                                    >\n                                        <FormattedMessage\n                                            id={'Apis.Details.Credentials.Credentials.visit.original.'\n                                                + 'developer.portal'}\n                                            defaultMessage='Visit Original Developer Portal'\n                                        />\n                                        <LaunchIcon className={classes.launchIcon} />\n                                    </MUILink>\n                                )}\n                            </Box>\n                            {isSubValidationDisabled && (\n                                <Box mt={2} ml={1} pr={6}>\n                                    <InlineMessage\n                                        type='info'\n                                        title={(\n                                            <FormattedMessage\n                                                id='Apis.Details.Overview.subscriptions.not.required'\n                                                defaultMessage='No subscriptions required'\n                                            />\n                                        )}\n                                    >\n                                        <Typography component='p'>\n                                            <FormattedMessage\n                                                id='Apis.Details.Overview.subscriptions.not.required.content'\n                                                defaultMessage='Subscriptions are not required for this API.\n                                                    You can consume this without subscribing to it.'\n                                            />\n                                        </Typography>\n                                    </InlineMessage>\n                                </Box>\n                            )}\n                            {(api.gatewayVendor === 'wso2' || !api.gatewayVendor)\n                                && allPolicies && allPolicies.length > 0 && !isSubValidationDisabled && (\n                                <>\n                                    <Box mt={6}>\n                                        <Typography variant='subtitle2' component='h3' className={classes.sectionTitle}>\n                                            <FormattedMessage\n                                                id='Apis.Details.Overview.business.plans.title'\n                                                defaultMessage='Business Plans'\n                                            />\n                                        </Typography>\n                                    </Box>\n                                    <Box\n                                        flexWrap='wrap'\n                                        display='flex'\n                                        flexDirection='row'\n                                        alignItems='center'\n                                        mt={2}\n                                        ml={1}\n                                        textAlign='center'\n                                    >\n                                        {allPolicies && allPolicies.map((tier) => (\n                                            tier.name.includes(CONSTANTS.DEFAULT_SUBSCRIPTIONLESS_PLAN) ? null : (\n                                                <Card className={classes.cardRoot} key={tier.name}>\n                                                    <CardContent>\n                                                        <Typography className={classes.cardMainTitle} color='textSecondary' gutterBottom>\n                                                            {tier.name}\n                                                        </Typography>\n                                                        <Box mt={2}>\n                                                            <Typography className={classes.requestCount} color='textSecondary'>\n                                                                {tier.requestCount === 2147483647 ? 'Unlimited' : tier.requestCount}\n                                                            </Typography>\n                                                        </Box>\n                                                        <Box>\n                                                            <Typography className={classes.requestUnit} color='textSecondary'>\n                                                                <FormattedMessage\n                                                                    id='Apis.Details.Overview.business.plans.requests.unit'\n                                                                    defaultMessage='Requests/{timeUnit}'\n                                                                    values={{\n                                                                        timeUnit: tier.timeUnit in subscriptionTimeUnits\n                                                                            ? subscriptionTimeUnits[tier.timeUnit]\n                                                                            : tier.timeUnit,\n                                                                    }}\n                                                                />\n                                                            </Typography>\n                                                        </Box>\n                                                    </CardContent>\n                                                </Card>\n                                            )\n                                        ))}\n                                    </Box>\n                                </>\n                            )}\n                            {(showCredentials && subscribedApplications.length > 0) && !isSubValidationDisabled && (\n                                <>\n                                    <Box mt={6}>\n                                        <Typography variant='subtitle2' component='h3' className={classes.sectionTitle}>\n                                            <FormattedMessage\n                                                id='Apis.Details.Overview.subscriptions.title'\n                                                defaultMessage='Subscriptions'\n                                            />\n                                        </Typography>\n                                    </Box>\n                                    <Box mt={2} ml={1} pr={6}>\n                                        <TableContainer component={Paper}>\n                                            <Table className={classes.table} aria-label='simple table'>\n                                                <TableHead>\n                                                    <TableRow>\n                                                        <TableCell>\n                                                            <FormattedMessage\n                                                                id={'Apis.Details.Overview.'\n                                                                    + 'api.credentials.subscribed.apps.name'}\n                                                                defaultMessage='Application Name'\n                                                            />\n                                                        </TableCell>\n                                                        <TableCell>\n                                                            <FormattedMessage\n                                                                id={'Apis.Details.Overview.api.'\n                                                                    + 'credentials.subscribed.apps.tier'}\n                                                                defaultMessage='Throttling Tier'\n                                                            />\n                                                        </TableCell>\n                                                        <TableCell>\n                                                            <FormattedMessage\n                                                                id={'Apis.Details.Overview.'\n                                                                    + 'api.credentials.subscribed.apps.status'}\n                                                                defaultMessage='Application Status'\n                                                            />\n                                                        </TableCell>\n                                                    </TableRow>\n                                                </TableHead>\n                                                <TableBody>\n                                                    {subscribedApplications.map((app) => (\n                                                        <TableRow key={app.label}>\n                                                            <TableCell component='th' scope='row'>\n                                                                <MUILink\n                                                                    component={Link}\n                                                                    to={`/applications/${app.value}/overview`}\n                                                                    underline='hover'\n                                                                >\n                                                                    {app.label}\n                                                                </MUILink>\n                                                            </TableCell>\n                                                            <TableCell>{app.policy}</TableCell>\n                                                            <TableCell>{app.status}</TableCell>\n                                                        </TableRow>\n                                                    ))}\n                                                </TableBody>\n                                            </Table>\n                                        </TableContainer>\n                                    </Box>\n                                </>\n                            )}\n                            <Box mt={6}>\n                                {showComments && (\n                                    <>\n                                        <Typography variant='subtitle2' component='h3' className={classes.sectionTitle}>\n                                            <FormattedMessage\n                                                id='Apis.Details.Overview.comments.title'\n                                                defaultMessage='Comments'\n                                            />\n                                        </Typography>\n                                        <Box pr={6}>\n                                            {api && (\n                                                <Comments apiId={api.id} isOverview />\n                                            )}\n                                        </Box>\n                                    </>\n                                )}\n                            </Box>\n                        </Box>\n                    </Grid>\n                    <Grid item xs={4} xl={3}>\n                        {user && showRating && (\n                            <Box display='flex' flexDirection='row' alignItems='center'>\n                                <StarRatingSummary avgRating={rating.avgRating} reviewCount={rating.total} returnCount={rating.count} />\n                                <VerticalDivider height={30} />\n                                <StarRatingBar\n                                    apiId={api.id}\n                                    isEditable\n                                    showSummary={false}\n                                    setRatingUpdate={setRatingUpdate}\n                                />\n                            </Box>\n                        )}\n                        <Box mt={6}>\n                            <Social />\n                        </Box>\n                        {/* Subscription count */}\n                        <Box mt={2} mb={1}>\n                            <Typography variant='subtitle2' component='h3' className={classes.sectionTitle}>\n                                <FormattedMessage\n                                    id='Apis.Details.Overview.subscriptions.title'\n                                    defaultMessage='Subscriptions'\n                                />\n                            </Typography>\n                            { !isSubValidationDisabled ? (\n                                <Typography variant='body2'>\n                                    {api.subscriptions || 0}\n                                </Typography>\n                            ) : (\n                                <Typography variant='body2'>\n                                    N/A\n                                </Typography>\n                            )}\n                        </Box>\n                        <Box mt={2} mb={1}>\n                            <Typography variant='subtitle2' component='h3' className={classes.sectionTitle}>\n                                <FormattedMessage\n                                    id='Apis.Details.Overview.tags.title'\n                                    defaultMessage='Tags'\n                                />\n                            </Typography>\n                        </Box>\n\n                        <Typography variant='body2' className={classes.endpointLabel}>\n                            {api.tags.map((tag) => (\n                                <Chip\n                                    label={tag}\n                                    key={tag}\n                                    component={Link}\n                                    clickable\n                                    to={`/apis?offset=0&query=tag:${tag}`}\n                                    classes={{ root: classes.chipRoot }}\n                                    variant='outlined'\n                                    size='small'\n                                />\n                            ))}\n                            {api.tags.length === 0 && (\n                                <FormattedMessage\n                                    id='Apis.Details.Overview.list.tags.not'\n                                    defaultMessage='Not Tagged'\n                                />\n                            )}\n                        </Typography>\n\n                        {/* Documentation */}\n                        {(showDocuments && allDocuments && allDocuments.length > 0) && (\n                            <>\n                                <Box mt={6}>\n                                    <Typography variant='subtitle2' component='h3' className={classes.sectionTitle}>\n                                        <FormattedMessage\n                                            id='Apis.Details.Overview.documents.title'\n                                            defaultMessage='Documents'\n                                        />\n                                    </Typography>\n                                </Box>\n                                <Box pr={2} pl={1}>\n                                    <OverviewDocuments apiId={api.id} />\n                                    {allDocuments.length > 2 && (\n                                        <MUILink\n                                            component={Link}\n                                            to={'/apis/' + api.id + '/documents'}\n                                            className={classes.moreLink}\n                                            underline='hover'\n                                        >\n                                            {allDocuments.length - 2}\n                                            {' '}\n                                            <FormattedMessage\n                                                id='Apis.Details.Overview.comments.show.more.more'\n                                                defaultMessage='more'\n                                            />\n                                        </MUILink>\n                                    )}\n                                </Box>\n                            </>\n\n                        )}\n                        {api.businessInformation.businessOwnerEmail && (\n                            <>\n                                <Box mt={6}>\n                                    <Typography variant='subtitle2' component='h3' className={classes.sectionTitle}>\n                                        <FormattedMessage\n                                            id='Apis.Details.Overview.business.info'\n                                            defaultMessage='Business Info'\n                                        />\n                                    </Typography>\n                                </Box>\n                                <Box mt={1}>\n                                    <Typography variant='body2'>\n                                        {api.businessInformation.businessOwnerEmail}\n                                    </Typography>\n                                </Box>\n                            </>\n                        )}\n                        <Box mt={6}>\n                            <Typography variant='subtitle2' component='h3' className={classes.sectionTitle}>\n                                <FormattedMessage\n                                    id='Apis.Details.Overview.source'\n                                    defaultMessage='Source'\n                                />\n                            </Typography>\n                        </Box>\n                        {(api.type === 'HTTP' || api.type === 'SOAPTOREST'\n                            || api.type === 'SOAP' || api.type === 'GRAPHQL' || api.type === 'WS' || api.type === 'WEBSUB'\n                            || api.type === 'SSE' || api.type === 'ASYNC') && (\n                            <Box mt={2}>\n                                {selectedEndpoint && (<SourceDownload selectedEndpoint={selectedEndpoint} />)}\n                            </Box>\n                        )}\n                        {/* Key Managers */}\n                        {getKeyManagers() && (\n                            <>\n                                <Box mt={6}>\n                                    <Typography variant='subtitle2' component='h3' className={classes.sectionTitle}>\n                                        <FormattedMessage\n                                            id='Apis.Details.Overview.key.manager'\n                                            defaultMessage='Key Managers'\n                                        />\n                                    </Typography>\n                                </Box>\n                                <Box mt={1}>\n                                    {getKeyManagers()}\n                                </Box>\n                            </>\n                        )}\n                        {api.additionalProperties && Object.keys(api.additionalProperties).length > 0 && (\n                            <>\n                                <Box mt={6}>\n                                    <Typography variant='subtitle2' className={classes.sectionTitle}>\n                                        <FormattedMessage\n                                            id='Apis.Details.Overview.additional.properties'\n                                            defaultMessage='Additonal properties'\n                                        />\n                                    </Typography>\n                                </Box>\n                                <Box mt={1} ml={1}>\n                                    {api.additionalProperties\n                                        .filter(({ name, display }) => display && !['slack_url', 'github_repo'].includes(name))\n                                        .map(({ name, value }) => {\n                                            return (\n                                                <Typography variant='body2'>\n                                                    {name}\n                                                    {' '}\n                                                    :\n                                                    {' '}\n                                                    {value}\n                                                </Typography>\n                                            );\n                                        })}\n                                </Box>\n                            </>\n                        )}\n                    </Grid>\n                </Grid>\n            </Paper>\n        </Root>\n    );\n}\n\nexport default Overview;\n"],"names":["_interopRequireDefault","exports","_createSvgIcon","_jsxRuntime","default","jsx","d","PREFIX","classes","root","docTitle","docBadge","button","displayURL","displayURLLink","docSummary","fileAvailability","Root","styled","_ref","theme","paddingTop","spacing","paddingBottom","fontWeight","fontSize","color","palette","grey","padding","background","primary","main","position","top","marginTop","getContrastText","display","paddingLeft","text","marginLeft","ReactMarkdown","lazy","View","props","doc","apiId","intl","api","useContext","ApiContext","code","setCode","useState","isFileAvailable","setIsFileAvailable","restAPI","API","skipHtml","Settings","markdown","markdownSyntaxHighlighterProps","syntaxHighlighterProps","syntaxHighlighterDarkTheme","useEffect","sourceType","getInlineContentOfDocument","documentId","then","dataDoc","Object","keys","forEach","fieldName","regex","RegExp","replace","catch","error","getFileForDocument","React","summary","otherTypeName","Typography","variant","className","Suspense","fallback","CircularProgress","children","remarkPlugins","remarkGfm","components","_ref2","node","inline","propsInner","_objectWithoutProperties","_excluded","match","exec","SyntaxHighlighter","_extends","String","style","vscDarkPlus","vs","language","PreTag","HTMLRender","html","href","sourceUrl","target","rel","Icon","Button","disabled","onClick","handleDownload","done","response","fileName","contentDisposition","headers","indexOf","matches","contentType","blob","Blob","data","type","window","navigator","msSaveBlob","URL","webkitURL","downloadUrl","createObjectURL","aTag","document","createElement","download","location","body","appendChild","click","setTimeout","revokeObjectURL","downloadFile","FormattedMessage","id","defaultMessage","propTypes","PropTypes","isRequired","formatMessage","injectIntl","getTableContainerUtilityClass","slot","generateUtilityClass","generateUtilityClasses","TableContainerRoot","name","overridesResolver","styles","width","overflowX","TableContainer","inProps","ref","component","other","ownerState","composeClasses","useUtilityClasses","as","clsx","paper","codeIcon","iconStyle","backgroundColor","border","boxShadow","shadows","cursor","custom","infoBar","right","getModalStyle","left","transform","modalStyle","open","setOpen","codeCopied","setCodeCopied","url","searchParams","set","embedCode","CodeIcon","handleOpen","Modal","onClose","handleClose","Tooltip","title","placement","IconButton","size","clipboard","writeText","FileCopy","socialLink","oneFlex","socialLinkWrapper","divider","marginRight","flex","alignItems","paddingRight","borderRight","height","apiName","apiUrl","encodeURI","useTheme","slack","github","additionalProperties","find","prop","social","showSharing","active","showFacebook","showReddit","showTwitter","showEmbed","showEmail","value","src","app","context","alt","EmbedCode","MailOutlineIcon","TaskState","completed","errors","inProgress","completedMessage","inProgressMessage","severity","message","description","Grid","item","xs","Alert","icon","thickness","restApi","initialTaskStates","subscribe","prepare","generate","tasksReducer","state","action","status","_objectSpread","GoToTryOut","user","AuthManager","getUser","subscribedApplications","applicationsAvailable","updateSubscriptionData","defaultApplications","filter","x","label","defaultApplication","length","tasksStatus","tasksStatusDispatcher","useReducer","showStatus","setShowStatus","useIntl","history","useHistory","isXsOrBelow","useMediaQuery","breakpoints","down","isAsyncAPI","CONSTANTS","API_TYPES","WS","WEBSUB","SSE","ASYNC","isPrototypedAPI","lifeCycleStatus","toLowerCase","taskManager","async","promisedTask","taskResult","console","pushToTryout","push","values","map","tasks","reduce","current","anyErrors","redirectButton","minWidth","whiteSpace","sx","advertiseInfo","advertised","gatewayVendor","throttlingPolicy","tiers","tierName","keyRequest","getKeyManagers","keyType","supportedGrantTypes","callbackUrl","keyManager","responseKeyManagerList","selectedKeyManager","list","responseKeyManagerListDefault","availableGrantTypes","k","includes","e","getKeyRequest","applicationId","application","Application","get","getKeys","generateKeys","keyState","log","justifyContent","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","role","Fade","in","Box","bgcolor","borderRadius","outline","p","container","direction","pr","input","avatar","sectionTitle","borderBottom","margin","SolaceEndpoints","urlCopied","setUrlCopied","protocols","setProtocols","protocolsList","asyncTransportProtocols","JSON","parse","gatewayType","gutterBottom","align","endpointURLs","environmentDisplayName","marginBottom","Chip","upperCaseString","protocol","Paper","InputBase","inputProps","endPointUrl","Avatar","sizes","interactive","StyledBox","Environments","selectedEndpoint","updateSelectedEndpoint","onCopy","flexDirection","mr","for","Select","environmentName","onChange","endpoint","MenuItem","VerticalDivider","URLs","ws","wss","py","arrow","https","http","Divider","opacity","pt","apiExternalProductionEndpoint","apiExternalSandboxEndpoint","ml","mt","getDefaultVersionUrl","defaultVersionURLs","iconClass","boxBadge","subscriptionBox","linkStyle","subscriptionTop","resourceWrapper","actionPanel","linkToTest","emptyBox","listWrapper","listItemStyle","listItemIcon","listItemPrimary","maxWidth","contentAreaWidth","secondary","A400","typography","h5","textAlign","overflow","textDecoration","OverviewDocuments","docs","setDocs","getDocumentsByAPIId","obj","List","index","ListItem","gotoDoc","key","ListItemIcon","ListItemText","apiClient","accessTokenPart","Utils","getCookieWithoutEnvironment","isTokenCopied","setIsTokenCopied","customUrl","tenantDomain","customUrlEnabledDomain","tenant","queryString","search","downloadWSDL","preventDefault","getWsdlClient","downloadWSDLForEnvironment","downloadGraphQLSchema","getGraphQLSchemaByAPIId","provider","version","downloadSwagger","promiseSwagger","getSwaggerByAPIIdAndEnvironment","getSwaggerByAPIId","downloadAsync","getAsyncApiSpecificationByAPIIdAndEnvironment","onKeyDown","CloudDownloadRounded","Link","origin","FileCopyIcon","linkTitle","textLabel","textValue","apiThumb","chipRoot","subtitle","cardRoot","moreLink","table","requestCount","requestUnit","launchIcon","originalDevportalUrl","textIndent","borderColor","apiDetailPages","showCredentials","showComments","showDocuments","showThumbnail","showRating","showSwaggerDescriptionOnOverview","descriptionHidden","setDescriptionHidden","isLoading","setIsLoading","notFound","setNotFound","allDocuments","setAllDocuments","overviewDocOverride","setOverviewDocOverride","swaggerDescription","setSwaggerDescription","allPolicies","setAllPolicies","rating","setRating","avgRating","total","count","setSelectedEndpoint","descriptionIsBig","smallDescription","limit","split","slice","join","subscriptionTimeUnits","min","hours","days","months","years","isSubValidationDisabled","DEFAULT_SUBSCRIPTIONLESS_PLAN","getSubscriptionPolicies","getAllTiers","throttlingPolicyLimit","filteredList","str","policyName","filteredApiPolicies","t","isApiPolicy","getDocuments","overviewDoc","Promise","all","swaggerResponse","swagger","info","keyManagers","km","Progress","plugins","gfm","escapeHtml","ResourceNotFound","formattedMessage","paperWithDoc","elevation","fullScreen","dontShowName","sm","xl","ApiThumb","customWidth","customHeight","showInfo","getProvider","businessInformation","businessOwner","trim","selectedEnvName","filteredEndpoints","ep","originalDevPortalUrl","MUILink","underline","LaunchIcon","InlineMessage","flexWrap","tier","Card","CardContent","cardMainTitle","timeUnit","Table","TableHead","TableRow","TableCell","TableBody","scope","to","policy","Comments","isOverview","StarRatingSummary","reviewCount","returnCount","StarRatingBar","isEditable","showSummary","setRatingUpdate","ratingLocal","Social","mb","subscriptions","endpointLabel","tags","tag","clickable","pl","businessOwnerEmail","SourceDownload","_ref3"],"sourceRoot":""}