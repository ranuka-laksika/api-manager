{"version":3,"file":"Apis.085aa6ad48a8df90ba85.bundle.js","mappings":"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","sources":["webpack://@wso2apim/devportal/./source/src/app/components/Apis/Listing/TagCloudListing.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Shared/withSettingsContext.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Listing/ApiBreadcrumbs.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Listing/APICards/DocThumb.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Listing/APICards/DefThumb.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Listing/ApiTableView.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Listing/APICategoryThumb.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Listing/CategoryListingCategories.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Listing/ApiTagCloud.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Listing/RecommendedApiThumb.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Listing/Recommendations.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Listing/CommonListing.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Base/Errors/SubscriptionNotFound.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Details/SolaceApi/SolaceTopicsInfo.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Details/Breadcrumb.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Details/Credentials/Wizard/ButtonPanel.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Details/Credentials/Wizard/CreateAppStep.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Details/Credentials/Wizard/SubscribeToAppStep.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Details/Credentials/Wizard/GenerateKeysStep.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Details/Credentials/Wizard/GenerateAccessTokenStep.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Details/Credentials/Wizard/CopyAccessTokenStep.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Details/Credentials/Wizard/Wizard.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Details/index.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Chat/ChatIcon.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Chat/ChatInput.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Chat/ChatMessage.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Chat/Loader.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Chat/ChatMessages.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Chat/Header.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Chat/SimilaritySearch.js","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Chat/ChatWindow.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Chat/AISearchAssistant.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Apis.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Shared/AppsAndKeys/SubscribeToApi.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Listing/ApiTagThumb.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Listing/TagCloudListingTags.jsx"],"sourcesContent":["/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useState } from 'react';\nimport { styled, useTheme } from '@mui/material/styles';\nimport Typography from '@mui/material/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport API from 'AppData/api';\nimport TagCloudListingTags from './TagCloudListingTags';\nimport CustomIcon from '../../Shared/CustomIcon';\n\nconst PREFIX = 'TagCloudListing';\n\nconst classes = {\n    appBar: `${PREFIX}-appBar`,\n    mainIconWrapper: `${PREFIX}-mainIconWrapper`,\n    mainTitle: `${PREFIX}-mainTitle`,\n    mainTitleWrapper: `${PREFIX}-mainTitleWrapper`,\n    content: `${PREFIX}-content`,\n    listContentWrapper: `${PREFIX}-listContentWrapper`,\n    iconDefault: `${PREFIX}-iconDefault`,\n};\n\nconst Root = styled('main')((\n    {\n        theme,\n    },\n) => ({\n    [`& .${classes.appBar}`]: {\n        height: 70,\n        background: theme.custom.infoBar.background,\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n        borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n\n    [`& .${classes.mainIconWrapper}`]: {\n        paddingTop: 13,\n        paddingLeft: 20,\n        paddingRight: 20,\n    },\n\n    [`& .${classes.mainTitle}`]: {\n        paddingTop: 10,\n    },\n\n    [`& .${classes.mainTitleWrapper}`]: {\n        flexGrow: 1,\n    },\n\n    [`&.${classes.content}`]: {\n        flexGrow: 1,\n    },\n\n    [`& .${classes.listContentWrapper}`]: {\n        padding: `0 ${theme.spacing(3)}`,\n    },\n\n    [`& .${classes.iconDefault}`]: {\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n    },\n}));\n\n/**\n * Renders tag cloud.\n * @returns {JSX} Tag cloud listing.\n */\nexport default function TagCloudListing() {\n    const theme = useTheme();\n    const [allTags, setAllTags] = useState(null);\n    const tagsLimit = -1;\n    useEffect(() => {\n        const restApiClient = new API();\n        const promisedTags = restApiClient.getAllTags(tagsLimit);\n        promisedTags\n            .then((response) => {\n                setAllTags(response.body.list);\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    }, []);\n    const strokeColorMain = theme.palette.getContrastText(theme.palette.background.paper);\n\n    return (\n        <Root className={classes.content}>\n            <div className={classes.appBar}>\n                <div className={classes.mainIconWrapper}>\n                    <CustomIcon strokeColor={strokeColorMain} width={42} height={42} icon='api' />\n                </div>\n                <div className={classes.mainTitleWrapper}>\n                    <Typography variant='h4' className={classes.mainTitle}>\n                        <FormattedMessage\n                            defaultMessage='API Groups'\n                            id='Apis.Listing.TagCloudListing.apigroups.main'\n                        />\n                    </Typography>\n                </div>\n            </div>\n            <div className={classes.listContentWrapper}>\n                {allTags && <TagCloudListingTags allTags={allTags} mainPage />}\n            </div>\n        </Root>\n    );\n}\n","import React from 'react';\nimport { SettingsConsumer } from './SettingsContext';\n\nconst withSettings = (WrappedComponent) => {\n    /**\n     * Higher order component with settings\n     * @param {*} props properties\n     * @returns {Context.Consumer}\n     */\n    function HOCWithSettings(props) {\n        return (\n            <SettingsConsumer>\n                {\n                    context => <WrappedComponent {...context} {...props} />\n                }\n            </SettingsConsumer>\n        );\n    }\n    return HOCWithSettings;\n};\n\nexport default withSettings;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { styled, useTheme } from '@mui/material/styles';\nimport { FormattedMessage } from 'react-intl';\nimport Paper from '@mui/material/Paper';\nimport Breadcrumbs from '@mui/material/Breadcrumbs';\nimport Link from '@mui/material/Link';\nimport { Link as RouterLink } from 'react-router-dom';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport Icon from '@mui/material/Icon';\n\nconst PREFIX = 'ApiBreadcrumbs';\n\nconst classes = {\n    root: `${PREFIX}-root`,\n    link: `${PREFIX}-link`,\n    linkNotActive: `${PREFIX}-linkNotActive`,\n    icon: `${PREFIX}-icon`,\n    selectedTagText: `${PREFIX}-selectedTagText`,\n    apiGroup: `${PREFIX}-apiGroup`,\n};\n\nconst StyledPaper = styled(Paper)((\n    {\n        theme,\n    },\n) => ({\n    [`&.${classes.root}`]: {\n        padding: theme.spacing(1, 3),\n    },\n\n    [`& .${classes.link}`]: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n\n    [`& .${classes.linkNotActive}`]: {\n        display: 'flex',\n        alignItems: 'center',\n        cursor: 'default',\n    },\n\n    [`& .${classes.icon}`]: {\n        marginRight: theme.spacing(0.5),\n        width: 20,\n        height: 20,\n    },\n\n    [`& .${classes.selectedTagText}`]: {\n        textIndent: 4,\n    },\n\n    [`& .${classes.apiGroup}`]: {\n        color: theme.palette.grey[800],\n    },\n}));\n\n/**\n * Render no api breadcrumb section.\n * @param {JSON} props properties passed down from the parent.\n * @returns {JSX} Api breadcrumb section.\n */\nexport default function ApiBreadcrumbs(props) {\n    const theme = useTheme();\n    const { selectedTag } = props;\n    return (\n        <StyledPaper elevation={0} className={classes.root}>\n            <Breadcrumbs aria-label='breadcrumb'>\n                <RouterLink\n                    to={theme.custom.tagWise.active && theme.custom.tagWise.style === 'page' ? '/api-groups' : '/apis'}\n                    className={classes.apiGroup}\n                >\n                    <Link color='inherit' className={classes.link} underline='hover'>\n                        <Icon className={classes.icon}>dynamic_feed</Icon>\n                        <FormattedMessage defaultMessage='API Groups' id='Apis.Listing.ApiBreadcrumbs.apigroups.main' />\n                    </Link>\n                </RouterLink>\n\n                {selectedTag && (\n                    <Link color='inherit' className={classes.linkNotActive} underline='hover'>\n                        <CustomIcon width={16} height={16} icon='api' />\n                        <span className={classes.selectedTagText}>{selectedTag}</span>\n                    </Link>\n                )}\n            </Breadcrumbs>\n        </StyledPaper>\n    );\n}\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { styled } from '@mui/material/styles';\nimport { useTheme } from '@mui/material';\nimport Typography from '@mui/material/Typography';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport { FormattedMessage } from 'react-intl';\nimport ImageGenerator from './ImageGenerator';\n\nconst PREFIX = 'DocThumbLegacy';\n\nconst classes = {\n    root: `${PREFIX}-root`,\n    media: `${PREFIX}-media`,\n    content: `${PREFIX}-content`,\n    actions: `${PREFIX}-actions`,\n    header: `${PREFIX}-header`,\n    info: `${PREFIX}-info`,\n    apiName: `${PREFIX}-apiName`,\n    version: `${PREFIX}-version`,\n    subtitle: `${PREFIX}-subtitle`,\n};\n\nconst StyledCard = styled(Card)(({ theme }) => ({\n    [`&.${classes.root}`]: {\n        width: theme.custom.thumbnail.width,\n        backgroundColor: '#f5f5f5',\n        minHeight: 330,\n        margin: theme.spacing(2),\n        cursor: 'pointer',\n        transition: 'background-color 0.3s ease',\n        '&:hover': {\n            backgroundColor: theme.palette.grey[300],\n        },\n    },\n    [`& .${classes.media}`]: {\n        height: 200,\n    },\n    [`& .${classes.content}`]: {\n        paddingBottom: theme.spacing(1),\n    },\n    [`& .${classes.actions}`]: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        padding: theme.spacing(1),\n    },\n    [`& .${classes.header}`]: {\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n    },\n    [`& .${classes.info}`]: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    [`& .${classes.apiName}`]: {\n        flex: 1,\n    },\n    [`& .${classes.version}`]: {\n        flex: 1,\n        textAlign: 'right',\n    },\n    [`& .${classes.subtitle}`]: {\n        color: theme.palette.grey[600],\n        fontSize: '0.75rem',\n    },\n}));\n\nconst DocThumbLegacy = ({ doc }) => {\n    const [state] = useState({\n        category: null,\n        selectedIcon: null,\n        color: null,\n        backgroundIndex: null,\n        imageObj: null,\n    });\n\n    const theme = useTheme();\n    const history = useHistory();\n    const detailsLink = `/apis/${doc.apiUUID}/documents/${doc.id}/details`;\n    const {\n        category, selectedIcon, color, backgroundIndex,\n    } = state;\n    const {\n        name, sourceType, apiName, apiVersion,\n    } = doc;\n\n    useEffect(() => {\n        return () => {\n            if (state.imageObj) {\n                window.URL.revokeObjectURL(state.imageObj);\n            }\n        };\n    }, [state.imageObj]);\n\n    const handleCardClick = () => {\n        history.push(detailsLink);\n    };\n\n    return (\n        <StyledCard className={classes.root} onClick={handleCardClick}>\n            {theme.custom.thumbnail.defaultApiImage ? (\n                <CardMedia\n                    className={classes.media}\n                    image={theme.custom.thumbnail.defaultApiImage}\n                    title='Document Image'\n                />\n            ) : (\n                <ImageGenerator\n                    width={theme.custom.thumbnail.width}\n                    height={140}\n                    api={doc}\n                    fixedIcon={{\n                        key: selectedIcon,\n                        color,\n                        backgroundIndex,\n                        category,\n                        doc,\n                    }}\n                />\n            )}\n            <CardContent className={classes.content}>\n                <Typography\n                    variant='h5'\n                    component='div'\n                    className={classes.header}\n                    title={name}\n                >\n                    {name}\n                </Typography>\n                <Typography variant='caption'>\n                    <FormattedMessage defaultMessage='Source Type: ' id='Apis.Listing.DocThumb.sourceType' />\n                    {sourceType}\n                </Typography>\n                <div className={classes.info}>\n                    <Typography variant='subtitle1' className={classes.apiName}>\n                        {apiName}\n                    </Typography>\n                    <Typography variant='subtitle1' className={classes.version}>\n                        {apiVersion}\n                    </Typography>\n                </div>\n                <div className={classes.info}>\n                    <Typography className={classes.subtitle}>\n                        <FormattedMessage defaultMessage='API Name' id='Apis.Listing.DocThumb.apiName' />\n                    </Typography>\n                    <Typography className={classes.subtitle} style={{ textAlign: 'right' }}>\n                        <FormattedMessage defaultMessage='API Version' id='Apis.Listing.DocThumb.apiVersion' />\n                    </Typography>\n                </div>\n            </CardContent>\n        </StyledCard>\n    );\n};\n\nDocThumbLegacy.propTypes = {\n    doc: PropTypes.shape({\n        name: PropTypes.string,\n        sourceType: PropTypes.string,\n        apiName: PropTypes.string,\n        apiVersion: PropTypes.string,\n        id: PropTypes.string,\n        apiUUID: PropTypes.string,\n    }).isRequired,\n};\n\nexport default DocThumbLegacy;\n","/*\n * Copyright (c) 2024, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { styled } from '@mui/material/styles';\nimport { useTheme } from '@mui/material';\nimport Typography from '@mui/material/Typography';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport { FormattedMessage } from 'react-intl';\nimport ImageGenerator from './ImageGenerator';\n\nconst PREFIX = 'DefinitionThumb';\n\nconst classes = {\n    root: `${PREFIX}-root`,\n    media: `${PREFIX}-media`,\n    content: `${PREFIX}-content`,\n    actions: `${PREFIX}-actions`,\n    header: `${PREFIX}-header`,\n    info: `${PREFIX}-info`,\n    apiName: `${PREFIX}-apiName`,\n    version: `${PREFIX}-version`,\n    subtitle: `${PREFIX}-subtitle`,\n};\n\nconst StyledCard = styled(Card)(({ theme }) => ({\n    [`&.${classes.root}`]: {\n        width: theme.custom.thumbnail.width,\n        backgroundColor: '#f5f5f5',\n        minHeight: 330,\n        margin: theme.spacing(2),\n        cursor: 'pointer',\n        display: 'flex',\n        flexDirection: 'column',\n        transition: 'background-color 0.3s ease',\n        '&:hover': {\n            backgroundColor: theme.palette.grey[300],\n        },\n    },\n    [`& .${classes.media}`]: {\n        height: 200,\n    },\n    [`& .${classes.content}`]: {\n        flexGrow: 1,\n        paddingBottom: theme.spacing(1),\n    },\n    [`& .${classes.actions}`]: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        padding: theme.spacing(1),\n    },\n    [`& .${classes.header}`]: {\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'normal',\n        wordBreak: 'break-word',\n    },\n    [`& .${classes.info}`]: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    [`& .${classes.apiName}`]: {\n        flex: 1,\n    },\n    [`& .${classes.version}`]: {\n        flex: 1,\n        textAlign: 'right',\n    },\n    [`& .${classes.subtitle}`]: {\n        color: theme.palette.grey[600],\n        fontSize: '0.75rem',\n    },\n}));\n\nconst DefinitionThumb = ({ def }) => {\n    const [state] = useState({\n        category: null,\n        selectedIcon: null,\n        color: null,\n        backgroundIndex: null,\n        imageObj: null,\n    });\n\n    const theme = useTheme();\n    const history = useHistory();\n    const detailsLink = `/apis/${def.apiUUID}/overview`;\n    const {\n        name, apiName, apiVersion,\n    } = def;\n    const {\n        category, selectedIcon, color, backgroundIndex,\n    } = state;\n\n    useEffect(() => {\n        return () => {\n            if (state.imageObj) {\n                window.URL.revokeObjectURL(state.imageObj);\n            }\n        };\n    }, [state.imageObj]);\n\n    const handleCardClick = () => {\n        history.push(detailsLink);\n    };\n\n    return (\n        <StyledCard className={classes.root} onClick={handleCardClick}>\n            {theme.custom.thumbnail.defaultApiImage ? (\n                <CardMedia\n                    className={classes.media}\n                    image={theme.custom.thumbnail.defaultApiImage}\n                    title='API Definition Image'\n                />\n            ) : (\n                <ImageGenerator\n                    width={theme.custom.thumbnail.width}\n                    height={140}\n                    api={def}\n                    fixedIcon={{\n                        key: selectedIcon,\n                        color,\n                        backgroundIndex,\n                        category,\n                        def,\n                    }}\n                />\n            )}\n            <CardContent className={classes.content}>\n                <Typography\n                    variant='h5'\n                    component='div'\n                    className={classes.header}\n                    title={name}\n                >\n                    {name}\n                </Typography>\n                <div className={classes.info}>\n                    <Typography variant='subtitle1' className={classes.apiName}>\n                        {apiName}\n                    </Typography>\n                    <Typography variant='subtitle1' className={classes.version}>\n                        {apiVersion}\n                    </Typography>\n                </div>\n                <div className={classes.info}>\n                    <Typography className={classes.subtitle}>\n                        <FormattedMessage defaultMessage='API Name' id='Apis.Listing.DefThumb.apiName' />\n                    </Typography>\n                    <Typography className={classes.subtitle} style={{ textAlign: 'right' }}>\n                        <FormattedMessage defaultMessage='API Version' id='Apis.Listing.DefThumb.apiVersion' />\n                    </Typography>\n                </div>\n            </CardContent>\n        </StyledCard>\n    );\n};\n\nDefinitionThumb.propTypes = {\n    def: PropTypes.shape({\n        id: PropTypes.string,\n        name: PropTypes.string,\n        apiName: PropTypes.string,\n        apiVersion: PropTypes.string,\n        apiContext: PropTypes.string,\n        apiUUID: PropTypes.string,\n        apiProvider: PropTypes.string,\n        apiType: PropTypes.string,\n    }).isRequired,\n};\n\nexport default DefinitionThumb;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport {\n    styled,\n    createTheme,\n    ThemeProvider,\n    StyledEngineProvider,\n    adaptV4Theme,\n} from '@mui/material/styles';\nimport { Link } from 'react-router-dom';\nimport MUIDataTable from 'mui-datatables';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport merge from 'lodash.merge';\nimport cloneDeep from 'lodash.clonedeep';\nimport queryString from 'query-string';\nimport API from 'AppData/api';\nimport Typography from '@mui/material/Typography';\nimport Configurations from 'Config';\nimport StarRatingBar from 'AppComponents/Apis/Listing/StarRatingBar';\nimport withSettings from 'AppComponents/Shared/withSettingsContext';\nimport Loading from 'AppComponents/Base/Loading/Loading';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Icon from '@mui/material/Icon';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport DefaultConfigurations from 'AppData/defaultTheme';\nimport { useTheme } from '@mui/material';\nimport ImageGenerator from './APICards/ImageGenerator';\nimport ApiThumb from './ApiThumb';\nimport DocThumb from './APICards/DocThumb';\nimport DefinitionThumb from './APICards/DefThumb';\nimport { ApiContext } from '../Details/ApiContext';\nimport NoApi from './NoApi';\n\nconst PREFIX = 'ApiTableViewLegacy';\n\nconst classes = {\n    apiNameLink: `${PREFIX}-apiNameLink`,\n};\n\nconst StyledStyledEngineProvider = styled(StyledEngineProvider)((\n    {\n        theme,\n    },\n) => ({\n    [`& .${classes.apiNameLink}`]: {\n        display: 'flex',\n        alignItems: 'center',\n        '& span': {\n            marginLeft: theme.spacing(1),\n        },\n        color: theme.palette.getContrastText(theme.custom.listView.tableBodyEvenBackgrund),\n        '& .material-icons': {\n            marginTop: 5,\n            color: `${theme.custom.thumbnail.iconColor} !important`,\n            fontSize: `${theme.custom.thumbnail.listViewIconSize}px !important`,\n        },\n    },\n}));\n\n/**\n * Table view for api listing\n *\n * @class ApiTableViewLegacy\n * @extends {React.Component}\n */\nclass ApiTableViewLegacy extends React.Component {\n    /**\n     * @inheritdoc\n     * @param {*} props properties\n     * @memberof ApiTableViewLegacy\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: null,\n            loading: true,\n        };\n        this.page = 0;\n        this.count = 100;\n        this.rowsPerPage = localStorage.getItem('portal.numberOfRows') || 10;\n        this.pageType = null;\n    }\n\n    /**\n     * Component mount call back\n     * @returns {void}\n     */\n    componentDidMount() {\n        this.apiType = this.context.apiType;\n        this.getData();\n    }\n\n    /**\n     * Component update call back\n     * @param {JSON} prevProps properties from previous state of the component\n     * @returns {void}\n     */\n    componentDidUpdate(prevProps) {\n        const { query, selectedTag } = this.props;\n        if (\n            this.apiType !== this.context.apiType\n            || query !== prevProps.query\n            || prevProps.selectedTag !== selectedTag\n        ) {\n            this.page = 0;\n            this.apiType = this.context.apiType;\n            this.getData();\n        }\n    }\n\n    getMuiTheme = () => {\n        const { gridView, theme } = this.props;\n        let themeAdditions = {};\n        const muiTheme = {\n            overrides: {\n                MUIDataTable: {\n                    root: {\n                        backgroundColor: 'transparent',\n                        marginLeft: 40,\n                        marginBottom: 20,\n                        width: '100%',\n                    },\n                    paper: {\n                        boxShadow: 'none',\n                        backgroundColor: 'transparent',\n                        width: '100%',\n                    },\n                    tableRoot: {\n                        border: 'solid 1px #fff',\n                        '& a': {\n                            display: 'flex',\n                            alignItems: 'center',\n                        },\n                        '& a > div': {\n                            paddingRight: 10,\n                        },\n                        '& td': {\n                            whiteSpace: 'nowrap',\n                            lineHeight: 1,\n                        },\n                        '& tr:nth-child(even)': {\n                            backgroundColor: theme.custom.listView.tableBodyEvenBackgrund,\n                            '& td': {\n                                color: theme.palette.getContrastText(theme.custom.listView.tableBodyEvenBackgrund),\n                            },\n                        },\n                        '& tr:nth-child(odd)': {\n                            backgroundColor: theme.custom.listView.tableBodyOddBackgrund,\n                            '& td': {\n                                color: theme.palette.getContrastText(theme.custom.listView.tableBodyOddBackgrund),\n                            },\n                        },\n                        '& th': {\n                            backgroundColor: theme.custom.listView.tableHeadBackground,\n                            color: theme.palette.getContrastText(theme.custom.listView.tableHeadBackground),\n                        },\n                    },\n                },\n                MUIDataTablePagination: {\n                    root: {\n                        color: theme.palette.getContrastText(theme.palette.background.default),\n\n                    },\n                },\n                MuiMenuItem: {\n                    root: {\n                        color: theme.palette.getContrastText(theme.palette.background.default),\n                    },\n                },\n                MUIDataTableToolbar: {\n                    root: {\n                        '& svg': {\n                            color: theme.palette.getContrastText(theme.palette.background.default),\n                        },\n                    },\n                },\n            },\n        };\n        if (gridView) {\n            themeAdditions = {\n                overrides: {\n                    MUIDataTable: {\n                        tableRoot: {\n                            display: 'block',\n                            border: 'none',\n                            '& tbody': {\n                                display: 'flex',\n                                flexWrap: 'wrap',\n                                marginLeft: 0,\n                            },\n                            '& thead': {\n                                display: 'none',\n                            },\n                            '& tr:nth-child(odd),& tr:nth-child(even)': {\n                                display: 'block',\n                                marginRight: 5,\n                                marginBottom: 5,\n                                backgroundColor: 'transparent',\n                            },\n                            '& td': {\n                                display: 'block',\n                                backgroundColor: 'transparent',\n                            },\n                        },\n                        paper: {\n                            boxShadow: 'none',\n                            backgroundColor: 'transparent',\n                        },\n                    },\n                    MUIDataTableBodyCell: {\n                        root: {\n                            backgroundColor: 'transparent',\n                            width: '100%',\n                        },\n                    },\n                },\n            };\n        }\n        const systemTheme = merge({}, DefaultConfigurations, Configurations, { custom: cloneDeep(theme.custom) });\n        const dataTableTheme = merge({}, muiTheme, systemTheme, themeAdditions);\n        return createTheme(adaptV4Theme(dataTableTheme));\n    };\n\n    // get data\n    getData = () => {\n        const { intl } = this.props;\n        this.setState({ loading: true });\n        this.xhrRequest()\n            .then((data) => {\n                const { body } = data;\n                const { list, pagination } = body;\n                const { total } = pagination;\n                this.count = total;\n                this.setState({ data: list });\n            })\n            .catch((error) => {\n                const { response } = error;\n                const { setTenantDomain } = this.props;\n                if (response && response.body.code === 901300) {\n                    setTenantDomain('INVALID');\n                    Alert.error(intl.formatMessage({\n                        defaultMessage: 'Invalid tenant domain',\n                        id: 'Apis.Listing.ApiTableView.invalid.tenant.domain',\n                    }));\n                } else {\n                    Alert.error(intl.formatMessage({\n                        defaultMessage: 'Error While Loading APIs',\n                        id: 'Apis.Listing.ApiTableView.error.loading',\n                    }));\n                }\n            })\n            .finally(() => {\n                this.setState({ loading: false });\n            });\n    };\n\n    xhrRequest = () => {\n        const { query, selectedTag } = this.props;\n        const { page, rowsPerPage } = this;\n        const api = new API();\n        const searchParam = new URLSearchParams(query);\n        const searchQuery = searchParam.get('query');\n        if (query && searchQuery !== null) {\n            const composeQuery = queryString.parse(query);\n            composeQuery.limit = this.rowsPerPage;\n            composeQuery.offset = page * rowsPerPage;\n            return api.search(composeQuery);\n        }\n\n        if (selectedTag) {\n            return api.getAllAPIs({ query: 'tag:' + selectedTag, limit: this.rowsPerPage, offset: page * rowsPerPage });\n        } else {\n            return api.getAllAPIs({ limit: this.rowsPerPage, offset: page * rowsPerPage });\n        }\n    };\n\n    changePage = (page) => {\n        const { intl } = this.props;\n        this.page = page;\n        this.setState({ loading: true });\n        this.xhrRequest()\n            .then((data) => {\n                const { body } = data;\n                const { list } = body;\n                this.setState({\n                    data: list,\n                });\n            })\n            .catch(() => {\n                Alert.error(intl.formatMessage({\n                    defaultMessage: 'Error While Loading APIs',\n                    id: 'Apis.Listing.ApiTableView.error.loading',\n                }));\n            })\n            .finally(() => {\n                this.setState({ loading: false });\n            });\n    };\n\n    /**\n     * @inheritdoc\n     * @returns {Component}x\n     * @memberof ApiTableViewLegacy\n     */\n    render() {\n        const { intl, gridView, theme } = this.props;\n        const { custom: { social: { showRating } } } = theme;\n        const { loading } = this.state;\n        const columns = [\n            {\n                name: 'id',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n            {\n                name: 'name',\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const artifact = tableViewObj.state.data[tableMeta.rowIndex];\n                            return <ImageGenerator api={artifact} width={30} height={30} />;\n                        }\n                        return <span />;\n                    },\n                    sort: false,\n                    filter: false,\n                    display: 'excluded',\n                },\n            },\n            {\n                name: 'name',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.name',\n                    defaultMessage: 'Name',\n                }),\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const artifact = tableViewObj.state.data[tableMeta.rowIndex];\n                            const apiName = tableMeta.rowData[2];\n                            const apiId = tableMeta.rowData[0];\n\n                            if (artifact) {\n                                if (artifact.type === 'DOC') {\n                                    return (\n                                        <Link\n                                            to={'/apis/' + artifact.apiUUID + '/documents'}\n                                            className={classes.apiNameLink}\n                                        >\n                                            <Icon>library_books</Icon>\n\n                                            <span>\n                                                {' '}\n                                                <FormattedMessage\n                                                    id='Apis.Listing.TableView.TableView.doc.flag'\n                                                    defaultMessage='[Doc] '\n                                                />\n                                                {' '}\n                                                {apiName}\n                                            </span>\n                                        </Link>\n                                    );\n                                } else if (artifact.type === 'DEFINITION') {\n                                    return (\n                                        <Link\n                                            to={'/apis/' + apiId + '/overview'}\n                                            className={classes.apiNameLink}\n                                        >\n                                            <Icon>code</Icon>\n\n                                            <span>\n                                                {' '}\n                                                <FormattedMessage\n                                                    id='Apis.Listing.TableView.TableView.def.flag'\n                                                    defaultMessage='[Def] '\n                                                />\n                                                {' '}\n                                                {apiName}\n                                            </span>\n                                        </Link>\n                                    );\n                                }\n                                const strokeColor = theme.palette.getContrastText(theme.custom.listView.tableBodyEvenBackgrund);\n                                return (\n                                    <Link\n                                        to={'/apis/' + apiId + '/overview'}\n                                        className={classes.apiNameLink}\n                                    >\n                                        <CustomIcon width={16} height={16} icon='api' strokeColor={strokeColor} />\n\n                                        <span>{apiName}</span>\n                                    </Link>\n                                );\n                            }\n                        }\n                        return <span />;\n                    },\n                    sort: false,\n                    filter: false,\n                },\n            },\n            {\n                name: 'version',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.version',\n                    defaultMessage: 'Version',\n                }),\n                options: {\n                    sort: false,\n                },\n            },\n            {\n                name: 'context',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.context',\n                    defaultMessage: 'Context',\n                }),\n                options: {\n                    sort: false,\n                },\n            },\n            {\n                name: 'provider',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.provider',\n                    defaultMessage: 'Provider/Business Owner',\n                }),\n                options: {\n                    sort: false,\n                    customBodyRender: (value, tableMeta) => {\n                        if (tableMeta.rowData) {\n                            if (\n                                tableMeta.rowData[9] && tableMeta.rowData[9].businessOwner\n                            ) {\n                                return (\n                                    <>\n                                        <div>{tableMeta.rowData[9].businessOwner}</div>\n                                        <Typography variant='caption'>\n                                            <FormattedMessage\n                                                defaultMessage='(Business Owner)'\n                                                id='Apis.Listing.ApiTableView.business.owner.caption'\n                                            />\n                                        </Typography>\n                                    </>\n                                );\n                            } else {\n                                return (\n                                    <>\n                                        {value\n                                        && (\n                                            <>\n                                                <div>{value}</div>\n                                                <Typography variant='caption'>\n                                                    <FormattedMessage\n                                                        defaultMessage='(Provider)'\n                                                        id='Apis.Listing.ApiTableView.provider.caption'\n                                                    />\n                                                </Typography>\n                                            </>\n                                        )}\n                                    </>\n                                );\n                            }\n                        }\n                        return <span />;\n                    },\n                },\n            },\n            {\n                name: 'type',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.type',\n                    defaultMessage: 'Type',\n                }),\n                options: {\n                    sort: false,\n                },\n            },\n            {\n                name: 'rating',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.rating',\n                    defaultMessage: 'Rating',\n                }),\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const artifact = tableViewObj.state.data[tableMeta.rowIndex];\n                            if (artifact) {\n                                if (artifact.type !== 'DOC' && artifact.type !== 'DEFINITION') {\n                                    const apiId = tableMeta.rowData[0];\n                                    const avgRating = tableMeta.rowData[8];\n                                    return (\n                                        <StarRatingBar\n                                            apiRating={avgRating}\n                                            apiId={apiId}\n                                            isEditable={false}\n                                            showSummary={false}\n                                        />\n                                    );\n                                }\n                            }\n                        }\n                        return <span />;\n                    },\n                    sort: false,\n                    display: showRating ? 'true' : 'excluded',\n                },\n            },\n            {\n                name: 'avgRating',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n            {\n                name: 'businessInformation',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n        ];\n        const { page, count, rowsPerPage } = this;\n        const { data } = this.state;\n        const options = {\n            filterType: 'dropdown',\n            responsive: 'stacked',\n            serverSide: true,\n            search: false,\n            count,\n            page,\n            onTableChange: (action, tableState) => {\n                switch (action) {\n                    case 'changePage':\n                        this.changePage(tableState.page);\n                        break;\n                    default:\n                        break;\n                }\n            },\n            selectableRows: 'none',\n            rowsPerPage,\n            onChangeRowsPerPage: (numberOfRows) => {\n                const { page: pageInner, count: countInner } = this;\n                if (pageInner * numberOfRows > countInner) {\n                    this.page = 0;\n                }\n                this.rowsPerPage = numberOfRows;\n                localStorage.setItem('portal.numberOfRows', numberOfRows);\n                this.getData();\n            },\n            textLabels: {\n                pagination: {\n                    rowsPerPage: intl.formatMessage({\n                        id: 'Apis.Listing.ApiTableView.items.per.page',\n                        defaultMessage: 'Items per page',\n                    }),\n                },\n                toolbar: {\n                    downloadCsv: intl.formatMessage({\n                        id: 'Apis.Listing.ApiTableView.download.csv',\n                        defaultMessage: 'Download CSV',\n                    }),\n                    print: intl.formatMessage({\n                        id: 'Apis.Listing.ApiTableView.print',\n                        defaultMessage: 'Print',\n                    }),\n                    viewColumns: intl.formatMessage({\n                        id: 'Apis.Listing.ApiTableView.view.columns',\n                        defaultMessage: 'View Columns',\n                    }),\n                },\n            },\n        };\n        if (gridView) {\n            options.customRowRender = (_data, dataIndex, rowIndex, tableViewObj = this) => {\n                const artifact = tableViewObj.state.data[dataIndex];\n                if (artifact) {\n                    if (artifact.type === 'DOC') {\n                        return <tr key={rowIndex}><td><DocThumb doc={artifact} /></td></tr>;\n                    } else if (artifact.type === 'DEFINITION') {\n                        return <tr key={rowIndex}><td><DefinitionThumb def={artifact} /></td></tr>;\n                    } else {\n                        return (\n                            <tr key={rowIndex}>\n                                <td>\n                                    <ApiThumb\n                                        api={artifact}\n                                        customHeight={theme.custom.thumbnail.height}\n                                        customWidth={theme.custom.thumbnail.width}\n                                    />\n                                </td>\n                            </tr>\n                        );\n                    }\n                }\n                return <span />;\n            };\n            options.title = false;\n            options.filter = false;\n            options.print = false;\n            options.download = false;\n            options.viewColumns = false;\n            options.customToolbar = false;\n        } else {\n            options.filter = false;\n        }\n        if (page === 0 && this.count <= rowsPerPage && rowsPerPage === 10) {\n            options.pagination = false;\n        } else {\n            options.pagination = true;\n        }\n        if (loading) {\n            return <Loading />;\n        }\n        if ((data && data.length === 0) || !data) {\n            return <NoApi />;\n        }\n        return (\n            <StyledStyledEngineProvider injectFirst>\n                <ThemeProvider theme={this.getMuiTheme()}>\n                    <MUIDataTable title='' data={data} columns={columns} options={options} />\n                </ThemeProvider>\n            </StyledStyledEngineProvider>\n        );\n    }\n}\n\nApiTableViewLegacy.contextType = ApiContext;\n\nfunction ApiTableView(props) {\n    const {\n        query, selectedTag, gridView, intl, setTenantDomain,\n    } = props;\n    const theme = useTheme();\n    return (\n        <ApiTableViewLegacy\n            query={query}\n            selectedTag={selectedTag}\n            gridView={gridView}\n            intl={intl}\n            setTenantDomain={setTenantDomain}\n            theme={theme}\n        />\n    );\n}\n\nexport default withSettings(injectIntl(ApiTableView));\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { styled } from '@mui/material/styles';\nimport classNames from 'classnames';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport Icon from '@mui/material/Icon';\nimport Tooltip from '@mui/material/Tooltip';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst PREFIX = 'APICategoryThumb';\n\nconst classes = {\n    textWrapper: `${PREFIX}-textWrapper`,\n    listItemText: `${PREFIX}-listItemText`,\n};\n\nconst StyledLink = styled(Link)((\n    {\n        theme,\n    },\n) => ({\n    [`&.${classes.textWrapper}`]: {\n        color: theme.custom.tagCloud.leftMenu.color,\n        '& .material-icons': {\n            color: theme.custom.tagCloud.leftMenu.color,\n        },\n    },\n\n    [`& .${classes.listItemText}`]: {\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n    },\n}));\n\n/**\n * Get APICategoryThumb\n * @param {JSON} props properties\n * @returns {JSX} category link\n */\nfunction APICategoryThumb(props) {\n    const {\n        category, path,\n    } = props;\n    const categoryLink = path + ':' + category.name;\n    let categoryDesc = category.description;\n    if (categoryDesc.length > 50) {\n        categoryDesc = categoryDesc.substring(0, 50) + '...';\n    }\n    return (\n        <StyledLink to={categoryLink} className={classes.textWrapper}>\n            <Tooltip placement='right' title={category.description.length <= 50 ? '' : category.description}>\n                <ListItem button alignItems='flex-start'>\n                    <ListItemIcon className='category-listing-icon'>\n                        <Icon>label</Icon>\n                    </ListItemIcon>\n                    <ListItemText\n                        primary={category.name}\n                        secondary={categoryDesc}\n                        classes={{\n                            primary: classNames(classes.listItemText, 'category-listing-primary'),\n                            secondary: 'category-listing-secondary',\n                        }}\n                    />\n                </ListItem>\n            </Tooltip>\n        </StyledLink>\n    );\n}\n\nAPICategoryThumb.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    category: PropTypes.shape({}).isRequired,\n    path: PropTypes.shape({}).isRequired,\n};\n\nexport default (APICategoryThumb);\n","/*\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled, useTheme } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Typography from '@mui/material/Typography';\nimport List from '@mui/material/List';\nimport { FormattedMessage } from 'react-intl';\nimport APICategoryThumb from './APICategoryThumb';\n\nconst PREFIX = 'CategoryListingCategories';\n\nconst classes = {\n    mainTitle: `${PREFIX}-mainTitle`,\n    mainTitleWrapper: `${PREFIX}-mainTitleWrapper`,\n    listContentWrapper: `${PREFIX}-listContentWrapper`,\n    textWrapper: `${PREFIX}-textWrapper`,\n    tagWiseThumbWrapper: `${PREFIX}-tagWiseThumbWrapper`,\n    filterTitle: `${PREFIX}-filterTitle`,\n};\n\nconst Root = styled('div')((\n    {\n        theme,\n    },\n) => ({\n    [`&.${classes.mainTitle}`]: {\n        paddingTop: 0,\n    },\n\n    [`& .${classes.mainTitleWrapper}`]: {\n        flexGrow: 1,\n    },\n\n    [`& .${classes.listContentWrapper}`]: {\n        padding: `0 ${theme.spacing(3)}`,\n    },\n\n    [`& .${classes.textWrapper}`]: {\n        color: theme.custom.tagCloud.leftMenu.color,\n        '& .material-icons': {\n            color: theme.custom.tagCloud.leftMenu.color,\n        },\n    },\n\n    [`& .${classes.tagWiseThumbWrapper}`]: {\n        display: 'flex',\n    },\n\n    [`& .${classes.filterTitle}`]: {\n        fontWeight: 200,\n        paddingLeft: theme.spacing(2),\n        background: theme.custom.tagCloud.leftMenu.titleBackground,\n        color: theme.palette.getContrastText(theme.custom.tagCloud.leftMenu.titleBackground),\n        height: theme.custom.infoBar.height,\n        alignItems: 'center',\n        display: 'flex',\n    },\n}));\n\n/**\n * Shared listing page\n *\n * @class CategoryListingCategories\n * @extends {Component}\n */\nfunction CategoryListingCategories(props) {\n    const theme = useTheme();\n    const {\n        custom: {\n            tagWise: {\n                style,\n            },\n        },\n    } = theme;\n\n    const tagWiseURL = '/apis?offset=0&query=api-category';\n    const { allCategories } = props;\n\n    /**\n     *\n     * @inheritdoctheme\n     * @returns {React.Component} @inheritdoc\n     * @memberof TagCloudListing\n     */\n\n    return allCategories && allCategories.length > 0 ? (\n        (\n            <Root className={classNames(classes.mainTitle, 'category-listing-categories-empty')}>\n                <Typography variant='h6' gutterBottom className={classNames(classes.filterTitle, 'api-cat-title')}>\n                    <FormattedMessage defaultMessage='API Categories' id='Apis.Listing.CategoryListingCategories.title' />\n                </Typography>\n                <List component='nav' aria-label='main mailbox folders' className='category-listing-categories'>\n                    {Object.keys(allCategories).map((key) => {\n                        return <APICategoryThumb key={key} category={allCategories[key]} path={tagWiseURL} style={style} />;\n                    })}\n                </List>\n            </Root>\n        )\n    ) : (\n        <Root className={classNames(classes.mainTitle, 'category-listing-categories-empty')}>\n            <Typography variant='subtitle1' gutterBottom align='center'>\n                <FormattedMessage\n                    defaultMessage='Categories cannot be found'\n                    id='Apis.Listing.CategoryListingCategories.categoriesNotFound'\n                />\n            </Typography>\n        </Root>\n    );\n}\n\nCategoryListingCategories.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    allTags: PropTypes.shape({}).isRequired,\n    allCategories: PropTypes.shape({}).isRequired,\n};\n\nexport default CategoryListingCategories;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { styled, useTheme } from '@mui/material/styles';\nimport classNames from 'classnames';\nimport Typography from '@mui/material/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport { TagCloud } from 'react-tagcloud';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\n\nconst PREFIX = 'ApiTagCloud';\n\nconst classes = {\n    clickablePointer: `${PREFIX}-clickablePointer`,\n    filterTitle: `${PREFIX}-filterTitle`,\n};\n\n// TODO jss-to-styled codemod: The Fragment root was replaced by div. Change the tag if needed.\nconst Root = styled('div')((\n    {\n        theme,\n    },\n) => ({\n    [`& .${classes.clickablePointer}`]: {\n        cursor: 'pointer',\n        padding: theme.spacing(1),\n    },\n\n    [`& .${classes.filterTitle}`]: {\n        fontWeight: 200,\n        paddingLeft: theme.spacing(2),\n        background: theme.custom.tagCloud.leftMenu.titleBackground,\n        color: theme.palette.getContrastText(theme.custom.tagCloud.leftMenu.titleBackground),\n        height: theme.custom.infoBar.height,\n        alignItems: 'center',\n        display: 'flex',\n    },\n\n    '& .tag-cloud-tag': {\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        display: 'inline-block',\n        maxWidth: '-webkit-fill-available',\n    },\n}));\n\n/**\n * Component used to handle API Tag Cloud\n * @class ApiTagCloud\n * @extends {React.Component}\n * @param {JSON} props @inheritDoc\n */\nfunction ApiTagCloud(props) {\n    const theme = useTheme();\n    const {\n        custom: {\n            tagWise: { key, active },\n            tagCloud: { colorOptions },\n        },\n    } = theme;\n    const history = useHistory();\n\n    const { allTags } = props;\n    let apisTagWithoutGroups = null;\n    if (allTags.count !== 0) {\n        // Remove the tags with a sufix '-group' to ignore the\n        if (active) {\n            apisTagWithoutGroups = allTags.filter((item) => item.value.search(key) === -1);\n        } else {\n            apisTagWithoutGroups = allTags;\n        }\n    }\n\n    /**\n     *\n     * @param {String} tag selected tag\n     * @memberof ApiTagCloud\n     */\n    const handleOnClick = (tag) => {\n        const tagSearchURL = `/apis?offset=0&query=tag:${tag.value}`;\n        history.push(tagSearchURL);\n    };\n\n    return (\n        apisTagWithoutGroups && (\n            <Root>\n                <Typography variant='h6' gutterBottom className={classNames(classes.filterTitle, 'apis-listing-tags-title')}>\n                    <FormattedMessage defaultMessage='Tags' id='Apis.Listing.ApiTagCloud.title' />\n                </Typography>\n                <TagCloud\n                    minSize={14}\n                    maxSize={25}\n                    colorOptions={colorOptions}\n                    tags={apisTagWithoutGroups}\n                    shuffle={false}\n                    className={classes.clickablePointer}\n                    onClick={(tag) => handleOnClick(tag)}\n                />\n            </Root>\n        )\n    );\n}\n\nApiTagCloud.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    tag: PropTypes.shape({}).isRequired,\n    allTags: PropTypes.shape({}).isRequired,\n};\n\nexport default ApiTagCloud;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Typography from '@mui/material/Typography';\nimport Card from '@mui/material/Card';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardContent from '@mui/material/CardContent';\nimport Chip from '@mui/material/Chip';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport MaterialIcons from 'MaterialIcons';\nimport StarRatingBar from 'AppComponents/Apis/Listing/StarRatingBar';\nimport classNames from 'classnames';\nimport { useTheme } from '@mui/material';\nimport ImageGenerator from './APICards/ImageGenerator';\nimport Api from '../../../data/api';\nimport { ApiContext } from '../Details/ApiContext';\n\nconst PREFIX = 'RecommendedApiThumbLegacy';\n\nconst classes = {\n    card: `${PREFIX}-card`,\n    apiDetails: `${PREFIX}-apiDetails`,\n    suppressLinkStyles: `${PREFIX}-suppressLinkStyles`,\n    row: `${PREFIX}-row`,\n    thumbBy: `${PREFIX}-thumbBy`,\n    media: `${PREFIX}-media`,\n    thumbContent: `${PREFIX}-thumbContent`,\n    thumbLeft: `${PREFIX}-thumbLeft`,\n    thumbRight: `${PREFIX}-thumbRight`,\n    thumbInfo: `${PREFIX}-thumbInfo`,\n    thumbHeader: `${PREFIX}-thumbHeader`,\n    contextBox: `${PREFIX}-contextBox`,\n    thumbWrapper: `${PREFIX}-thumbWrapper`,\n    deleteIcon: `${PREFIX}-deleteIcon`,\n    textWrapper: `${PREFIX}-textWrapper`,\n    imageWrapper: `${PREFIX}-imageWrapper`,\n    imageOverlap: `${PREFIX}-imageOverlap`,\n    chipWrapper: `${PREFIX}-chipWrapper`,\n    ratingWrapper: `${PREFIX}-ratingWrapper`,\n};\n\nconst StyledCard = styled(Card)((\n    {\n        theme,\n    },\n) => ({\n    [`&.${classes.card}`]: {\n        margin: theme.spacing.unit * (3 / 2),\n        maxWidth: theme.custom.thumbnail.width,\n        transition: 'box-shadow 0.3s ease-in-out',\n    },\n\n    [`& .${classes.apiDetails}`]: {\n        background: theme.custom.thumbnail.contentBackgroundColor,\n        padding: theme.spacing(),\n        color: theme.palette.getContrastText(theme.custom.thumbnail.contentBackgroundColor),\n        '& a': {\n            color: theme.palette.getContrastText(theme.custom.thumbnail.contentBackgroundColor),\n        },\n    },\n\n    [`& .${classes.suppressLinkStyles}`]: {\n        textDecoration: 'none',\n        color: theme.palette.text.disabled,\n    },\n\n    [`& .${classes.row}`]: {\n        display: 'inline-block',\n    },\n\n    [`& .${classes.thumbBy}`]: {\n        'padding-left': '5px',\n    },\n\n    [`& .${classes.media}`]: {\n        // ⚠️ object-fit is not supported by IE11.\n        objectFit: 'cover',\n    },\n\n    [`& .${classes.thumbContent}`]: {\n        width: theme.custom.thumbnail.width - theme.spacing(2),\n    },\n\n    [`& .${classes.thumbLeft}`]: {\n        alignSelf: 'flex-start',\n        flex: 1,\n        width: '25%',\n        'padding-left': '5px',\n        'padding-right': '65px',\n    },\n\n    [`& .${classes.thumbRight}`]: {\n        alignSelf: 'flex-end',\n    },\n\n    [`& .${classes.thumbInfo}`]: {\n        display: 'flex',\n    },\n\n    [`& .${classes.thumbHeader}`]: {\n        width: theme.custom.thumbnail.width - theme.spacing.unit,\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        'padding-left': '5px',\n    },\n\n    [`& .${classes.contextBox}`]: {\n        width: parseInt((theme.custom.thumbnail.width - theme.spacing.unit) / 2, 10),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        display: 'inline-block',\n        lineHeight: '1em',\n        'padding-top': 5,\n        'padding-right': 5,\n        'padding-bottom': 1.5,\n        textAlign: 'left',\n    },\n\n    [`& .${classes.thumbWrapper}`]: {\n        position: 'relative',\n        paddingTop: 20,\n        marginRight: theme.spacing.unit * 2,\n    },\n\n    [`& .${classes.deleteIcon}`]: {\n        fill: 'red',\n    },\n\n    [`& .${classes.textWrapper}`]: {\n        color: theme.palette.text.secondary,\n        textDecoration: 'none',\n    },\n\n    [`& .${classes.imageWrapper}`]: {\n        color: theme.custom.thumbnail.iconColor,\n        width: theme.custom.thumbnail.width,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n\n    [`& .${classes.imageOverlap}`]: {\n        position: 'absolute',\n        bottom: 1,\n    },\n\n    [`& .${classes.chipWrapper}`]: {\n        marginTop: '15px',\n    },\n\n    [`& .${classes.ratingWrapper}`]: {\n        marginTop: '20px',\n    },\n}));\n\nconst windowURL = window.URL || window.webkitURL;\n\n/**\n *\n * Render API Card component in API listing card view,containing essential API information like name , version ect\n * @class RecommendedApiThumbLegacy\n * @extends {Component}\n */\nclass RecommendedApiThumbLegacy extends React.Component {\n    /**\n     *Creates an instance of RecommendedApiThumbLegacy.\n     * @param {*} props\n     * @memberof RecommendedApiThumbLegacy\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            category: MaterialIcons.categories[0].name,\n            selectedIcon: null,\n            color: null,\n            backgroundIndex: null,\n            imageObj: null,\n            isHover: false,\n        };\n        this.toggleMouseOver = this.toggleMouseOver.bind(this);\n    }\n\n    /**\n     *\n     *\n     * @memberof RecommendedApiThumbLegacy\n     */\n    componentDidMount() {\n        const { api } = this.props;\n        const restApi = new Api();\n\n        const promisedThumbnail = restApi.getAPIThumbnail(api.id);\n\n        promisedThumbnail.then((response) => {\n            if (response && response.data) {\n                if (response.headers['content-type'] === 'application/json') {\n                    const iconJson = JSON.parse(response.data);\n                    this.setState({\n                        selectedIcon: iconJson.key,\n                        category: iconJson.category,\n                        color: iconJson.color,\n                        backgroundIndex: iconJson.backgroundIndex,\n                    });\n                } else if (response && response.data.size > 0) {\n                    const url = windowURL.createObjectURL(response.data);\n                    this.setState({ imageObj: url });\n                }\n            }\n        });\n    }\n\n    /**\n     * Clean up resource\n     */\n    componentWillUnmount() {\n        if (this.state.thumbnail) {\n            windowURL.revokeObjectURL(this.state.imageObj);\n        }\n    }\n\n    /**\n     * Get Path Prefix depedning on the respective API Type being rendered\n     *\n     * @returns {String} path\n     * @memberof RecommendedApiThumbLegacy\n     */\n    getPathPrefix() {\n        const path = '/apis/';\n        return path;\n    }\n\n    /**\n     * Toggle mouse Hover state to set the card `raised` property\n     *\n     * @param {React.SyntheticEvent} event mouseover and mouseout\n     * @memberof RecommendedApiThumbLegacy\n     */\n    toggleMouseOver(event) {\n        this.setState({ isHover: event.type === 'mouseover' });\n    }\n\n    /**\n     * @inheritdoc\n     * @returns {React.Component} @inheritdoc\n     * @memberof RecommendedApiThumbLegacy\n     */\n    render() {\n        const {\n            imageObj, selectedIcon, color, backgroundIndex, category, isHover,\n        } = this.state;\n        const path = this.getPathPrefix();\n\n        // const detailsLink = path + this.props.api.id;\n        const detailsLink = path + this.props.api.id;\n        const {\n            api, theme, customWidth, customHeight, showInfo,\n        } = this.props;\n        const { thumbnail } = theme.custom;\n        const { name } = api;\n\n        // if (\n        //     api.businessInformation &&\n        //     api.businessInformation.businessOwner &&\n        //     api.businessInformation.businessOwner.trim() !== ''\n        // ) {\n        //     provider = api.businessInformation.businessOwner;\n        // }\n        // if (!api.lifeCycleStatus) {\n        //     api.lifeCycleStatus = api.status;\n        // }\n        const imageWidth = customWidth || thumbnail.width;\n        const imageHeight = customHeight || 140;\n        const defaultImage = thumbnail.defaultApiImage;\n\n        let ImageView;\n        if (imageObj) {\n            ImageView = (\n                <img\n                    height={imageHeight}\n                    width={imageWidth}\n                    src={imageObj}\n                    alt='API Thumbnail'\n                    className={classes.media}\n                />\n            );\n        } else {\n            ImageView = (\n                <ImageGenerator\n                    width={imageWidth}\n                    height={imageHeight}\n                    api={api}\n                    fixedIcon={{\n                        key: selectedIcon,\n                        color,\n                        backgroundIndex,\n                        category,\n                        api,\n                    }}\n                />\n            );\n        }\n        return (\n            <StyledCard\n                onMouseOver={this.toggleMouseOver}\n                onFocus={this.toggleMouseOver}\n                onMouseOut={this.toggleMouseOver}\n                onBlur={this.toggleMouseOver}\n                raised={isHover}\n                className={classNames('image-thumbnail', classes.card)}\n            >\n                <CardMedia>\n                    <Link to={detailsLink} className={classes.suppressLinkStyles}>\n                        {!defaultImage && ImageView}\n                        {defaultImage && <img src={defaultImage} alt='img' />}\n                    </Link>\n                </CardMedia>\n                {showInfo && (\n                    <CardContent classes={{ root: classes.apiDetails }}>\n                        <Link to={detailsLink} className={classes.textWrapper}>\n                            <Typography\n                                className={classes.thumbHeader}\n                                variant='h5'\n                                gutterBottom\n                                onClick={this.handleRedirectToAPIOverview}\n                                title={name}\n                            >\n                                {name}\n                            </Typography>\n                        </Link>\n                        <div className={classes.thumbInfo}>\n                            <div className={classes.thumbLeft}>\n                                <Typography\n                                    variant='subtitle1'\n                                    gutterBottom\n                                    align='left'\n                                    className={classNames('api-thumb-rating', classes.ratingWrapper)}\n                                >\n                                    <StarRatingBar\n                                        apiRating={api.avgRating}\n                                        apiId={api.id}\n                                        isEditable={false}\n                                        showSummary={false}\n                                    />\n                                </Typography>\n                            </div>\n                            <div className={classes.thumbRight}>\n                                <Typography\n                                    variant='subtitle1'\n                                    gutterBottom\n                                    align='right'\n                                    className={classes.chipWrapper}\n                                >\n                                    {(api.type === 'GRAPHQL' || api.transportType === 'GRAPHQL') && (\n                                        <Chip\n                                            label={api.transportType === undefined ? api.type : api.transportType}\n                                            color='primary'\n                                        />\n                                    )}\n                                </Typography>\n                            </div>\n                        </div>\n                    </CardContent>\n                )}\n            </StyledCard>\n        );\n    }\n}\nRecommendedApiThumbLegacy.defaultProps = {\n    customWidth: null,\n    customHeight: null,\n    showInfo: true,\n};\nRecommendedApiThumbLegacy.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    customWidth: PropTypes.number,\n    customHeight: PropTypes.number,\n    showInfo: PropTypes.bool,\n};\n\nRecommendedApiThumbLegacy.contextType = ApiContext;\n\nfunction RecommendedApiThumb(props) {\n    const { api } = props;\n    const theme = useTheme();\n    return (\n        <RecommendedApiThumbLegacy\n            api={api}\n            theme={theme}\n        />\n    );\n}\n\nexport default (RecommendedApiThumb);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport {\n    styled,\n    createTheme,\n    ThemeProvider,\n    StyledEngineProvider,\n    adaptV4Theme,\n} from '@mui/material/styles';\nimport { Link } from 'react-router-dom';\nimport MUIDataTable from 'mui-datatables';\nimport { injectIntl } from 'react-intl';\nimport API from 'AppData/api';\nimport Configurations from 'Config';\nimport StarRatingBar from 'AppComponents/Apis/Listing/StarRatingBar';\nimport withSettings from 'AppComponents/Shared/withSettingsContext';\nimport Loading from 'AppComponents/Base/Loading/Loading';\nimport Alert from 'AppComponents/Shared/Alert';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport { useTheme } from '@mui/material';\nimport ImageGenerator from './APICards/ImageGenerator';\nimport RecommendedApiThumb from './RecommendedApiThumb';\nimport { ApiContext } from '../Details/ApiContext';\n\nconst PREFIX = 'RecommendationsLegacy';\n\nconst classes = {\n    rowImageOverride: `${PREFIX}-rowImageOverride`,\n    apiNameLink: `${PREFIX}-apiNameLink`,\n};\n\nconst StyledStyledEngineProvider = styled(StyledEngineProvider)((\n    {\n        theme,\n    },\n) => ({\n    [`& .${classes.rowImageOverride}`]: {\n        '& .material-icons': {\n            marginTop: 5,\n            color: `${theme.custom.thumbnail.iconColor} !important`,\n            fontSize: `${theme.custom.thumbnail.listViewIconSize}px !important`,\n        },\n    },\n\n    [`& .${classes.apiNameLink}`]: {\n        display: 'flex',\n        alignItems: 'center',\n        '& span': {\n            marginLeft: theme.spacing(1),\n        },\n        color: theme.palette.getContrastText(theme.custom.listView.tableBodyEvenBackgrund),\n    },\n}));\n\n/**\n * Table view for api listing\n *\n * @class RecommendationsLegacy\n * @extends {React.Component}\n */\nclass RecommendationsLegacy extends React.Component {\n    /**\n     * @inheritdoc\n     * @param {*} props properties\n     * @memberof RecommendationsLegacy\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: null,\n            loading: true,\n        };\n    }\n\n    /**\n     * @memberof RecommendationsLegacy\n    */\n    componentDidMount() {\n        this.getData();\n    }\n\n    /**\n     * @memberof RecommendationsLegacy\n     * @param {JSON} prevProps previous props\n    */\n    componentDidUpdate(prevProps) {\n        const { query, selectedTag } = this.props;\n        if (\n            query !== prevProps.query\n            || prevProps.selectedTag !== selectedTag\n        ) {\n            this.getData();\n        }\n    }\n\n    getMuiTheme = () => {\n        const { gridView, theme } = this.props;\n        let themeAdditions = {};\n        let muiTheme = {\n            overrides: {\n                MUIDataTable: {\n                    root: {\n                        backgroundColor: 'transparent',\n                        marginLeft: 40,\n                        marginBottom: 20,\n                        width: '100%',\n                    },\n                    paper: {\n                        boxShadow: 'none',\n                        backgroundColor: 'transparent',\n                        width: '100%',\n                    },\n                    tableRoot: {\n                        border: 'solid 1px #fff',\n                        '& a': {\n                            display: 'flex',\n                            alignItems: 'center',\n                        },\n                        '& a > div': {\n                            paddingRight: 10,\n                        },\n                        '& td': {\n                            whiteSpace: 'nowrap',\n                        },\n                        '& tr:nth-child(even)': {\n                            backgroundColor: theme.custom.listView.tableBodyEvenBackgrund,\n                            '& td': {\n                                color: theme.palette.getContrastText(theme.custom.listView.tableBodyEvenBackgrund),\n                            },\n                        },\n                        '& tr:nth-child(odd)': {\n                            backgroundColor: theme.custom.listView.tableBodyOddBackgrund,\n                            '& td': {\n                                color: theme.palette.getContrastText(theme.custom.listView.tableBodyOddBackgrund),\n                            },\n                        },\n                        '& th': {\n                            backgroundColor: theme.custom.listView.tableHeadBackground,\n                            color: theme.palette.getContrastText(theme.custom.listView.tableHeadBackground),\n                        },\n                    },\n                },\n                MUIDataTableBodyCell: {\n                    root: {\n                        backgroundColor: 'transparent',\n                        width: '100%',\n                    },\n                },\n            },\n        };\n        if (gridView) {\n            themeAdditions = {\n                overrides: {\n                    MUIDataTable: {\n                        tableRoot: {\n                            display: 'block',\n                            '& tbody': {\n                                display: 'flex',\n                                flexWrap: 'wrap',\n                                marginLeft: 0,\n                            },\n                            '& thead': {\n                                display: 'none',\n                            },\n                        },\n                        paper: {\n                            boxShadow: 'none',\n                            backgroundColor: 'transparent',\n                        },\n                    },\n                },\n            };\n        }\n        muiTheme = Object.assign(muiTheme, themeAdditions, Configurations);\n        return createTheme(adaptV4Theme(muiTheme));\n    };\n\n    // get data\n    getData = () => {\n        const { intl } = this.props;\n        this.xhrRequest()\n            .then((data) => {\n                const { body } = data;\n                const { list } = body;\n                this.setState({ data: list });\n            })\n            .catch((error) => {\n                const { response } = error;\n                const { setTenantDomain } = this.props;\n                if (response && response.body.code === 901300) {\n                    setTenantDomain('INVALID');\n                    Alert.error(intl.formatMessage({\n                        defaultMessage: 'Invalid tenant domain',\n                        id: 'Apis.Listing.Recommendations.invalid.tenant.domain',\n                    }));\n                } else {\n                    Alert.error(intl.formatMessage({\n                        defaultMessage: 'Error While Loading APIs',\n                        id: 'Apis.Listing.Recommendations.error.loading',\n                    }));\n                }\n            })\n            .finally(() => {\n                this.setState({ loading: false });\n            });\n    };\n\n    xhrRequest = () => {\n        const api = new API();\n        return api.getApiRecommendations();\n    };\n\n    /**\n     * @inheritdoc\n     * @returns {Component}x\n     * @memberof RecommendationsLegacy\n     */\n    render() {\n        const { intl, gridView } = this.props;\n        const { loading } = this.state;\n        const columns = [\n            {\n                name: 'id',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n            {\n                name: 'name',\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const artifact = tableViewObj.state.data[tableMeta.rowIndex];\n                            return <ImageGenerator api={artifact} width={30} height={30} />;\n                        }\n                        return <span />;\n                    },\n                    sort: false,\n                    filter: false,\n                    display: 'excluded',\n                },\n            },\n            {\n                name: 'name',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.Recommendations.name',\n                    defaultMessage: 'Name',\n                }),\n                options: {\n                    customBodyRender: (tableMeta, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const artifact = tableViewObj.state.data[tableMeta.rowIndex];\n                            const apiName = tableMeta.rowData[2];\n                            const apiId = tableMeta.rowData[0];\n\n                            if (artifact) {\n                                return (\n                                    <Link\n                                        to={'/apis/' + apiId + '/overview'}\n                                        className={classes.apiNameLink}\n                                    >\n                                        <CustomIcon width={16} height={16} icon='api' strokeColor='#444444' />\n\n                                        <span>{apiName}</span>\n                                    </Link>\n                                );\n                            }\n                        }\n                        return <span />;\n                    },\n                    sort: false,\n                    filter: false,\n                },\n            },\n            {\n                name: 'rating',\n                label: intl.formatMessage({\n                    defaultMessage: 'Rating',\n                    id: 'Apis.Listing.Recommendations.rating',\n                }),\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const artifact = tableViewObj.state.data[tableMeta.rowIndex];\n                            if (artifact) {\n                                if (artifact.type !== 'DOC') {\n                                    const apiId = tableMeta.rowData[0];\n                                    const avgRating = tableMeta.rowData[8];\n                                    return (\n                                        <StarRatingBar\n                                            apiRating={avgRating}\n                                            apiId={apiId}\n                                            isEditable={false}\n                                            showSummary={false}\n                                        />\n                                    );\n                                } else {\n                                    return (<span />);\n                                }\n                            } else {\n                                return (<span />);\n                            }\n                        } else {\n                            return (<span />);\n                        }\n                    },\n                    sort: false,\n                },\n            },\n            {\n                name: 'avgRating',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n        ];\n        const { data } = this.state;\n        const options = {\n            filterType: 'dropdown',\n            responsive: 'stacked',\n            serverSide: true,\n            search: false,\n        };\n        if (gridView) {\n            // eslint-disable-next-line no-shadow\n            options.customRowRender = (data, dataIndex, rowIndex, tableViewObj = this) => {\n                const artifact = tableViewObj.state.data[dataIndex];\n                if (artifact) {\n                    return <tr key={rowIndex}><td><RecommendedApiThumb api={artifact} /></td></tr>;\n                }\n                return <span />;\n            };\n            options.title = true;\n            options.filter = false;\n            options.print = false;\n            options.download = false;\n            options.viewColumns = false;\n            options.customToolbar = false;\n            options.rowsPerPageOptions = false;\n            options.pagination = false;\n        } else {\n            options.filter = false;\n        }\n        if (loading) {\n            return <Loading />;\n        }\n        if ((data && data.length === 0) || !data) {\n            return null;\n        }\n        return (\n            <StyledStyledEngineProvider injectFirst>\n                <ThemeProvider theme={this.getMuiTheme()}>\n                    <MUIDataTable title='Recommended APIs for you' data={data} columns={columns} options={options} />\n                </ThemeProvider>\n            </StyledStyledEngineProvider>\n        );\n    }\n}\n\nRecommendationsLegacy.contextType = ApiContext;\n\nfunction Recommendations(props) {\n    const {\n        query, selectedTag, gridView, intl, setTenantDomain,\n    } = props;\n    const theme = useTheme();\n    return (\n        <RecommendationsLegacy\n            query={query}\n            selectedTag={selectedTag}\n            gridView={gridView}\n            intl={intl}\n            setTenantDomain={setTenantDomain}\n            theme={theme}\n        />\n    );\n}\n\nexport default withSettings(injectIntl(Recommendations));\n","/* eslint-disable prefer-destructuring */\n/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport IconButton from '@mui/material/IconButton';\nimport Icon from '@mui/material/Icon';\nimport classNames from 'classnames';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport Settings from 'AppComponents/Shared/SettingsContext';\nimport API from 'AppData/api';\nimport { useTheme } from '@mui/material';\nimport ApiBreadcrumbs from './ApiBreadcrumbs';\nimport ApiTableView from './ApiTableView';\nimport { ApiContext } from '../Details/ApiContext';\nimport TagCloudListingTags from './TagCloudListingTags';\nimport CategoryListingCategories from './CategoryListingCategories';\nimport ApiTagCloud from './ApiTagCloud';\nimport Recommendations from './Recommendations';\nimport AuthManager from '../../../data/AuthManager';\n\nconst PREFIX = 'CommonListingLegacy';\n\nconst classes = {\n    rightIcon: `${PREFIX}-rightIcon`,\n    button: `${PREFIX}-button`,\n    buttonRight: `${PREFIX}-buttonRight`,\n    ListingWrapper: `${PREFIX}-ListingWrapper`,\n    appBar: `${PREFIX}-appBar`,\n    mainIconWrapper: `${PREFIX}-mainIconWrapper`,\n    mainTitle: `${PREFIX}-mainTitle`,\n    mainTitleWrapper: `${PREFIX}-mainTitleWrapper`,\n    listContentWrapper: `${PREFIX}-listContentWrapper`,\n    iconDefault: `${PREFIX}-iconDefault`,\n    iconSelected: `${PREFIX}-iconSelected`,\n    content: `${PREFIX}-content`,\n    contentWithTags: `${PREFIX}-contentWithTags`,\n    contentWithoutTags: `${PREFIX}-contentWithoutTags`,\n    contentWithTagsHidden: `${PREFIX}-contentWithTagsHidden`,\n    LeftMenu: `${PREFIX}-LeftMenu`,\n    LeftMenuForSlider: `${PREFIX}-LeftMenuForSlider`,\n    sliderButton: `${PREFIX}-sliderButton`,\n    rotatedText: `${PREFIX}-rotatedText`,\n    recommendationsBar: `${PREFIX}-recommendationsBar`,\n    apiListingWrapper: `${PREFIX}-apiListingWrapper`,\n};\n\nconst Root = styled('div')((\n    {\n        theme,\n    },\n) => ({\n    [`& .${classes.rightIcon}`]: {\n        marginLeft: theme.spacing(1),\n    },\n\n    [`& .${classes.button}`]: {\n        margin: theme.spacing(1),\n        marginBottom: 0,\n    },\n\n    [`& .${classes.buttonRight}`]: {\n        alignSelf: 'flex-end',\n        display: 'flex',\n    },\n\n    [`& .${classes.ListingWrapper}`]: {\n        paddingTop: 10,\n        paddingLeft: 35,\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n\n    [`& .${classes.appBar}`]: {\n        height: 70,\n        background: theme.custom.infoBar.background,\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n        borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n\n    [`& .${classes.mainIconWrapper}`]: {\n        paddingTop: 13,\n        paddingLeft: 20,\n        paddingRight: 20,\n    },\n\n    [`& .${classes.mainTitle}`]: {\n        paddingTop: 10,\n    },\n\n    [`& .${classes.mainTitleWrapper}`]: {\n        flexGrow: 1,\n    },\n\n    [`& .${classes.listContentWrapper}`]: {\n        padding: `0 ${theme.spacing(3)}`,\n        display: 'flex',\n        marginLeft: -40,\n    },\n\n    [`& .${classes.iconDefault}`]: {\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n    },\n\n    [`& .${classes.iconSelected}`]: {\n        color: theme.custom.infoBar.listGridSelectedColor,\n    },\n\n    [`& .${classes.content}`]: {\n        flexGrow: 1,\n        display: 'flex',\n        flex: 1,\n        flexDirection: 'column',\n        paddingBottom: theme.spacing(3),\n    },\n\n    [`& .${classes.contentWithTags}`]: {\n        marginLeft: theme.custom.tagCloud.leftMenu.width,\n    },\n\n    [`& .${classes.contentWithoutTags}`]: {\n        marginLeft: -4,\n    },\n\n    [`& .${classes.contentWithTagsHidden}`]: {\n        marginLeft: theme.custom.tagCloud.leftMenu.sliderWidth,\n    },\n\n    [`& .${classes.LeftMenu}`]: {\n        backgroundColor: theme.custom.tagCloud.leftMenu.background,\n        color: theme.custom.tagCloud.leftMenu.color,\n        textAlign: 'left',\n        fontFamily: theme.typography.fontFamily,\n        position: 'absolute',\n        bottom: 0,\n        paddingLeft: 0,\n        width: theme.custom.tagCloud.leftMenu.width,\n        top: 0,\n        left: 0,\n        overflowY: 'auto',\n    },\n\n    [`& .${classes.LeftMenuForSlider}`]: {\n        backgroundColor: theme.custom.tagCloud.leftMenu.background,\n        color: theme.custom.tagCloud.leftMenu.color,\n        textAlign: 'left',\n        fontFamily: theme.typography.fontFamily,\n        position: 'absolute',\n        bottom: 0,\n        paddingLeft: 0,\n        width: theme.custom.tagCloud.leftMenu.sliderWidth,\n        top: 0,\n        left: 0,\n        overflowY: 'auto',\n        display: 'flex',\n    },\n\n    [`& .${classes.sliderButton}`]: {\n        fontWeight: 200,\n        background: theme.custom.tagCloud.leftMenu.sliderBackground,\n        color: theme.palette.getContrastText(theme.custom.tagCloud.leftMenu.sliderBackground),\n        height: theme.custom.infoBar.height,\n        alignItems: 'center',\n        display: 'flex',\n        position: 'absolute',\n        right: 0,\n        cursor: 'pointer',\n    },\n\n    [`& .${classes.rotatedText}`]: {\n        transform: 'rotate(270deg)',\n        transformOrigin: 'left bottom 0',\n        position: 'absolute',\n        whiteSpace: 'nowrap',\n        top: theme.custom.infoBar.height * 4,\n        marginLeft: 23,\n        cursor: 'pointer',\n    },\n\n    [`& .${classes.recommendationsBar}`]: {\n        height: 60,\n        background: theme.custom.infoBar.background,\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n        borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n\n    [`&.${classes.apiListingWrapper}`]: {\n        width: '100%',\n    },\n}));\n\n/**\n * Shared listing page\n *\n * @class CommonListingLegacy\n * @extends {Component}\n */\nclass CommonListingLegacy extends React.Component {\n    /**\n     * Constructor\n     *\n     * @param {*} props Properties\n     */\n    constructor(props) {\n        super(props);\n        let { defaultApiView } = props.theme.custom;\n        this.showToggle = true;\n        if (typeof defaultApiView === 'object' && defaultApiView.length > 0) {\n            if (defaultApiView.length === 1) { // We will disable the other\n                this.showToggle = false;\n            }\n            defaultApiView = defaultApiView[0];\n        } else {\n            defaultApiView = localStorage.getItem('portal.listType') || defaultApiView;\n        }\n        this.state = {\n            listType: defaultApiView,\n            allTags: null,\n            showLeftMenu: false,\n            isMonetizationEnabled: false,\n            isRecommendationEnabled: false,\n        };\n    }\n\n    /**\n     *\n     * Get all tags\n     * @memberof CommonListingLegacy\n     */\n    componentDidMount() {\n        const restApiClient = new API();\n        const tagsLimit = -1;\n        const promisedTags = restApiClient.getAllTags(tagsLimit);\n        promisedTags\n            .then((response) => {\n                this.setState({ allTags: response.body.list });\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n        const promisedCategories = restApiClient.apiCategories();\n        promisedCategories\n            .then((response) => {\n                this.setState({ allCategories: response.body.list });\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n        this.isMonetizationEnabled();\n        this.isRecommendationEnabled();\n    }\n\n    /**\n     *\n     * Switch the view between grid and list view\n     * @param {String} value view type\n     * @memberof CommonListingLegacy\n     */\n     setListType = (value) => {\n         localStorage.setItem('portal.listType', value);\n         this.setState({ listType: value });\n     };\n\n    toggleLeftMenu = () => {\n        this.setState((prevState) => ({ showLeftMenu: !prevState.showLeftMenu }));\n    };\n\n    /**\n     * retrieve Settings from the context and check the monetization enabled\n     */\n    isMonetizationEnabled = () => {\n        const settingsContext = this.context;\n        const enabled = settingsContext.settings.monetizationEnabled;\n        this.setState({ isMonetizationEnabled: enabled });\n    }\n\n    /**\n     * retrieve Settings from the context and check whether recommendation is enabled\n     */\n    isRecommendationEnabled = () => {\n        const settingsContext = this.context;\n        const enabled = settingsContext.settings.recommendationEnabled;\n        this.setState({ isRecommendationEnabled: enabled });\n    }\n\n    /**\n     *\n     * @inheritdoctheme\n     * @returns {React.Component} @inheritdoc\n     * @memberof CommonListingLegacy\n     */\n    render() {\n        const {\n            theme,\n            location: { search },\n        } = this.props;\n        const user = AuthManager.getUser();\n        const {\n            custom: {\n                tagWise: { key, active },\n                tagCloud: { active: tagCloudActive },\n            },\n        } = theme;\n        const {\n            listType, allTags, showLeftMenu, isMonetizationEnabled, allCategories, isRecommendationEnabled,\n        } = this.state;\n        const strokeColorMain = theme.palette.getContrastText(theme.custom.infoBar.background);\n        const searchParam = new URLSearchParams(search);\n        const searchQuery = searchParam.get('query');\n        let selectedTag = null;\n        if (search && searchQuery !== null) {\n            // For the tagWise search\n            if (active && key) {\n                const splits = searchQuery.split(':');\n                if (splits.length > 1 && splits[1].search(key) !== -1) {\n                    const splitTagArray = splits[1].split(key);\n                    if (splitTagArray.length > 0) {\n                        selectedTag = splitTagArray[0];\n                    }\n                } else if (splits.length > 1 && splits[0] === 'tag') {\n                    selectedTag = splits[1];\n                }\n            }\n        }\n        const tagPaneVisible = allTags && allTags.length > 0 && (tagCloudActive || active);\n        const categoryPaneVisible = allCategories && allCategories.length > 0;\n        return (\n            <Root className={classNames(classes.apiListingWrapper, 'api-listing-wrapper')}>\n                {(categoryPaneVisible || tagPaneVisible) && showLeftMenu && (\n                    <div className={classNames(classes.LeftMenu, 'api-listing-left-menu')}>\n                        <div\n                            className={classNames(classes.sliderButton, 'api-listing-slider-btn')}\n                            onClick={this.toggleLeftMenu}\n                            onKeyDown={this.toggleLeftMenu}\n                        >\n                            <Icon>keyboard_arrow_left</Icon>\n                        </div>\n                        {categoryPaneVisible && <CategoryListingCategories allCategories={allCategories} />}\n                        {tagPaneVisible && active && <TagCloudListingTags allTags={allTags} />}\n                        {tagPaneVisible && tagCloudActive && <ApiTagCloud allTags={allTags} />}\n                    </div>\n                )}\n                {(categoryPaneVisible || tagPaneVisible) && !showLeftMenu && (\n                    <div className={classNames(classes.LeftMenuForSlider, 'api-listing-left-menu-hidden')}>\n                        <div\n                            className={classNames(classes.sliderButton, 'api-listing-slider-btn')}\n                            onClick={this.toggleLeftMenu}\n                            onKeyDown={this.toggleLeftMenu}\n                        >\n                            <Icon>keyboard_arrow_right</Icon>\n                        </div>\n                        <div\n                            className={classNames(classes.rotatedText, 'api-listing-title-section-hidden')}\n                            onClick={this.toggleLeftMenu}\n                            onKeyDown={this.toggleLeftMenu}\n                        >\n                            <FormattedMessage\n                                defaultMessage='Tags / API Categories'\n                                id='Apis.Listing.Listing.ApiTagCloud.title'\n                            />\n                        </div>\n                    </div>\n                )}\n\n                <div\n                    className={classNames(\n                        classes.content,\n                        { [classes.contentWithoutTags]: !(tagPaneVisible || categoryPaneVisible) || !showLeftMenu },\n                        { [classes.contentWithTagsHidden]: (tagPaneVisible || categoryPaneVisible) && !showLeftMenu },\n                        { [classes.contentWithTags]: (tagPaneVisible || categoryPaneVisible) && showLeftMenu },\n                        'content-section',\n                    )}\n                    id='commonListing'\n                >\n                    <div className={classes.appBar} id='commonListingAppBar'>\n                        <div className={classNames(classes.mainIconWrapper, 'main-icon-wrapper')}>\n                            <CustomIcon strokeColor={strokeColorMain} width={42} height={42} icon='api' />\n                        </div>\n                        <div className={classes.mainTitleWrapper} id='mainTitleWrapper'>\n                            <Typography variant='h4' component='h1' className={classes.mainTitle}>\n                                <FormattedMessage defaultMessage='APIs' id='Apis.Listing.Listing.apis.main' />\n                            </Typography>\n                        </div>\n                        {this.showToggle && (\n                            <div className={classes.buttonRight} id='listGridWrapper'>\n                                <IconButton\n                                    aria-label='Change to list view'\n                                    className={classes.button}\n                                    onClick={() => this.setListType('list')}\n                                    disabled={listType === 'list'}\n                                    size='large'\n                                >\n                                    <Icon\n                                        className={classNames(\n                                            { [classes.iconSelected]: listType === 'list' },\n                                            { [classes.iconDefault]: listType === 'grid' },\n                                        )}\n                                    >\n                                        list\n                                    </Icon>\n                                </IconButton>\n                                <IconButton\n                                    aria-label='Change to grid view'\n                                    className={classes.button}\n                                    onClick={() => this.setListType('grid')}\n                                    disabled={listType === 'grid'}\n                                    size='large'\n                                >\n                                    <Icon\n                                        className={classNames(\n                                            { [classes.iconSelected]: listType === 'grid' },\n                                            { [classes.iconDefault]: listType === 'list' },\n                                        )}\n                                    >\n                                        grid_on\n                                    </Icon>\n                                </IconButton>\n                            </div>\n                        )}\n                    </div>\n                    {active && allTags && allTags.length > 0 && <ApiBreadcrumbs selectedTag={selectedTag} />}\n                    <div className={classes.listContentWrapper}>\n                        {listType === 'grid' && (\n                            <ApiContext.Provider value={{ isMonetizationEnabled }}>\n                                <ApiTableView gridView query={search} />\n                            </ApiContext.Provider>\n                        )}\n                        {listType === 'list' && (\n                            <ApiContext.Provider value={{ isMonetizationEnabled }}>\n                                <ApiTableView gridView={false} query={search} />\n                            </ApiContext.Provider>\n                        )}\n                    </div>\n                    {isRecommendationEnabled && user\n                        && (\n                            <div>\n                                {active && allTags && allTags.length > 0 && <ApiBreadcrumbs selectedTag={selectedTag} />}\n                                <div className={classes.listContentWrapper}>\n                                    {listType === 'grid' && (\n                                        <ApiContext.Provider value={{ isRecommendationEnabled }}>\n                                            <Recommendations gridView query={search} />\n                                        </ApiContext.Provider>\n                                    )}\n                                    {listType === 'list' && (\n                                        <ApiContext.Provider value={{ isRecommendationEnabled }}>\n                                            <Recommendations gridView query={search} />\n                                        </ApiContext.Provider>\n                                    )}\n                                </div>\n                            </div>\n                        )}\n                </div>\n            </Root>\n        );\n    }\n}\nCommonListingLegacy.contextType = Settings;\n\nCommonListingLegacy.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    location: PropTypes.shape({\n        search: PropTypes.string,\n    }),\n};\n\nCommonListingLegacy.defaultProps = {\n    location: PropTypes.shape({\n        search: '',\n    }),\n};\n\nfunction CommonListing(props) {\n    const theme = useTheme();\n    return (\n        <CommonListingLegacy\n            {...props}\n            theme={theme}\n        />\n    );\n}\n\nexport default (CommonListing);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport Paper from '@mui/material/Paper';\nimport Typography from '@mui/material/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport Grid from '@mui/material/Grid';\nimport { Link } from 'react-router-dom';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\nimport Image404 from './Custom404Image';\n\nconst SubscriptionNotFound = (props) => {\n    return (\n        <Container maxWidth='md'>\n            <Box padding={4}>\n                <Paper elevation={0}>\n                    <Box padding={4}>\n                        <Grid container alignItems='center' justifyContent='center' style={{ height: '100%' }}>\n                            <Grid item xs={12} md={6}>\n                                <Typography variant='h5' gutterBottom>\n                                    <FormattedMessage\n                                        id='Base.Errors.SubscriptionNotFound.default_title'\n                                        defaultMessage='Solace Info Page is not displayed without subscriptions to the API.\n                                        Please Subscribed to the API'\n                                    />\n                                </Typography>\n                                <Typography variant='subtitle1' gutterBottom>\n                                    <FormattedMessage\n                                        id='Base.Errors.ResourceNotfound.default_body'\n                                        defaultMessage='The page you are looking for is not available'\n                                    />\n                                    <span style={{ color: 'green' }}>\n                                        {' '}\n                                        {props.response ? props.response.statusText : ''}\n                                        {' '}\n                                    </span>\n                                </Typography>\n                                <Box py={5}>\n                                    <Box pb={2}>\n                                        <Typography variant='subtitle1'>\n                                            <FormattedMessage\n                                                id='Base.Errors.ResourceNotFound.more.links'\n                                                defaultMessage='You may check the links below'\n                                            />\n                                        </Typography>\n                                    </Box>\n                                    <Link to='/apis/' style={{ marginRight: 8 }}>\n                                        <Button variant='contained' color='primary'>\n                                            <FormattedMessage\n                                                id='Base.Errors.ResourceNotFound.api.list'\n                                                defaultMessage='API List'\n                                            />\n                                        </Button>\n                                    </Link>\n                                    <Link to='/applications/'>\n                                        <Button variant='contained' color='primary'>\n                                            <FormattedMessage\n                                                id='Base.Errors.ResourceNotFound.applications'\n                                                defaultMessage='Applications'\n                                            />\n                                        </Button>\n                                    </Link>\n                                </Box>\n                            </Grid>\n                            <Grid item xs={12} md={6}>\n                                {/* Image */}\n                                <Image404 style={{ fontSize: 400, fill: '#ccc' }} />\n                            </Grid>\n                        </Grid>\n                    </Box>\n                </Paper>\n            </Box>\n        </Container>\n    );\n};\n\nexport default SubscriptionNotFound;\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.com). All Rights Reserved.\n *\n * This software is the property of WSO2 Inc. and its suppliers, if any.\n * Dissemination of any information or reproduction of any material contained\n * herein is strictly forbidden, unless permitted by WSO2 in accordance with\n * the WSO2 Commercial License available at http://wso2.com/licenses.\n * For specific language governing the permissions and limitations under\n * this license, please see the license as well as any agreement you’ve\n * entered into with WSO2 governing the purchase of this software and any\n * associated services.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport { useParams } from 'react-router-dom';\nimport Typography from '@mui/material/Typography';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport {\n    Divider, Grid, TextField,\n    useTheme,\n} from '@mui/material';\nimport Box from '@mui/material/Box';\nimport InputBase from '@mui/material/InputBase';\nimport Avatar from '@mui/material/Avatar';\nimport Tooltip from '@mui/material/Tooltip';\nimport IconButton from '@mui/material/IconButton';\nimport Icon from '@mui/material/Icon';\nimport Chip from '@mui/material/Chip';\nimport { upperCaseString } from 'AppData/stringFormatter';\nimport API from 'AppData/api';\nimport Loading from 'AppComponents/Base/Loading/Loading';\nimport Button from '@mui/material/Button';\nimport SubscriptionNotFound from '../../../Base/Errors/SubscriptionNotFound';\nimport ResourceNotFound from '../../../Base/Errors/ResourceNotFound';\n\nfunction VerbElement(props) {\n    const {\n        verb,\n    } = props;\n    const theme = useTheme();\n    const backgroundColor = theme.custom.resourceChipColors[verb.toLowerCase()];\n\n    return (\n        <Button\n            disableFocusRipple\n            variant='outlined'\n            className={{\n                backgroundColor: '#ffffff',\n                borderColor: backgroundColor,\n                color: backgroundColor,\n                width: theme.spacing(2),\n            }}\n            size='small'\n        >\n            {verb.toUpperCase()}\n        </Button>\n    );\n}\n\nconst PREFIX = 'SolaceTopicsInfo';\n\nconst classes = {\n    root: `${PREFIX}-root`,\n    table: `${PREFIX}-table`,\n    centerItems: `${PREFIX}-centerItems`,\n    leftCol: `${PREFIX}-leftCol`,\n    iconAligner: `${PREFIX}-iconAligner`,\n    iconTextWrapper: `${PREFIX}-iconTextWrapper`,\n    iconEven: `${PREFIX}-iconEven`,\n    iconOdd: `${PREFIX}-iconOdd`,\n    heading: `${PREFIX}-heading`,\n    heading1: `${PREFIX}-heading1`,\n    emptyBox: `${PREFIX}-emptyBox`,\n    summaryRoot: `${PREFIX}-summaryRoot`,\n    actionPanel: `${PREFIX}-actionPanel`,\n    Paper: `${PREFIX}-Paper`,\n    Box2: `${PREFIX}-Box2`,\n    Box3: `${PREFIX}-Box3`,\n    list: `${PREFIX}-list`,\n    urlPaper: `${PREFIX}-urlPaper`,\n    input: `${PREFIX}-input`,\n    avatar: `${PREFIX}-avatar`,\n    iconStyle: `${PREFIX}-iconStyle`,\n};\n\n// TODO jss-to-styled codemod: The Fragment root was replaced by div. Change the tag if needed.\nconst Root = styled('div')((\n    {\n        theme,\n    },\n) => ({\n    [`& .${classes.root}`]: {\n        padding: theme.spacing(3, 2),\n        '& td, & th': {\n            color: theme.palette.getContrastText(theme.custom.infoBar.background),\n        },\n        '& option': {\n            padding: '5px 0px 5px 0px',\n        },\n        background: theme.custom.infoBar.background,\n    },\n\n    [`& .${classes.table}`]: {\n        minWidth: '100%',\n    },\n\n    [`& .${classes.centerItems}`]: {\n        margin: 'auto',\n    },\n\n    [`& .${classes.leftCol}`]: {\n        width: 200,\n    },\n\n    [`& .${classes.iconAligner}`]: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n    },\n\n    [`& .${classes.iconTextWrapper}`]: {\n        display: 'inline-block',\n        paddingLeft: 20,\n    },\n\n    [`& .${classes.iconEven}`]: {\n        color: theme.custom.infoBar.iconOddColor,\n        width: theme.spacing(3),\n    },\n\n    [`& .${classes.iconOdd}`]: {\n        color: theme.custom.infoBar.iconOddColor,\n        width: theme.spacing(3),\n    },\n\n    [`& .${classes.heading}`]: {\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n        paddingLeft: theme.spacing(1),\n    },\n\n    [`& .${classes.heading1}`]: {\n        marginRight: 20,\n    },\n\n    [`& .${classes.emptyBox}`]: {\n        background: '#ffffff55',\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n        border: 'solid 1px #fff',\n        padding: theme.spacing(2),\n        width: '100%',\n    },\n\n    [`& .${classes.summaryRoot}`]: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n\n    [`& .${classes.actionPanel}`]: {\n        justifyContent: 'flex-start',\n    },\n\n    [`& .${classes.Paper}`]: {\n        marginTop: theme.spacing(2),\n        padding: theme.spacing(2),\n    },\n\n    [`& .${classes.Box2}`]: {\n        marginTop: theme.spacing(2),\n        padding: theme.spacing(2),\n        height: '100%',\n    },\n\n    [`& .${classes.Box3}`]: {\n        padding: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n        width: '100%',\n        border: `solid 1px ${theme.palette.grey[300]}`,\n        '& .MuiInputBase-root:before,  .MuiInputBase-root:hover': {\n            borderBottom: 'none !important',\n            color: theme.palette.primary.main,\n        },\n        '& .MuiSelect-select': {\n            color: theme.palette.primary.main,\n            paddingLeft: theme.spacing(),\n        },\n        '& .MuiInputBase-input': {\n            color: theme.palette.primary.main,\n        },\n        '& .material-icons': {\n            fontSize: 16,\n            color: `${theme.palette.grey[700]} !important`,\n        },\n        borderRadius: 10,\n        marginRight: theme.spacing(),\n    },\n\n    [`& .${classes.list}`]: {\n        width: '100%',\n        maxWidth: 800,\n        backgroundColor: theme.palette.background.paper,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: 175,\n    },\n\n    [`& .${classes.urlPaper}`]: {\n        padding: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n        width: '100%',\n        border: `solid 1px ${theme.palette.grey[300]}`,\n        '& .MuiInputBase-root:before,  .MuiInputBase-root:hover': {\n            borderBottom: 'none !important',\n            color: theme.palette.primary.main,\n        },\n        '& .MuiSelect-select': {\n            color: theme.palette.primary.main,\n            paddingLeft: theme.spacing(),\n        },\n        '& .MuiInputBase-input': {\n            color: theme.palette.primary.main,\n        },\n        '& .material-icons': {\n            fontSize: 16,\n            color: `${theme.palette.grey[700]} !important`,\n        },\n        borderRadius: 10,\n        marginRight: theme.spacing(),\n    },\n\n    [`& .${classes.input}`]: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n\n    [`& .${classes.avatar}`]: {\n        width: 30,\n        height: 30,\n        background: 'transparent',\n        border: `solid 1px ${theme.palette.grey[300]}`,\n    },\n\n    [`& .${classes.iconStyle}`]: {\n        cursor: 'pointer',\n        margin: '-10px 0',\n        padding: '0 0 0 5px',\n        '& .material-icons': {\n            fontSize: 18,\n            color: '#9c9c9c',\n        },\n    },\n}));\n\nfunction SolaceTopicsInfo() {\n    const { apiUuid } = useParams();\n    const [application, setApplication] = useState(null);\n    const [environment, setEnvironment] = useState(null);\n    const [selectedProtocol, setSelectedProtocol] = useState(null);\n    const [envsListOfApplication, setEnvsListOfApplication] = useState(null);\n    const [selectedEndpoint, setSelectedEndpoint] = useState(null);\n    const [protocolsListOfEnvironments, setProtocolsListOfEnvironments] = useState(null);\n    const [topics, setTopics] = useState(null);\n    const [applicationList, setApplicationList] = useState(null);\n    const [notFound, setNotFound] = useState(false);\n    const [urlCopied, setUrlCopied] = useState(false);\n    const [topicCopied, setTopicCopied] = useState(false);\n    const [apiTopics, setApiTopics] = useState(null);\n    const [apiPubTopics, setApiPubTopics] = useState(null);\n    const [apiSubTopics, setApiSubTopics] = useState(null);\n\n    const intl = useIntl();\n\n    const onCopy = () => {\n        setUrlCopied(true);\n        const caller = function () {\n            setUrlCopied(false);\n        };\n        setTimeout(caller, 2000);\n    };\n\n    const onTopicCopy = () => {\n        setTopicCopied(true);\n        const caller = function () {\n            setTopicCopied(false);\n        };\n        setTimeout(caller, 2000);\n    };\n\n    function setPubAndSubTopics(allTopics, allApiTopics) {\n        const apiPubTopicList = [];\n        allTopics.publishTopics.map((t) => {\n            allApiTopics.map((e) => {\n                if (t.toString().includes(e)) {\n                    apiPubTopicList.push(t);\n                }\n                return null;\n            });\n            return null;\n        });\n        setApiPubTopics(apiPubTopicList);\n\n        const apiSubTopicList = [];\n        allTopics.subscribeTopics.map((t) => {\n            allApiTopics.map((e) => {\n                if (t.toString().includes(e)) {\n                    apiSubTopicList.push(t);\n                }\n                return null;\n            });\n            return null;\n        });\n        setApiSubTopics(apiSubTopicList);\n    }\n\n    useEffect(() => {\n        const client = new API();\n\n        const promisedApi = client.getAllTopics(apiUuid);\n        const apiTopicList = [];\n        promisedApi\n            .then((response) => {\n                response.obj.list.map((entry) => {\n                    const parts = entry.name.split('{')[0];\n                    apiTopicList.push(parts);\n                    return null;\n                });\n                setApiTopics(apiTopicList);\n                return null;\n            });\n\n        const infoPromise = client.getSubscriptionAdditionalInfo(apiUuid);\n        infoPromise\n            .then((response) => {\n                setApplicationList(response.body.list);\n                // Get application\n                const appInner = response.body.list[0];\n                if (appInner != null) {\n                    setApplication(appInner.applicationName);\n                    if (appInner.solaceDeployedEnvironments !== null) {\n                        // Set default deployed environments of application\n                        setEnvsListOfApplication(appInner.solaceDeployedEnvironments);\n                        setEnvironment(appInner.solaceDeployedEnvironments[0]);\n                        // Set default protocols of deployed environment\n                        setProtocolsListOfEnvironments(appInner.solaceDeployedEnvironments[0].solaceURLs);\n                        setSelectedProtocol(appInner.solaceDeployedEnvironments[0].solaceURLs[0].protocol);\n                        setSelectedEndpoint(appInner.solaceDeployedEnvironments[0].solaceURLs[0].endpointURL);\n                        // Set default topics of deployed solace environment\n                        if (appInner.solaceDeployedEnvironments[0].solaceURLs[0].protocol === 'mqtt') {\n                            setTopics(appInner.solaceDeployedEnvironments[0].SolaceTopicsObject.mqttSyntax);\n                            setPubAndSubTopics(appInner.solaceDeployedEnvironments[0].SolaceTopicsObject.mqttSyntax, apiTopicList);\n                        } else {\n                            setTopics(appInner.solaceDeployedEnvironments[0].SolaceTopicsObject.defaultSyntax);\n                            setPubAndSubTopics(appInner.solaceDeployedEnvironments[0].SolaceTopicsObject.defaultSyntax, apiTopicList);\n                        }\n                    }\n                }\n            }).catch((error) => {\n                console.log(error);\n                const { status } = error;\n                if (status === 404) {\n                    setNotFound(true);\n                } else {\n                    setNotFound(false);\n                }\n            });\n    }, [apiUuid]);\n\n    // Handle resource not found error\n    if (notFound) {\n        return <ResourceNotFound />;\n    }\n    // Handle topic changes with protocol change\n    function setProtocolTopics(protocol, selectedEnv) {\n        if (protocol === 'mqtt') {\n            setTopics(selectedEnv.SolaceTopicsObject.mqttSyntax);\n            setPubAndSubTopics(selectedEnv.SolaceTopicsObject.mqttSyntax, apiTopics);\n        } else {\n            setTopics(selectedEnv.SolaceTopicsObject.defaultSyntax);\n            setPubAndSubTopics(selectedEnv.SolaceTopicsObject.defaultSyntax, apiTopics);\n        }\n    }\n    // Handle application selection change\n    const handleChangeApplication = (event) => {\n        setApplication(event.target.value);\n        let selectedApp;\n        applicationList.map((app) => {\n            if (app.applicationName === event.target.value) {\n                selectedApp = app;\n            }\n            return null;\n        });\n        const selectedEnv = selectedApp.solaceDeployedEnvironments[0];\n        setEnvsListOfApplication(selectedApp.solaceDeployedEnvironments);\n        setSelectedProtocol(selectedEnv.solaceURLs[0].protocol);\n        let protocol;\n        selectedEnv.solaceURLs.map((e) => {\n            if (e.protocol === selectedEnv.solaceURLs[0].protocol) {\n                setSelectedEndpoint(e.endpointURL);\n                protocol = e.protocol;\n            }\n            return null;\n        });\n        setProtocolTopics(protocol, selectedEnv);\n    };\n    // Handle environment selection change\n    const handleChangeEnvironment = (event) => {\n        setEnvironment(event.target.value);\n        let selectedEnv;\n        envsListOfApplication.map((e) => {\n            if (e.environmentDisplayName === event.target.value) {\n                selectedEnv = e;\n            }\n            return null;\n        });\n        setSelectedProtocol(selectedEnv.solaceURLs[0].protocol);\n        setProtocolsListOfEnvironments(selectedEnv.solaceURLs);\n        let protocol;\n        selectedEnv.solaceURLs.map((e) => {\n            if (e.protocol === selectedEnv.solaceURLs[0].protocol) {\n                setSelectedEndpoint(e.endpointURL);\n                protocol = e.protocol;\n            }\n            return null;\n        });\n        setProtocolTopics(protocol, selectedEnv);\n    };\n    // Handle protocol selection change\n    const handleChangeProtocol = (event) => {\n        setSelectedProtocol(event.target.value);\n        let selectedEnv;\n        envsListOfApplication.map((e) => {\n            if (e.environmentDisplayName === environment.environmentDisplayName) {\n                selectedEnv = e;\n            }\n            return null;\n        });\n        let protocol;\n        protocolsListOfEnvironments.map((e) => {\n            if (e.protocol === event.target.value) {\n                setSelectedEndpoint(e.endpointURL);\n                protocol = e.protocol;\n            }\n            return null;\n        });\n        setProtocolTopics(protocol, selectedEnv);\n    };\n\n    if (!applicationList) {\n        return <Loading />;\n    }\n\n    return (\n        <Root>\n            { !application && <SubscriptionNotFound /> }\n            { environment && topics && apiTopics && applicationList && (\n                <div className={classes.root}>\n                    <Typography id='itest-api-details-bushiness-plans-head' variant='h5'>\n                        <FormattedMessage\n                            id='solace.application.available.topics.heading'\n                            defaultMessage='Available Topics'\n                        />\n                    </Typography>\n                    <Typography variant='caption' gutterBottom>\n                        <FormattedMessage\n                            id='solace.application.available.topics.subheading'\n                            defaultMessage='Topics permitted to access from solace applications'\n                        />\n                    </Typography>\n                    <Box mt={2} />\n                    <Grid container spacing={2}>\n                        <Grid item xs={12} md={4}>\n                            <TextField\n                                select\n                                fullWidth\n                                onChange={handleChangeApplication}\n                                value={application}\n                                variant='outlined'\n                                label='Application'\n                                helperText={(\n                                    <FormattedMessage\n                                        defaultMessage='Subscribed applications'\n                                        id='Apis.Details.SolaceTopicsInfo.SelectAppPanel.select.subscribed.\n                                                    application'\n                                    />\n                                )}\n                                SelectProps={{\n                                    native: true,\n                                }}\n                            >\n                                {applicationList.map((e) => (\n                                    <option key={e} value={e.applicationName}>\n                                        {e.applicationName}\n                                    </option>\n                                ))}\n                            </TextField>\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                            <TextField\n                                select\n                                fullWidth\n                                onChange={handleChangeEnvironment}\n                                value={environment.environmentDisplayName}\n                                variant='outlined'\n                                label='Environment Name'\n                                helperText={(\n                                    <FormattedMessage\n                                        defaultMessage='Deployed Environments'\n                                        id='Apis.Details.SolaceTopicsInfo.SelectAppPanel.select.\n                                                        deployed.environment'\n                                    />\n                                )}\n                                SelectProps={{\n                                    native: true,\n                                }}\n                            >\n                                {envsListOfApplication.map((e) => (\n                                    <option key={e} value={e.environmentDisplayName}>\n                                        {e.environmentDisplayName}\n                                    </option>\n                                ))}\n                            </TextField>\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                            <TextField\n                                select\n                                fullWidth\n                                onChange={handleChangeProtocol}\n                                value={selectedProtocol}\n                                variant='outlined'\n                                label='Protocol'\n                                helperText={(\n                                    <FormattedMessage\n                                        defaultMessage='Available Protocols'\n                                        id='Apis.Details.SolaceTopicsInfo.SelectAppPanel.select.\n                                                        environment.protocol'\n                                    />\n                                )}\n                                SelectProps={{\n                                    native: true,\n                                }}\n                            >\n                                {protocolsListOfEnvironments.map((e) => (\n                                    <option key={e.protocol} value={e.protocol}>\n                                        {upperCaseString(e.protocol)}\n                                    </option>\n                                ))}\n                            </TextField>\n                        </Grid>\n                    </Grid>\n                    <Box pt={2}>\n                        <Divider />\n                    </Box>\n                    <Box pt={5} pb={5}>\n                        <Grid container>\n                            <Grid\n                                xs={12}\n                                md={7}\n                                item\n                                style={{\n                                    display: 'flex',\n                                    alignItems: 'center',\n                                    justifyContent: 'center',\n                                }}\n                            >\n\n                                <Box\n                                    id='gateway-envirounment'\n                                    component='form'\n                                    className={classes.Box3}\n                                >\n                                    <Box mr={3}>\n                                        <Chip\n                                            label={upperCaseString(selectedProtocol)}\n                                            color='primary'\n                                            style={{\n                                                width: '70px',\n                                            }}\n                                        />\n                                    </Box>\n                                    <InputBase\n                                        className={classes.input}\n                                        inputProps={{ 'aria-label': 'api url' }}\n                                        value={selectedEndpoint}\n                                    />\n                                    <Avatar className={classes.avatar} sizes={30}>\n                                        <Tooltip\n                                            title={\n                                                urlCopied\n                                                    ? intl.formatMessage({\n                                                        defaultMessage: 'Copied',\n                                                        id: 'Apis.Details.Environments.copied',\n                                                    })\n                                                    : intl.formatMessage({\n                                                        defaultMessage: 'Copy to clipboard',\n                                                        id: 'Apis.Details.Environments.copy.to.clipboard',\n                                                    })\n                                            }\n                                            interactive\n                                            placement='right'\n                                            className={classes.iconStyle}\n                                        >\n                                            <IconButton\n                                                aria-label='Copy the API URL to clipboard'\n                                                size='large'\n                                                onClick={() => {\n                                                    navigator.clipboard\n                                                        .writeText(selectedEndpoint).then(onCopy('urlCopied'));\n                                                }}\n                                            >\n                                                <Icon color='secondary'>file_copy</Icon>\n                                            </IconButton>\n                                        </Tooltip>\n                                    </Avatar>\n                                </Box>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                    <Grid container>\n                        <Grid item xs={6}>\n                            <Box className={classes.Box2}>\n                                <Typography id='itest-api-details-bushiness-plans-head' variant='h6'>\n                                    <FormattedMessage\n                                        id='solace.application.topics.publish'\n                                        defaultMessage='Publish Topics'\n                                    />\n                                </Typography>\n                                <Box p={1}>\n                                    {\n                                        (apiPubTopics && apiPubTopics.length > 0) ? apiPubTopics.map((t) => (\n                                            <Box pt={2}>\n                                                <Box\n                                                    id='gateway-envirounment'\n                                                    component='form'\n                                                    className={classes.Box3}\n                                                >\n                                                    <Grid item>\n                                                        <VerbElement verb='PUB' />\n                                                    </Grid>\n                                                    <InputBase\n                                                        className={classes.input}\n                                                        inputProps={{ 'aria-label': 'api url' }}\n                                                        value={t}\n                                                    />\n                                                    <Avatar className={classes.avatar} sizes={30}>\n                                                        <Tooltip\n                                                            title={\n                                                                topicCopied\n                                                                    ? intl.formatMessage({\n                                                                        defaultMessage: 'Copied',\n                                                                        id: 'Apis.Details.PubTopic.copied',\n                                                                    })\n                                                                    : intl.formatMessage({\n                                                                        defaultMessage: 'Copy to clipboard',\n                                                                        id: 'Apis.Details.PubTopic.copy.to.clipboard',\n                                                                    })\n                                                            }\n                                                            interactive\n                                                            placement='right'\n                                                            className={classes.iconStyle}\n                                                        >\n                                                            <IconButton\n                                                                aria-label='Copy the API URL to clipboard'\n                                                                size='large'\n                                                                onClick={() => {\n                                                                    navigator.clipboard\n                                                                        .writeText(t).then(onTopicCopy('topicCopied'));\n                                                                }}\n                                                            >\n                                                                <Icon color='secondary'>file_copy</Icon>\n                                                            </IconButton>\n                                                        </Tooltip>\n                                                    </Avatar>\n                                                </Box>\n\n                                            </Box>\n                                        )) : (\n                                            <Box pt={2}>\n                                                <Typography id='itest-api-details-bushiness-plans-head' variant='h7'>\n                                                    <FormattedMessage\n                                                        id='solace.application.topics.publish.empty'\n                                                        defaultMessage='No Publish Topics to Display.'\n                                                    />\n                                                </Typography>\n                                            </Box>\n                                        )\n                                    }\n                                </Box>\n                            </Box>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Box className={classes.Box2}>\n                                <Typography id='itest-api-details-bushiness-plans-head' variant='h6'>\n                                    <FormattedMessage\n                                        id='solace.application.topics.subscribe'\n                                        defaultMessage='Subscribe Topics'\n                                    />\n                                </Typography>\n                                <Box p={1}>\n                                    {\n                                        (apiSubTopics && apiSubTopics.length > 0) ? apiSubTopics.map((t) => (\n                                            <Box pt={2}>\n                                                <Box\n                                                    id='gateway-envirounment'\n                                                    component='form'\n                                                    className={classes.Box3}\n                                                >\n                                                    <Grid item>\n                                                        <VerbElement verb='SUB' />\n                                                    </Grid>\n                                                    <InputBase\n                                                        className={classes.input}\n                                                        inputProps={{ 'aria-label': 'api url' }}\n                                                        value={t}\n                                                    />\n                                                    <Avatar className={classes.avatar} sizes={30}>\n                                                        <Tooltip\n                                                            title={\n                                                                topicCopied\n                                                                    ? intl.formatMessage({\n                                                                        defaultMessage: 'Copied',\n                                                                        id: 'Apis.Details.SubTopic.copied',\n                                                                    })\n                                                                    : intl.formatMessage({\n                                                                        defaultMessage: 'Copy to clipboard',\n                                                                        id: 'Apis.Details.SubTopic.copy.to.clipboard',\n                                                                    })\n                                                            }\n                                                            interactive\n                                                            placement='right'\n                                                            className={classes.iconStyle}\n                                                        >\n                                                            <IconButton\n                                                                aria-label='Copy the API URL to clipboard'\n                                                                size='large'\n                                                                onClick={() => {\n                                                                    navigator.clipboard\n                                                                        .writeText(t).then(onTopicCopy('topicCopied'));\n                                                                }}\n                                                            >\n                                                                <Icon color='secondary'>file_copy</Icon>\n                                                            </IconButton>\n                                                        </Tooltip>\n                                                    </Avatar>\n                                                </Box>\n\n                                            </Box>\n                                        )) : (\n                                            <Box pt={2}>\n                                                <Typography id='itest-api-details-bushiness-plans-head' variant='h7'>\n                                                    <FormattedMessage\n                                                        id='solace.application.topics.subscribe.empty'\n                                                        defaultMessage='No Subscribe Topics to Display.'\n                                                    />\n                                                </Typography>\n                                            </Box>\n                                        )\n                                    }\n                                </Box>\n                            </Box>\n                        </Grid>\n                    </Grid>\n                </div>\n            )}\n        </Root>\n    );\n}\n\nSolaceTopicsInfo.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\n\nexport default SolaceTopicsInfo;\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useState, useContext } from 'react';\nimport { styled } from '@mui/material/styles';\nimport { useHistory, Link } from 'react-router-dom';\nimport Breadcrumbs from '@mui/material/Breadcrumbs';\nimport Typography from '@mui/material/Typography';\nimport { Link as MUILink } from '@mui/material';\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\nimport Box from '@mui/material/Box';\nimport VerticalDivider from 'AppComponents/Shared/VerticalDivider';\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\nimport { FormattedMessage, useIntl } from 'react-intl';\n\nconst PREFIX = 'Breadcrumb';\n\nconst classes = {\n    root: `${PREFIX}-root`,\n};\n\nconst Root = styled('div')((\n    {\n        theme,\n    },\n) => ({\n    [`&.${classes.root}`]: {\n        paddingTop: theme.spacing(),\n        paddingBottom: theme.spacing(),\n        paddingLeft: theme.spacing(3),\n        background: theme.custom.infoBar.background || '#ffffff',\n        color: theme.palette.getContrastText(theme.custom.infoBar.background || '#ffffff'),\n        borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        '& > * + *': {\n            marginTop: theme.spacing(2),\n        },\n    },\n}));\n\n/**\n * @returns {JSX} breadcrumb\n */\nexport default function Breadcrumb(props) {\n    const { api } = useContext(ApiContext);\n    const { breadcrumbDocument } = props;\n\n    const history = useHistory();\n    const intl = useIntl();\n    const pages = [\n        {\n            route: 'overview',\n            text: intl.formatMessage({\n                defaultMessage: 'Overview',\n                id: 'Apis.Details.Breadcrumb.overview',\n            }),\n        },\n        {\n            route: 'credentials',\n            text: intl.formatMessage({\n                defaultMessage: 'Subscriptions',\n                id: 'Apis.Details.Breadcrumb.subscriptions',\n            }),\n        },\n        {\n            route: 'api-console',\n            text: intl.formatMessage({\n                defaultMessage: 'API Console',\n                id: 'Apis.Details.Breadcrumb.try.out.api-console',\n            }),\n        },\n        {\n            route: 'api-chat',\n            text: intl.formatMessage({\n                defaultMessage: 'API Chat',\n                id: 'Apis.Details.Breadcrumb.try.out.api-chat',\n            }),\n        },\n        {\n            route: 'comments',\n            text: intl.formatMessage({\n                defaultMessage: 'Comments',\n                id: 'Apis.Details.Breadcrumb.comments',\n            }),\n        },\n        {\n            route: 'documents',\n            text: intl.formatMessage({\n                defaultMessage: 'Documents',\n                id: 'Apis.Details.Breadcrumb.documents',\n            }),\n        },\n        {\n            route: 'sdk',\n            text: intl.formatMessage({\n                defaultMessage: 'SDKs',\n                id: 'Apis.Details.Breadcrumb.sdks',\n            }),\n        },\n    ];\n\n    const [selected, setSelected] = useState(pages[0]);\n\n    const detectCurrentMenu = (location = null) => {\n        let locationLocal = location;\n        if (!locationLocal) {\n            locationLocal = window.location;\n        }\n        const { pathname } = locationLocal;\n        for (let i = 0; i < pages.length; i++) {\n            const test1 = new RegExp('/' + pages[i].route + '$', 'g');\n            const test2 = new RegExp('/' + pages[i].route + '/', 'g');\n            if (pathname.match(test1) || pathname.match(test2)) {\n                setSelected(pages[i]);\n            }\n        }\n    };\n    useEffect(() => {\n        detectCurrentMenu();\n    }, []);\n    history.listen((location) => {\n        detectCurrentMenu(location);\n    });\n    useEffect(() => {\n        detectCurrentMenu();\n    }, [breadcrumbDocument]);\n    return (\n        <Root className={classes.root}>\n            <Box display='flex' flexDirection='row' alignItems='center'>\n                <Typography color='textPrimary' component='h1' variant='h6'>{selected.text}</Typography>\n                <VerticalDivider height={15} />\n                <Breadcrumbs separator={<NavigateNextIcon fontSize='small' />} aria-label='breadcrumb'>\n                    <MUILink\n                        color='textPrimary'\n                        to={'/apis/' + api.id + '/overview'}\n                        component={Link}\n                        underline='hover'\n                    >\n                        {api.name}\n                    </MUILink>\n                    {(selected.route === 'api-console' || selected.route === 'api-chat') && (\n                        <Typography color='textPrimary'>\n                            <FormattedMessage\n                                id='Apis.Details.Breadcrumb.route.try.out'\n                                defaultMessage='Try Out'\n                            />\n                        </Typography>\n                    )}\n                    { (selected.route === 'documents' && document) && (\n                        <MUILink\n                            color='textPrimary'\n                            to={'/apis/' + api.id + '/documents/default'}\n                            component={Link}\n                            underline='hover'\n                        >\n                            {selected.text}\n                        </MUILink>\n                    ) }\n                    { (selected.route === 'documents' && !document) && <Typography color='textPrimary'>{selected.text}</Typography> }\n                    { (selected.route === 'documents' && document) && (\n                        <Typography color='textPrimary' data-testid='breadcrumbDocument'>{breadcrumbDocument}</Typography>\n                    )}\n                    { (selected.route !== 'documents') && <Typography color='textPrimary'>{selected.text}</Typography> }\n                </Breadcrumbs>\n            </Box>\n\n        </Root>\n    );\n}\n","import React, { useContext } from 'react';\nimport Button from '@mui/material/Button';\nimport { FormattedMessage } from 'react-intl';\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\nimport { Box } from '@mui/material';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst styles = {\n    button: {\n        mt: 2,\n        mr: 1,\n    },\n    wizardButtons: {\n        pl: 2,\n    },\n};\n\nconst ButtonPanel = (props) => {\n    const {\n        currentStep, handleCurrentStep, handleReset, nextActive,\n    } = props;\n    const stepsLength = 5;\n    const { api, updateSubscriptionData } = useContext(ApiContext);\n    const history = useHistory();\n\n    /**\n     * Redirect  to the API console page\n     */\n    const handleTest = () => {\n        history.push(`/apis/${api.id}/api-console`);\n    };\n\n    /**\n     * Redirect back to credentials page\n     */\n    const handleCancel = () => {\n        updateSubscriptionData(history.push('credentials'));\n    };\n\n    return (\n        <Box display='flex' {...styles.wizardButtons}>\n            {currentStep < stepsLength - 1 && (\n                <Box {...styles.button}>\n                    <Button\n                        onClick={handleCancel}\n                        variant='text'\n                        color='grey'\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Credentials.Wizard.Wizard.Cancel'\n                            defaultMessage='CANCEL'\n                        />\n                    </Button>\n                </Box>\n            )}\n            {currentStep >= stepsLength - 1 && (\n                <Box {...styles.button}>\n                    <Button\n                        onClick={handleTest}\n                        {...styles.button}\n                        variant='outlined'\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Credentials.Wizard.Wizard.test'\n                            defaultMessage='Test'\n                        />\n                    </Button>\n                </Box>\n            )}\n            {currentStep >= stepsLength - 1 && (\n                <Box {...styles.button}>\n                    <Button\n                        variant='outlined'\n                        onClick={handleReset}\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Credentials.Wizard.Wizard.rest'\n                            defaultMessage='Reset'\n                        />\n                    </Button>\n                </Box>\n            )}\n            <Box {...styles.button}>\n                <Button\n                    variant='contained'\n                    color='primary'\n                    onClick={handleCurrentStep}\n                    disabled={!nextActive}\n                    id={'wizard-next-' + currentStep + '-btn'}\n                >\n                    {currentStep === stepsLength - 1\n                        ? (\n                            <FormattedMessage\n                                id='Apis.Details.Credentials.Wizard.Wizard.finish'\n                                defaultMessage='Finish'\n                            />\n                        )\n                        : (\n                            <FormattedMessage\n                                id='Apis.Details.Credentials.Wizard.Wizard.next'\n                                defaultMessage='Next'\n                            />\n                        )}\n                </Button>\n            </Box>\n        </Box>\n    );\n};\n\nButtonPanel.defaultProps = {\n    nextActive: true,\n};\n\nButtonPanel.propTypes = {\n    currentStep: PropTypes.func.isRequired,\n    handleCurrentStep: PropTypes.func.isRequired,\n    handleReset: PropTypes.func.isRequired,\n    nextActive: PropTypes.bool,\n};\n\nexport default ButtonPanel;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { styled } from '@mui/material/styles';\nimport { Link } from 'react-router-dom';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport ApplicationCreateForm from 'AppComponents/Shared/AppsAndKeys/ApplicationCreateForm';\nimport API from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\nimport cloneDeep from 'lodash.clonedeep';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport Button from '@mui/material/Button';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\nimport { app } from 'Settings';\nimport ButtonPanel from './ButtonPanel';\n\nconst PREFIX = 'CreateAppStep';\n\nconst classes = {\n    appCreateFormWrapper: `${PREFIX}-appCreateFormWrapper`,\n    warningIcon: `${PREFIX}-warningIcon`,\n};\n\nconst Root = styled('div')((\n    {\n        theme,\n    },\n) => ({\n    [`&.${classes.appCreateFormWrapper}`]: {\n        paddingLeft: theme.spacing(2),\n    },\n\n    [`& .${classes.warningIcon}`]: {\n        color: '#ff9a00',\n        fontSize: 43,\n        marginRight: 10,\n    },\n}));\n\nconst createAppStep = (props) => {\n    const APPLICATION_STATES = {\n        CREATED: 'CREATED',\n        APPROVED: 'APPROVED',\n        REJECTED: 'REJECTED',\n    };\n    const [throttlingPolicyList, setThrottlingPolicyList] = useState([]);\n    const [applicationRequest, setApplicationRequest] = useState({\n        name: '',\n        throttlingPolicy: '',\n        description: '',\n        tokenType: 'JWT',\n        groups: null,\n        attributes: {},\n    });\n    const [isNameValid, setIsNameValid] = useState(true);\n    const [allAppAttributes, setAllAppAttributes] = useState(null);\n    const [hasValidKM, setHasValidKM] = useState(null);\n    const {\n        currentStep, setCreatedApp, incrementStep, intl, setStepStatus, stepStatuses,\n    } = props;\n    const { api: apiObject } = useContext(ApiContext);\n\n    const validateName = (value) => {\n        if (!value || value.trim() === '') {\n            setIsNameValid({ isNameValid: false });\n            return Promise.reject(new Error(intl.formatMessage({\n                defaultMessage: 'Application name is required',\n                id: 'Apis.Details.Credentials.Wizard.CreateAppStep.application.name.is.required',\n            })));\n        }\n        setIsNameValid({ isNameValid: true });\n        return Promise.resolve(true);\n    };\n\n    /**\n     * @param {object} name application attribute name\n     * @returns {void}\n     * @memberof ApplicationFormHandler\n     */\n    const isRequiredAttribute = (name) => {\n        if (allAppAttributes) {\n            for (let i = 0; i < allAppAttributes.length; i++) {\n                if (allAppAttributes[i].attribute === name) {\n                    return allAppAttributes[i].required === 'true';\n                }\n            }\n        }\n        return false;\n    };\n\n    /**\n     * @param {object} name application attribute name\n     * @returns {Object} attribute value\n     * @memberof ApplicationFormHandler\n     */\n    const getAttributeValue = (name) => {\n        return applicationRequest.attributes[name];\n    };\n\n    const createApplication = () => {\n        const api = new API();\n        if (!applicationRequest.name || applicationRequest.name.trim() === '') {\n            Alert.error(intl.formatMessage({\n                defaultMessage: 'Application name is required',\n                id: 'Apis.Details.Credentials.Wizard.CreateAppStep.application.name.is.required',\n            }));\n            return;\n        }\n        api.createApplication(applicationRequest)\n            .then((response) => {\n                const data = response.body;\n                if (data.status === APPLICATION_STATES.APPROVED) {\n                    const appCreated = { value: data.applicationId, label: data.name };\n                    console.log('Application created successfully.');\n                    setCreatedApp(appCreated);\n                    incrementStep();\n                    setStepStatus(stepStatuses.PROCEED);\n                } else {\n                    setStepStatus(stepStatuses.BLOCKED);\n                }\n            })\n            .catch((error) => {\n                const { response } = error;\n                if (response && response.body) {\n                    const message = response.body.description || intl.formatMessage({\n                        defaultMessage: 'Error while creating the application',\n                        id: 'Apis.Details.Credentials.Wizard.CreateAppStep.error.while.creating.the.application',\n                    });\n                    Alert.error(message);\n                } else {\n                    Alert.error(error.message);\n                }\n                console.error('Error while creating the application');\n            });\n    };\n\n    /**\n     * @param {object} name application attribute name\n     * @returns {void}\n     * @memberof ApplicationFormHandler\n     */\n    const handleAttributesChange = (name) => (event) => {\n        const newApplicationRequest = cloneDeep(applicationRequest);\n        newApplicationRequest.attributes[name] = event.target.value;\n        setApplicationRequest(newApplicationRequest);\n    };\n\n    /**\n     * add a new group function\n     * @param {*} chip newly added group\n     * @param {*} appGroups already existing groups\n     */\n    const handleAddChip = (chip, appGroups) => {\n        const newRequest = { ...applicationRequest };\n        let values = appGroups || [];\n        values = values.slice();\n        values.push(chip);\n        newRequest.groups = values;\n        setApplicationRequest(newRequest);\n    };\n\n    /**\n     * remove a group from already existing groups function\n     * @param {*} chip selected group to be removed\n     * @param {*} index selected group index to be removed\n     * @param {*} appGroups already existing groups\n     */\n    const handleDeleteChip = (chip, index, appGroups) => {\n        const newRequest = { ...applicationRequest };\n        let values = appGroups || [];\n        values = values.filter((v) => v !== chip);\n        newRequest.groups = values;\n        setApplicationRequest(newRequest);\n    };\n\n    useEffect(() => {\n        // Get all the tiers to populate the drop down.\n        const api = new API();\n        const promiseTiers = api.getAllTiers('application', app.throttlingPolicyLimit);\n        const promisedAttributes = api.getAllApplicationAttributes();\n        const promisedKeyManagers = api.getKeyManagers();\n\n        Promise.all([promiseTiers, promisedAttributes, promisedKeyManagers])\n            .then((response) => {\n                const [tierResponse, allAttributes, keyManagers] = response;\n                const throttlingPolicyListLocal = tierResponse.body.list.map((item) => item.name);\n                const newRequest = { ...applicationRequest };\n                if (throttlingPolicyListLocal.length > 0) {\n                    [newRequest.throttlingPolicy] = throttlingPolicyListLocal;\n                }\n                const allAppAttr = [];\n                allAttributes.body.list.map((item) => allAppAttr.push(item));\n                if (allAttributes.length > 0) {\n                    newRequest.attributes = allAppAttr.filter((item) => !item.hidden);\n                }\n                // Selecting the resident key manager\n                const responseKeyManagerList = [];\n                keyManagers.body.list.map((item) => responseKeyManagerList.push(item));\n\n                let hasValidKMInner;\n                if (responseKeyManagerList.length > 0) {\n                    const responseKeyManagerListDefault = responseKeyManagerList.filter(\n                        (x) => x.name === 'Resident Key Manager' && x.enabled,\n                    );\n                    hasValidKMInner = responseKeyManagerListDefault.length !== 0;\n                }\n                setHasValidKM(hasValidKMInner);\n                setApplicationRequest(newRequest);\n                setThrottlingPolicyList(throttlingPolicyListLocal);\n                setAllAppAttributes(allAppAttr);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Credentials.Wizard.CreateAppStep.error.404',\n                        defaultMessage: 'Resource not found',\n                    }));\n                }\n            });\n    }, []);\n\n    if (!hasValidKM) {\n        return (\n            <Box mb={1} ml={4}>\n                <InlineMessage type='warning'>\n                    <FormattedMessage\n                        id='Apis.Details.Credentials.Wizard.CreateAppStep.default.km.msg'\n                        defaultMessage={'Wizard is only accessible via the Resident Key Manager.'\n                                + 'But the Resident Key Manager is disabled at the moment.'}\n                    />\n                </InlineMessage>\n                <Box mt={2}>\n                    <Link to={`/apis/${apiObject.id}/credentials`}>\n                        <Button variant='contained'>\n                            <FormattedMessage\n                                id='Apis.Details.Credentials.Wizard.CreateAppStep.cancel'\n                                defaultMessage='Cancel'\n                            />\n                        </Button>\n                    </Link>\n                </Box>\n            </Box>\n        );\n    }\n\n    return (\n        <Root className={classes.appCreateFormWrapper}>\n            <Box px={2} display='flex' justifyContent='flex-start'>\n                <Grid item xs={10} md={6}>\n                    <ApplicationCreateForm\n                        throttlingPolicyList={throttlingPolicyList}\n                        applicationRequest={applicationRequest}\n                        updateApplicationRequest={setApplicationRequest}\n                        validateName={validateName}\n                        isNameValid={isNameValid}\n                        allAppAttributes={allAppAttributes}\n                        handleAttributesChange={handleAttributesChange}\n                        isRequiredAttribute={isRequiredAttribute}\n                        getAttributeValue={getAttributeValue}\n                        handleDeleteChip={handleDeleteChip}\n                        handleAddChip={handleAddChip}\n                    />\n                </Grid>\n            </Box>\n            <ButtonPanel\n                classes={classes}\n                currentStep={currentStep}\n                handleCurrentStep={createApplication}\n            />\n        </Root>\n    );\n};\n\nexport default injectIntl(createAppStep);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect, useContext } from 'react';\nimport SubscribeToApi from 'AppComponents/Shared/AppsAndKeys/SubscribeToApi';\nimport Alert from 'AppComponents/Shared/Alert';\nimport API from 'AppData/api';\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\nimport { injectIntl } from 'react-intl';\nimport Box from '@mui/material/Box';\nimport ButtonPanel from './ButtonPanel';\n\nconst subscribeToAppStep = (props) => {\n    const SUBSCRIPTION_STATES = {\n        ON_HOLD: 'ON_HOLD',\n        UNBLOCKED: 'UNBLOCKED',\n        REJECTED: 'REJECTED',\n    };\n    const [subscriptionRequest, setApplicationRequest] = useState({\n        applicationId: '',\n        apiId: '',\n        throttlingPolicy: '',\n    });\n    const { api: apiObject } = useContext(ApiContext);\n    const [newApp, setNewApp] = useState(null);\n    const [throttlingPolicyList] = useState(apiObject.tiers);\n    const {\n        currentStep, createdApp, incrementStep, intl, setStepStatus,\n        stepStatuses, classes,\n    } = props;\n    const subscribeToApplication = () => {\n        const api = new API();\n        api.subscribe(\n            subscriptionRequest.apiId, subscriptionRequest.applicationId,\n            subscriptionRequest.throttlingPolicy,\n        )\n            .then((response) => {\n                if (response.body.status === SUBSCRIPTION_STATES.UNBLOCKED) {\n                    console.log('Subscription created successfully with ID : ' + response.body.subscriptionId);\n                    Alert.info(intl.formatMessage({\n                        defaultMessage: 'Subscribed successfully',\n                        id: 'Apis.Details.Credentials.Wizard.SubscribeToAppStep.subscribed.successfully',\n                    }));\n                    incrementStep();\n                    setStepStatus(stepStatuses.PROCEED);\n                } else {\n                    setStepStatus(stepStatuses.BLOCKED);\n                }\n            })\n            .catch((error) => {\n                console.log('Error while creating the subscription.');\n                console.error(error);\n            });\n    };\n\n    useEffect(() => {\n        const newSubscriptionRequest = { ...subscriptionRequest, apiId: apiObject.id };\n        if (throttlingPolicyList) {\n            const [tierData] = throttlingPolicyList;\n            newSubscriptionRequest.throttlingPolicy = tierData.tierName;\n        }\n        if (createdApp) {\n            newSubscriptionRequest.applicationId = createdApp.value;\n        }\n        setApplicationRequest(newSubscriptionRequest);\n        setNewApp(createdApp);\n    }, [createdApp]);\n\n    return (\n        <Box component='div'>\n            <SubscribeToApi\n                throttlingPolicyList={throttlingPolicyList}\n                applicationsAvailable={[newApp]}\n                subscriptionRequest={subscriptionRequest}\n                updateSubscriptionRequest={setApplicationRequest}\n            />\n            <ButtonPanel\n                classes={classes}\n                currentStep={currentStep}\n                handleCurrentStep={subscribeToApplication}\n            />\n        </Box>\n    );\n};\n\nexport default injectIntl(subscribeToAppStep);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableRow from '@mui/material/TableRow';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Application from 'AppData/Application';\nimport API from 'AppData/api';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Settings from 'Settings';\nimport ButtonPanel from './ButtonPanel';\n\nconst PREFIX = 'generateKeysStep';\n\nconst classes = {\n    keyConfigWrapper: `${PREFIX}-keyConfigWrapper`,\n    radioWrapper: `${PREFIX}-radioWrapper`,\n    paper: `${PREFIX}-paper`,\n    subTitle: `${PREFIX}-subTitle`,\n    tabPanel: `${PREFIX}-tabPanel`,\n    hr: `${PREFIX}-hr`,\n    muiFormGroupRoot: `${PREFIX}-muiFormGroupRoot`,\n    table: `${PREFIX}-table`,\n    leftCol: `${PREFIX}-leftCol`,\n    iconAligner: `${PREFIX}-iconAligner`,\n};\n\n// TODO jss-to-styled codemod: The Fragment root was replaced by div. Change the tag if needed.\nconst Root = styled('div')((\n    {\n        theme,\n    },\n) => ({\n    [`& .${classes.keyConfigWrapper}`]: {\n        paddingLeft: theme.spacing(4),\n        flexDirection: 'column',\n    },\n\n    [`& .${classes.radioWrapper}`]: {\n        flexDirection: 'row',\n    },\n\n    [`& .${classes.paper}`]: {\n        background: 'none',\n        marginBottom: theme.spacing(2),\n        marginTop: theme.spacing(2),\n    },\n\n    [`& .${classes.subTitle}`]: {\n        fontWeight: 400,\n    },\n\n    [`& .${classes.tabPanel}`]: {\n        '& .MuiBox-root': {\n            padding: 0,\n        },\n    },\n\n    [`& .${classes.hr}`]: {\n        border: 'solid 1px #efefef',\n    },\n\n    [`& .${classes.muiFormGroupRoot}`]: {\n        flexDirection: 'row',\n    },\n\n    [`& .${classes.table}`]: {\n        minWidth: '100%',\n        '& td, & th': {\n            padding: theme.spacing(),\n        },\n    },\n\n    [`& .${classes.leftCol}`]: {\n        width: 200,\n    },\n\n    [`& .${classes.iconAligner}`]: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n    },\n}));\n\nfunction TabPanel(props) {\n    const {\n        children, value, index, ...other\n    } = props;\n\n    return (\n        <div\n            role='tabpanel'\n            hidden={value !== index}\n            id={`nav-tabpanel-${index}`}\n            aria-labelledby={`nav-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                (<Root>{children}</Root>)\n            )}\n        </div>\n    );\n}\nTabPanel.defaultProps = {\n    children: <div />,\n};\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired,\n};\n\nconst generateKeysStep = (props) => {\n    const intl = useIntl();\n\n    const keyStates = {\n        COMPLETED: 'COMPLETED',\n        APPROVED: 'APPROVED',\n        CREATED: 'CREATED',\n        REJECTED: 'REJECTED',\n    };\n    const [nextActive, setNextActive] = useState(true);\n    const [keyManager, setKeyManager] = useState(null);\n    const selectedTab = 'Resident Key Manager';\n\n    const [keyRequest, setKeyRequest] = useState({\n        keyType: 'SANDBOX',\n        supportedGrantTypes: [],\n        callbackUrl: '',\n        additionalProperties: {},\n        keyManager: '',\n    });\n\n    const {\n        currentStep, createdApp, incrementStep, setCreatedKeyType,\n        setStepStatus, stepStatuses, setCreatedSelectedTab,\n    } = props;\n\n    useEffect(() => {\n        const api = new API();\n        const promisedKeyManagers = api.getKeyManagers();\n        promisedKeyManagers\n            .then((response) => {\n                const responseKeyManagerList = [];\n                response.body.list.map((item) => responseKeyManagerList.push(item));\n\n                // Selecting a key manager from the list of key managers.\n                let selectedKeyManager;\n                if (responseKeyManagerList.length > 0) {\n                    const responseKeyManagerListDefault = responseKeyManagerList.filter((x) => x.name === 'Resident Key Manager');\n                    selectedKeyManager = responseKeyManagerListDefault.length > 0 ? responseKeyManagerListDefault[0]\n                        : responseKeyManagerList[0];\n                }\n\n                // Filtering Grant Types for Token Exchange\n                const filteredGrantTypes = selectedKeyManager.availableGrantTypes\n                    .filter((k) => (k !== 'urn:ietf:params:oauth:grant-type:token-exchange'));\n                setKeyManager({ ...selectedKeyManager, availableGrantTypes: filteredGrantTypes });\n\n                // Setting key request\n                try {\n                    const newKeyRequest = { ...keyRequest };\n                    newKeyRequest.keyManager = selectedKeyManager.id;\n                    newKeyRequest.supportedGrantTypes = selectedKeyManager.availableGrantTypes;\n                    if (selectedKeyManager.availableGrantTypes.includes('implicit')\n                        || selectedKeyManager.availableGrantTypes.includes('authorization_code')) {\n                        newKeyRequest.callbackUrl = 'http://localhost';\n                    }\n                    if (!selectedKeyManager.availableGrantTypes.includes('client_credentials')) {\n                        setNextActive(false);\n                    }\n                    setKeyRequest(newKeyRequest);\n                } catch (e) {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Credentials.Wizard.GenerateKeysStep.error.keymanager',\n                        defaultMessage: 'Error while selecting the key manager',\n                    }));\n                }\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n            });\n    }, []);\n\n    const generateKeys = () => {\n        Application.get(createdApp.value).then((application) => {\n            return application.generateKeys(\n                keyRequest.keyType, keyRequest.supportedGrantTypes\n                    .filter((k) => (k !== 'urn:ietf:params:oauth:grant-type:token-exchange')),\n                keyRequest.callbackUrl,\n                keyRequest.additionalProperties, keyRequest.keyManager,\n            );\n        }).then((response) => {\n            if (response.keyState === keyStates.CREATED || response.keyState === keyStates.REJECTED) {\n                setStepStatus(stepStatuses.BLOCKED);\n            } else {\n                incrementStep();\n                setCreatedKeyType(keyRequest.keyType);\n                setCreatedSelectedTab(selectedTab);\n                setStepStatus(stepStatuses.PROCEED);\n                console.log('Keys generated successfully with ID : ' + response);\n            }\n        }).catch((error) => {\n            if (process.env.NODE_ENV !== 'production') {\n                console.log(error);\n            }\n            const { status } = error;\n            if (status === 404) {\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.Credentials.Wizard.GenerateKeysStep.error.404',\n                    defaultMessage: 'Resource not found.',\n                }));\n            }\n        });\n    };\n\n    return (\n        <Root>\n            <Box component='div' marginLeft={4}>\n                <Grid container spacing={2}>\n                    {keyManager && (\n                        <>\n                            <Grid item xs={12} md={20} lg={3}>\n                                <Typography color='inherit' variant='subtitle2' component='div'>\n                                    <FormattedMessage\n                                        defaultMessage='Key Configuration'\n                                        id='Apis.Details.Credentials.Wizard.GenerateKeysStep.key.configuration'\n                                    />\n                                </Typography>\n                                <Typography color='inherit' variant='caption' component='p'>\n                                    <FormHelperText>\n                                        <FormattedMessage\n                                            defaultMessage={'These configurations are set for the purpose of the wizard.'\n                                                + 'You have more control over them when you go to the application view. '}\n                                            id='Apis.Details.Credentials.Wizard.GenerateKeysStep.key.configuration.help'\n                                        />\n                                    </FormHelperText>\n\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={12} md={12} lg={9}>\n                                <Table className={classes.table}>\n                                    <TableBody>\n                                        <TableRow>\n                                            <TableCell component='th' scope='row' className={classes.leftCol}>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Credentials.Wizard.GenerateKeysStep.config.km.name'\n                                                    defaultMessage='Key Manager'\n                                                />\n                                            </TableCell>\n                                            <TableCell>\n                                                <div>{keyManager.displayName || keyManager.name}</div>\n                                                <Typography variant='caption' component='div'>{keyManager.description}</Typography>\n                                            </TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell component='th' scope='row' className={classes.leftCol}>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Credentials.Wizard.GenerateKeysStep.list.environment'\n                                                    defaultMessage='Environment'\n                                                />\n                                            </TableCell>\n                                            <TableCell>Sandbox</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell component='th' scope='row' className={classes.leftCol}>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Credentials.Wizard.GenerateKeysStep.list.tokenEndpoint'\n                                                    defaultMessage='Token Endpoint'\n                                                />\n                                            </TableCell>\n                                            <TableCell>{keyManager.tokenEndpoint}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell component='th' scope='row' className={classes.leftCol}>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Credentials.Wizard.GenerateKeysStep.list.revokeEndpoint'\n                                                    defaultMessage='Revoke Endpoint'\n                                                />\n                                            </TableCell>\n                                            <TableCell>{keyManager.revokeEndpoint}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell component='th' scope='row' className={classes.leftCol}>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Credentials.Wizard.GenerateKeysStep.list.userInfoEndpoint'\n                                                    defaultMessage='User Info Endpoint'\n                                                />\n                                            </TableCell>\n                                            <TableCell>{keyManager.userInfoEndpoint}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell component='th' scope='row' className={classes.leftCol}>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Credentials.Wizard.GenerateKeysStep.list.grantTypes'\n                                                    defaultMessage='Grant Types'\n                                                />\n                                            </TableCell>\n                                            <TableCell>\n                                                {keyManager.availableGrantTypes.map((gt) => (\n                                                    <span>\n                                                        {Settings.grantTypes[gt] || gt}\n                                                        ,\n                                                        {' '}\n                                                    </span>\n                                                ))}\n                                            </TableCell>\n                                        </TableRow>\n                                    </TableBody>\n                                </Table>\n                            </Grid>\n                        </>\n                    )}\n                </Grid>\n                <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                        <Box component='span' m={1}>\n                            <ButtonPanel\n                                classes={classes}\n                                currentStep={currentStep}\n                                handleCurrentStep={generateKeys}\n                                nextActive={nextActive}\n                            />\n                        </Box>\n\n                    </Grid>\n                </Grid>\n            </Box>\n        </Root>\n    );\n};\n\nexport default generateKeysStep;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { styled } from '@mui/material/styles';\nimport Tokens from 'AppComponents/Shared/AppsAndKeys/Tokens';\nimport Application from 'AppData/Application';\nimport { defineMessages, useIntl } from 'react-intl';\nimport Typography from '@mui/material/Typography';\nimport Alert from 'AppComponents/Shared/Alert';\nimport ButtonPanel from './ButtonPanel';\n\nconst PREFIX = 'generateAccessTokenStep';\n\nconst classes = {\n    tokenWrapper: `${PREFIX}-tokenWrapper`,\n    title: `${PREFIX}-title`,\n};\n\n// TODO jss-to-styled codemod: The Fragment root was replaced by div. Change the tag if needed.\nconst Root = styled('div')((\n    {\n        theme,\n    },\n) => ({\n    [`& .${classes.tokenWrapper}`]: {\n        paddingLeft: theme.spacing(3),\n        width: '90%',\n    },\n\n    [`& .${classes.title}`]: {\n        paddingLeft: theme.spacing(2),\n    },\n}));\n\nconst generateAccessTokenStep = (props) => {\n    const intl = useIntl();\n    const [keyType, setKeyType] = useState('PRODUCTION');\n    const [selectedTab, setSelectedTab] = useState('Resident Key Manager');\n    const [subscriptionScopes, setSubscriptionScopes] = useState([]);\n\n    const [accessTokenRequest, setAccessTokenRequest] = useState({\n        timeout: 3600,\n        scopesSelected: [],\n        keyType: '',\n    });\n    const {\n        currentStep, createdApp, setCreatedToken, incrementStep, createdKeyType, createdSelectedTab,\n    } = props;\n\n    useEffect(() => {\n        const newRequest = { ...accessTokenRequest, keyType: createdKeyType };\n        setKeyType(createdKeyType);\n        setSelectedTab(createdSelectedTab);\n        setAccessTokenRequest(newRequest);\n    }, [createdKeyType, createdSelectedTab]);\n\n    useEffect(() => {\n        Application.get(createdApp.value)\n            .then((application) => {\n                application.getKeys().then(() => {\n                    const subscriptionScopesList = application.subscriptionScopes\n                        .map((scope) => { return scope.key; });\n                    setSubscriptionScopes(subscriptionScopesList);\n                });\n            }).catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.error(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Credentials.Wizard.GenerateAccessTokenStep.error.404',\n                        defaultMessage: 'Resource not found',\n                    }));\n                }\n            });\n    }, []);\n\n    const generateAccessToken = () => {\n        setSelectedTab(createdSelectedTab);\n        Application.get(createdApp.value)\n            .then((application) => {\n                return application.generateToken(\n                    selectedTab,\n                    accessTokenRequest.keyType,\n                    accessTokenRequest.timeout,\n                    accessTokenRequest.scopesSelected,\n                );\n            })\n            .then((response) => {\n                console.log('token generated successfully ' + response);\n                setCreatedToken(response);\n                incrementStep();\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.error(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Credentials.Wizard.GenerateAccessTokenStep.error.404',\n                        defaultMessage: 'Resource not found',\n                    }));\n                }\n            });\n    };\n\n    const messages = defineMessages({\n        dataInfo: {\n            id: 'Apis.Details.Credentials.Wizard.GenerateAccessTokenStep',\n            defaultMessage: 'Generate Access Token for {keyType} environment',\n        },\n    });\n\n    return (\n        <Root>\n            <div className={classes.tokenWrapper}>\n                <Typography variant='subtitle1' component='div' className={classes.title}>\n                    {intl.formatMessage(messages.dataInfo, { keyType })}\n                </Typography>\n                <Tokens\n                    updateAccessTokenRequest={setAccessTokenRequest}\n                    accessTokenRequest={accessTokenRequest}\n                    subscriptionScopes={subscriptionScopes}\n                />\n                <ButtonPanel\n                    classes={classes}\n                    currentStep={currentStep}\n                    handleCurrentStep={generateAccessToken}\n                />\n            </div>\n        </Root>\n    );\n};\n\nexport default generateAccessTokenStep;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useContext } from 'react';\nimport { styled } from '@mui/material/styles';\nimport ViewToken from 'AppComponents/Shared/AppsAndKeys/ViewToken';\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\nimport { Box } from '@mui/material';\nimport Grid from '@mui/material/Grid';\nimport { useHistory } from 'react-router-dom';\nimport ButtonPanel from './ButtonPanel';\n\nconst PREFIX = 'copyAccessTokenStep';\n\nconst classes = {\n    tokenWrapper: `${PREFIX}-tokenWrapper`,\n};\n\nconst Root = styled('div')((\n    {\n        theme,\n    },\n) => ({\n    [`&.${classes.tokenWrapper}`]: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(2),\n        width: '90%',\n    },\n}));\n\nconst copyAccessTokenStep = (props) => {\n    const {\n        currentStep, createdToken, handleReset,\n    } = props;\n    const history = useHistory();\n    const { api, updateSubscriptionData } = useContext(ApiContext);\n    const completeStep = () => {\n        updateSubscriptionData(history.push(`/apis/${api.id}/credentials`));\n    };\n\n    return (\n        <Root className={classes.tokenWrapper}>\n            <Grid md={10}>\n                <Box my={1} mx={2}>\n                    <ViewToken token={{ ...createdToken, isOauth: true }} />\n                </Box>\n            </Grid>\n            <ButtonPanel\n                classes={classes}\n                currentStep={currentStep}\n                handleCurrentStep={completeStep}\n                handleReset={handleReset}\n            />\n        </Root>\n    );\n};\n\nexport default copyAccessTokenStep;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Component } from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport Grid from '@mui/material/Grid';\nimport { Typography, Paper, Box } from '@mui/material';\nimport Stepper from '@mui/material/Stepper';\nimport Step from '@mui/material/Step';\nimport StepLabel from '@mui/material/StepLabel';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport CreateAppStep from './CreateAppStep';\nimport SubscribeToAppStep from './SubscribeToAppStep';\nimport GenerateKeysStep from './GenerateKeysStep';\nimport GenerateAccessTokenStep from './GenerateAccessTokenStep';\nimport CopyAccessTokenStep from './CopyAccessTokenStep';\n\nconst PREFIX = 'Wizard';\n\nconst classes = {\n    paper: `${PREFIX}-paper`,\n    titleSub: `${PREFIX}-titleSub`,\n    boxWrapper: `${PREFIX}-boxWrapper`,\n};\n\n// TODO jss-to-styled codemod: The Fragment root was replaced by div. Change the tag if needed.\nconst Root = styled('div')((\n    {\n        theme,\n    },\n) => ({\n    [`& .${classes.paper}`]: {\n        marginLeft: theme.spacing(3),\n    },\n\n    [`& .${classes.titleSub}`]: {\n        marginLeft: theme.spacing(3),\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n        color: theme.palette.getContrastText(theme.palette.background.default),\n    },\n\n    [`& .${classes.boxWrapper}`]: {\n        '& h5, & label, & td, & li, & div, & input, & p.MuiFormHelperText-root': {\n            color: theme.palette.getContrastText(theme.palette.background.paper),\n        },\n        '& .MuiButton-containedPrimary span.MuiButton-label': {\n            color: theme.palette.getContrastText(theme.palette.primary.main),\n        },\n    },\n}));\n\nconst stepComponents = [CreateAppStep, SubscribeToAppStep, GenerateKeysStep,\n    GenerateAccessTokenStep, CopyAccessTokenStep];\n\n/**\n * Class used for wizard\n */\nclass Wizard extends Component {\n    /**\n     * @param {*} props properties\n     */\n    constructor(props) {\n        super(props);\n        const { intl } = this.props;\n        this.steps = [\n            intl.formatMessage({\n                defaultMessage: 'Create application',\n                id: 'Apis.Details.Credentials.Wizard.Wizard.create',\n            }),\n            intl.formatMessage({\n                defaultMessage: 'Subscribe to new application',\n                id: 'Apis.Details.Credentials.Wizard.Wizard.subscribe.to.new.application',\n            }),\n            intl.formatMessage({\n                defaultMessage: 'Generate Keys',\n                id: 'Apis.Details.Credentials.Wizard.Wizard.generate.keys',\n            }),\n            intl.formatMessage({\n                defaultMessage: 'Generate Access Token',\n                id: 'Apis.Details.Credentials.Wizard.Wizard.generate.access.token',\n            }),\n            intl.formatMessage({\n                defaultMessage: 'Copy Access Token',\n                id: 'Apis.Details.Credentials.Wizard.Wizard.copy.access.token',\n            }),\n        ];\n        this.stepStatuses = {\n            PROCEED: 'PROCEED',\n            BLOCKED: 'BLOCKED',\n        };\n        this.state = {\n            currentStep: 0,\n            createdApp: null,\n            createdToken: null,\n            redirect: false,\n            createdKeyType: '',\n            createdSelectedTab: '',\n            stepStatus: 'PROCEED',\n        };\n    }\n\n    /**\n     * Used to set the status retured after executing each step. Used in workflow\n     * scenario to evaluate wheather we can proceed to next step\n     * @param {*} stepStatus status\n     */\n    setStepStatus = (stepStatus) => {\n        this.setState({ stepStatus });\n    }\n\n    /**\n     * Set the created app from step 1\n     * @param {*} createdApp app created\n     */\n    setCreatedApp = (createdApp) => {\n        this.setState({ createdApp });\n    }\n\n    /**\n     * Set the created token from step 4\n     * @param {*} createdToken token created\n     */\n    setCreatedToken = (createdToken) => {\n        this.setState({ createdToken });\n    }\n\n    /**\n     * Set the created keytype from step 3\n     * @param {*} createdKeyType token created\n     */\n    setCreatedKeyType = (createdKeyType) => {\n        this.setState({ createdKeyType });\n    }\n\n    /**\n     * Set the created selectedTab from step 3\n     * @param {*} selectedTab token created\n     */\n    setCreatedSelectedTab = (createdSelectedTab) => {\n        this.setState({ createdSelectedTab });\n    }\n\n    /**\n     * Increment the current step or next step by 1\n     */\n    handleNext = () => {\n        this.setState(({ currentStep }) => {\n            return { currentStep: currentStep + 1 };\n        });\n    }\n\n    /**\n     * Rest the currentStep to 0 and bring wizard back to first step\n     * @memberof Wizard\n     */\n    handleReset = () => {\n        this.setState({\n            currentStep: 0,\n        });\n    };\n\n    /**\n     * @inheritdoc\n     */\n    render() {\n        const { currentStep, stepStatus } = this.state;\n        const CurrentStepComponent = stepComponents[currentStep];\n        return (\n            <Root>\n                <Typography variant='h4' component='h2' className={classes.titleSub}>\n                    <FormattedMessage\n                        id={'Apis.Details.Credentials.Credentials'\n                    + '.api.credentials.generate'}\n                        defaultMessage='Subscription & Key Generation Wizard'\n                    />\n                </Typography>\n                <Paper elevation={0} className={classes.paper}>\n                    <Box py={4} mx='auto' display='block' width='96%'>\n                        <Grid item xs={12} md={12}>\n                            <Stepper activeStep={currentStep}>\n                                {this.steps.map((label) => {\n                                    return (\n                                        <Step key={label}>\n                                            <StepLabel>{label}</StepLabel>\n                                        </Step>\n                                    );\n                                })}\n                            </Stepper>\n                        </Grid>\n                    </Box>\n                    <Box py={1} mx='auto' display='block' className={classes.boxWrapper}>\n                        {stepStatus === this.stepStatuses.PROCEED && (\n                            <>\n                                <CurrentStepComponent\n                                    {...this.state}\n                                    incrementStep={this.handleNext}\n                                    setStepStatus={this.setStepStatus}\n                                    stepStatuses={this.stepStatuses}\n                                    classes={classes}\n                                    setCreatedApp={this.setCreatedApp}\n                                    setCreatedKeyType={this.setCreatedKeyType}\n                                    setCreatedSelectedTab={this.setCreatedSelectedTab}\n                                    setCreatedToken={this.setCreatedToken}\n                                    handleReset={this.handleReset}\n                                />\n                            </>\n                        )}\n                    </Box>\n                    <Box py={1} mb={1} mx='auto' display='flex'>\n                        {stepStatus === this.stepStatuses.BLOCKED && (\n                            <Box pt={2} px={3} display='flex'>\n                                <Typography variant='h5' component='label'>\n                                    <FormattedMessage\n                                        id={'Apis.Details.Credentials.Wizard.Wizard.approval.request.'\n                                                + 'for.this.step.has'}\n                                        defaultMessage='A request to register this step has been sent.'\n                                    />\n                                </Typography>\n                            </Box>\n                        )}\n                    </Box>\n                </Paper>\n            </Root>\n        );\n    }\n}\n\nWizard.propTypes = {\n    classes: PropTypes.shape({\n        appBar: PropTypes.string,\n        toolbar: PropTypes.string,\n        subscribeTitle: PropTypes.string,\n        plainContent: PropTypes.string,\n        root: PropTypes.string,\n        instructions: PropTypes.string,\n        button: PropTypes.string,\n        wizardContent: PropTypes.string,\n    }).isRequired,\n    intl: PropTypes.func.isRequired,\n    throttlingPolicyList: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default injectIntl((Wizard));\n","/* eslint-disable react/no-unused-state */\n/* eslint-disable react/jsx-props-no-spreading */\n/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { lazy, Suspense } from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\nimport {\n    Route, Switch, Redirect, Link, withRouter,\n} from 'react-router-dom';\nimport Typography from '@mui/material/Typography';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Api from 'AppData/api';\nimport AuthManager from 'AppData/AuthManager';\nimport withSettings from 'AppComponents/Shared/withSettingsContext';\nimport SolaceTopicsInfo from 'AppComponents/Apis/Details/SolaceApi/SolaceTopicsInfo';\nimport Alert from 'AppComponents/Shared/Alert';\nimport classNames from 'classnames';\nimport { Helmet } from 'react-helmet';\nimport { app } from 'Settings';\nimport CONSTANTS from 'AppData/Constants';\nimport { useTheme } from '@mui/material';\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport QuestionAnswerIcon from '@mui/icons-material/QuestionAnswer';\nimport CustomIcon from '../../Shared/CustomIcon';\nimport LeftMenuItem from '../../Shared/LeftMenuItem';\nimport { ResourceNotFound } from '../../Base/Errors/index';\nimport Breadcrumb from './Breadcrumb';\nimport { ApiContext } from './ApiContext';\nimport Progress from '../../Shared/Progress';\nimport Wizard from './Credentials/Wizard/Wizard';\nimport User from '../../../data/User';\n\nconst ApiConsole = lazy(() => import('./ApiConsole/ApiConsole' /* webpackChunkName: \"APIConsole\" */));\nconst GraphQLConsole = lazy(() => import('./GraphQLConsole/GraphQLConsole' /* webpackChunkName: \"GraphQLConsole\" */));\nconst AsyncApiConsole = lazy(() => import('./AsyncApiConsole/AsyncApiConsole'));\nconst Overview = lazy(() => import('./Overview' /* webpackChunkName: \"APIOverview\" */));\nconst Documents = lazy(() => import('./Documents/Documents' /* webpackChunkName: \"APIDocuments\" */));\nconst Credentials = lazy(() => import('./Credentials/Credentials' /* webpackChunkName: \"APICredentials\" */));\nconst Comments = lazy(() => import('./Comments/Comments' /* webpackChunkName: \"APIComments\" */));\nconst Sdk = lazy(() => import('./Sdk' /* webpackChunkName: \"APISdk\" */));\nconst AsyncApiDefinition = lazy(() => import('./Definitions/AsyncApi/AsyncApiDefinitionUI'));\nconst ApiChat = lazy(() => import('./ApiChat/ApiChat' /* webpackChunkName: \"ApiChat\" */));\n\nconst LoadableSwitch = withRouter((props) => {\n    const {\n        match,\n        api,\n        setbreadcrumbDocument,\n        apiChatEnabled,\n    } = props;\n    const { apiUuid } = match.params;\n    const path = '/apis/';\n    const redirectURL = path + apiUuid + '/overview';\n\n    let tryoutRoute;\n    if (api.type === CONSTANTS.API_TYPES.GRAPHQL) {\n        tryoutRoute = <Route path='/apis/:apiUuid/api-console' component={GraphQLConsole} />;\n    } else if (api.type === CONSTANTS.API_TYPES.WS || api.type === CONSTANTS.API_TYPES.WEBSUB\n        || api.type === CONSTANTS.API_TYPES.SSE || api.type === CONSTANTS.API_TYPES.ASYNC) {\n        tryoutRoute = <Route path='/apis/:apiUuid/api-console' component={AsyncApiConsole} />;\n    } else {\n        tryoutRoute = <Route path='/apis/:apiUuid/api-console' component={ApiConsole} />;\n    }\n\n    return (\n        <Suspense fallback={<Progress />}>\n            <Switch>\n                <Redirect exact from='/apis/:apiUuid' to={redirectURL} />\n                <Route path='/apis/:apiUuid/overview' render={() => <Overview {...props} />} />\n                <Route\n                    path='/apis/:apiUuid/documents'\n                    render={() => <Documents {...props} setbreadcrumbDocument={setbreadcrumbDocument} />}\n                />\n                <Route path='/apis/:apiUuid/definition' component={AsyncApiDefinition} />\n                <Route path='/apis/:apiUuid/solaceTopicsInfo' component={SolaceTopicsInfo} />\n                <Route exact path='/apis/:apiUuid/credentials/wizard' component={Wizard} />\n                <Route path='/apis/:apiUuid/comments' component={Comments} />\n                <Route path='/apis/:apiUuid/credentials' component={Credentials} />\n                {tryoutRoute}\n                {apiChatEnabled && (\n                    <Route path='/apis/:apiUuid/api-chat' component={ApiChat} />\n                )}\n                <Route path='/apis/:apiUuid/sdk' component={Sdk} />\n                <Route component={ResourceNotFound} />\n            </Switch>\n        </Suspense>\n    );\n});\n\nconst PREFIX = 'index';\n\nconst classes = {\n    leftMenu: `${PREFIX}-leftMenu`,\n    leftMenuHorizontal: `${PREFIX}-leftMenuHorizontal`,\n    leftMenuVerticalLeft: `${PREFIX}-leftMenuVerticalLeft`,\n    leftMenuVerticalLeftMinView: `${PREFIX}-leftMenuVerticalLeftMinView`,\n    leftMenuVerticalRight: `${PREFIX}-leftMenuVerticalRight`,\n    leftMenuVerticalRightMinView: `${PREFIX}-leftMenuVerticalRightMinView`,\n    leftLInkMain: `${PREFIX}-leftLInkMain`,\n    leftLInkMainText: `${PREFIX}-leftLInkMainText`,\n    detailsContent: `${PREFIX}-detailsContent`,\n    content: `${PREFIX}-content`,\n    contentExpandView: `${PREFIX}-contentExpandView`,\n    shiftLeft: `${PREFIX}-shiftLeft`,\n    contentLoader: `${PREFIX}-contentLoader`,\n    contentLoaderRightMenu: `${PREFIX}-contentLoaderRightMenu`,\n    expandIcon: `${PREFIX}-expandIcon`,\n    expandIconMinView: `${PREFIX}-expandIconMinView`,\n    accordianSummary: `${PREFIX}-accordianSummary`,\n    accordianSummaryMinView: `${PREFIX}-accordianSummaryMinView`,\n    accordionDetails: `${PREFIX}-accordionDetails`,\n    accordionDetailsMinView: `${PREFIX}-accordionDetailsMinView`,\n    leftMenuVerticalRightDrawerIcon: `${PREFIX}-leftMenuVerticalRightDrawerIcon`,\n};\n\nconst Root = styled('div')((\n    {\n        theme,\n    },\n) => {\n    const {\n        custom: {\n            leftMenu: { width, position },\n        },\n    } = theme;\n    const shiftToLeft = position === 'vertical-left' ? width : 0;\n    const shiftToRight = position === 'vertical-right' ? width : 0;\n    const shiftToLeftMinView = position === 'vertical-left' ? 45 : 0;\n    const shiftToRightMinView = position === 'vertical-right' ? 45 : 0;\n    const leftMenuPaddingLeft = position === 'horizontal' ? theme.spacing(3) : 0;\n\n    return {\n        width: '100%',\n        [`& .${classes.leftMenu}`]: {\n            backgroundColor: theme.custom.leftMenu.background,\n            backgroundImage: `url(${app.context}${theme.custom.leftMenu.backgroundImage})`,\n            textAlign: 'left',\n            fontFamily: theme.typography.fontFamily,\n            position: 'absolute',\n            bottom: 0,\n            paddingLeft: leftMenuPaddingLeft,\n        },\n        [`& .${classes.leftMenuHorizontal}`]: {\n            top: theme.custom.infoBar.height,\n            overflowX: 'auto',\n            position: 'static',\n            display: 'flex',\n            left: 0,\n        },\n        [`& .${classes.leftMenuVerticalLeft}`]: {\n            width: theme.custom.leftMenu.width,\n            [theme.breakpoints.down('md')]: {\n                width: 50,\n            },\n            top: 0,\n            left: 0,\n            overflowY: 'auto',\n        },\n        [`& .${classes.leftMenuVerticalLeftMinView}`]: {\n            width: 50,\n            top: 0,\n            left: 0,\n            overflowY: 'auto',\n        },\n        [`& .${classes.leftMenuVerticalRight}`]: {\n            width: theme.custom.leftMenu.width,\n            [theme.breakpoints.down('md')]: {\n                width: 50,\n            },\n            top: 0,\n            right: 0,\n            overflowY: 'auto',\n        },\n        [`& .${classes.leftMenuVerticalRightMinView}`]: {\n            width: 50,\n            top: 0,\n            right: 0,\n            overflowY: 'auto',\n        },\n        [`& .${classes.leftLInkMain}`]: {\n            borderRight: 'solid 1px ' + theme.custom.leftMenu.background,\n            cursor: 'pointer',\n            background: theme.custom.leftMenu.rootBackground,\n            color: theme.palette.getContrastText(theme.custom.leftMenu.rootBackground),\n            alignItems: 'center',\n            justifyContent: 'center',\n            display: 'flex',\n            height: theme.custom.infoBar.height,\n            textDecoration: 'none',\n        },\n        [`& .${classes.leftLInkMainText}`]: {\n            fontSize: 18,\n            color: theme.palette.grey[500],\n            textDecoration: 'none',\n            paddingLeft: theme.spacing(2),\n        },\n        [`& .${classes.detailsContent}`]: {\n            display: 'flex',\n            flex: 1,\n        },\n        [`& .${classes.content}`]: {\n            display: 'flex',\n            flex: 1,\n            flexGrow: 1,\n            flexDirection: 'column',\n            marginLeft: shiftToLeft,\n            marginRight: shiftToRight,\n            [theme.breakpoints.down('md')]: {\n                marginLeft: shiftToLeft !== 0 && 50,\n                marginRight: shiftToRight !== 0 && 50,\n            },\n            paddingBottom: theme.spacing(3),\n            overflowX: 'hidden',\n        },\n        [`& .${classes.contentExpandView}`]: {\n            display: 'flex',\n            flex: 1,\n            flexGrow: 1,\n            flexDirection: 'column',\n            marginLeft: shiftToLeftMinView,\n            marginRight: shiftToRightMinView,\n            paddingBottom: theme.spacing(3),\n            overflowX: 'hidden',\n            minHeight: 'calc(100vh - 114px)',\n        },\n        [`& .${classes.shiftLeft}`]: {\n            marginLeft: 0,\n        },\n        [`& .${classes.contentLoader}`]: {\n            paddingTop: theme.spacing(3),\n        },\n        [`& .${classes.contentLoaderRightMenu}`]: {\n            paddingRight: theme.custom.leftMenu.width,\n        },\n        [`& .${classes.expandIcon}`]: {\n            color: '#ffffff',\n            [theme.breakpoints.down('md')]: {\n                display: 'none',\n            },\n        },\n        [`& .${classes.expandIconMinView}`]: {\n            display: 'none',\n        },\n        [`& .${classes.accordianSummary}`]: {\n            padding: '0 12px 0 5px',\n            [theme.breakpoints.down('md')]: {\n                padding: 0,\n            },\n        },\n        [`& .${classes.accordianSummaryMinView}`]: {\n            padding: 0,\n        },\n        [`& .${classes.accordionDetails}`]: {\n            paddingTop: 0,\n            paddingBottom: 0,\n            margin: 0,\n            [theme.breakpoints.down('md')]: {\n                paddingLeft: 0,\n                paddingRight: 0,\n            },\n        },\n        [`& .${classes.accordionDetailsMinView}`]: {\n            paddingLeft: 0,\n            paddingRight: 0,\n        },\n        [`& .${classes.leftMenuVerticalRightDrawerIcon}`]: {\n            transform: 'rotate(180deg)',\n        },\n    };\n});\n\n/**\n *\n *\n * @class DetailsLegacy\n * @extends {React.Component}\n */\nclass DetailsLegacy extends React.Component {\n    /**\n     *Creates an instance of DetailsLegacy.\n     * @param {*} props\n     * @memberof DetailsLegacy\n     */\n    constructor(props) {\n        super(props);\n        /**\n         *\n         *\n         * @memberof DetailsLegacy\n         */\n        this.updateSubscriptionData = (callback) => {\n            let existingSubscriptions = null;\n            let promisedApplications = null;\n\n            const restApi = new Api();\n\n            // const subscriptionClient = new Subscription();\n            const promisedAPI = restApi.getAPIById(this.api_uuid);\n\n            promisedAPI\n                .then((api) => {\n                    this.setState({ api: api.body });\n                })\n                .catch((error) => {\n                    const { status, response } = error;\n                    const { setTenantDomain, intl } = this.props;\n\n                    const message = intl.formatMessage({\n                        defaultMessage: 'Invalid tenant domain',\n                        id: 'Apis.Details.index.invalid.tenant.domain',\n                    });\n                    if (response && response.body.code === 901300) {\n                        setTenantDomain('INVALID');\n                        Alert.error(message);\n                    }\n                    console.error('Error when getting apis', error);\n                    if (status === 404 || status === 403) {\n                        this.setState({ notFound: true });\n                    }\n                });\n            const user = AuthManager.getUser();\n            if (user === null) {\n                const user1 = new User();\n                this.setState({ open: user1.isSideBarOpen });\n            }\n            if (user != null) {\n                this.setState({ open: user.isSideBarOpen });\n                existingSubscriptions = restApi.getSubscriptions(this.api_uuid, null);\n                const subscriptionLimit = app.subscribeApplicationLimit || 5000;\n                existingSubscriptions = restApi.getSubscriptions(this.api_uuid, null, subscriptionLimit);\n                promisedApplications = restApi.getAllApplications(null, subscriptionLimit);\n\n                Promise.all([existingSubscriptions, promisedApplications])\n                    .then((response) => {\n                        const [subscriptions, applications] = response.map((data) => data.obj);\n\n                        // get the application IDs of existing subscriptions\n                        const subscribedApplications = subscriptions.list.map((element) => {\n                            return {\n                                value: element.applicationId,\n                                policy: element.throttlingPolicy,\n                                status: element.status,\n                                subscriptionId: element.subscriptionId,\n                                label: element.applicationInfo.name,\n                            };\n                        });\n\n                        // Removing subscribed applications from all the applications and get\n                        // the available applications to subscribe\n                        const subscribedAppIds = subscribedApplications.map((sub) => sub.value);\n                        const applicationsAvailable = applications.list\n                            .filter((appInner) => !subscribedAppIds.includes(appInner.applicationId) && appInner.status === 'APPROVED')\n                            .map((filteredApp) => {\n                                return {\n                                    value: filteredApp.applicationId,\n                                    label: filteredApp.name,\n                                };\n                            });\n                        this.setState({ subscribedApplications, applicationsAvailable }, () => {\n                            if (callback) {\n                                callback();\n                            }\n                        });\n                    })\n                    .catch((error) => {\n                        if (process.env.NODE_ENV !== 'production') {\n                            console.log(error);\n                        }\n                        const { status } = error;\n                        if (status === 404) {\n                            this.setState({ notFound: true });\n                        }\n                    });\n            }\n        };\n\n        this.state = {\n            active: 'overview',\n            overviewHiden: false,\n            updateSubscriptionData: this.updateSubscriptionData,\n            api: null,\n            applications: null,\n            subscribedApplications: [],\n            applicationsAvailable: [],\n            item: 1,\n            xo: null,\n            breadcrumbDocument: '',\n            tryOutExpanded: true,\n            apiChatEnabled: false,\n        };\n        this.setDetailsAPI = this.setDetailsAPI.bind(this);\n        this.api_uuid = this.props.match.params.apiUuid;\n        this.handleDrawerClose = this.handleDrawerClose.bind(this);\n        this.handleDrawerOpen = this.handleDrawerOpen.bind(this);\n        this.setbreadcrumbDocument = this.setbreadcrumbDocument.bind(this);\n    }\n\n    /**\n     * @memberof DetailsLegacy\n     */\n    componentDidMount() {\n        this.updateSubscriptionData();\n        const api = new Api();\n        const promisedSettings = api.getSettings();\n        promisedSettings\n            .then((response) => {\n                this.setState({ apiChatEnabled: response.body.apiChatEnabled });\n            }).catch((error) => {\n                console.error(\n                    'Error while receiving settings : ',\n                    error,\n                );\n            });\n    }\n\n    /**\n     * handle component did update\n     * @param {JSON} prevProps previous props\n     */\n    componentDidUpdate(prevProps) {\n        const { match: { params: { apiUuid: prevApiUuid } } } = prevProps;\n        const { match: { params: { apiUuid: newApiUuid } } } = this.props;\n        if (prevApiUuid !== newApiUuid) {\n            this.api_uuid = newApiUuid;\n            this.updateSubscriptionData();\n        }\n    }\n\n    /**\n     * @param {string} breadcrumbDocument\n     * @memberof DetailsLegacy\n     */\n    setbreadcrumbDocument(breadcrumbDocument) {\n        this.setState({ breadcrumbDocument });\n    }\n\n    /**\n     * @param {JSON} api api object\n     * @memberof DetailsLegacy\n     */\n    setDetailsAPI(api) {\n        this.setState({ api });\n    }\n\n    /**\n     * @memberof DetailsLegacy\n     */\n    handleDrawerClose() {\n        this.setState({ open: false });\n        const user = AuthManager.getUser();\n        if (user != null) {\n            user.isSideBarOpen = false;\n            AuthManager.setUser(user);\n        }\n    }\n\n    /**\n     * handle left side drawer open\n     */\n    handleDrawerOpen() {\n        this.setState({ open: true });\n        const user = AuthManager.getUser();\n        if (user !== null) {\n            user.isSideBarOpen = true;\n            AuthManager.setUser(user);\n        }\n    }\n\n    /**\n     * handle lef side drawer open\n     * @param {JSON} api api object\n     * @returns {boolean} is the api async api\n     */\n    isAsyncAPI(api) {\n        return (api\n            && (api.type === CONSTANTS.API_TYPES.WS\n                || api.type === CONSTANTS.API_TYPES.WEBSUB\n                || api.type === CONSTANTS.API_TYPES.SSE\n                || api.type === CONSTANTS.API_TYPES.ASYNC));\n    }\n\n    /**\n     * @returns {JSX} rendered outpu\n     * @memberof DetailsLegacy\n     */\n    render() {\n        const {\n            theme, intl,\n        } = this.props;\n        const user = AuthManager.getUser();\n        const {\n            api, notFound, open, breadcrumbDocument, tryOutExpanded, apiChatEnabled,\n        } = this.state;\n        const {\n            custom: {\n                leftMenu: {\n                    rootIconSize, rootIconTextVisible, rootIconVisible, position,\n                },\n                apiDetailPages: {\n                    showCredentials, showComments, showTryout, showDocuments, showSdks, showAsyncSpecification,\n                },\n                title: {\n                    prefix, sufix,\n                },\n            },\n        } = theme;\n        const globalStyle = 'body{ font-family: ' + theme.typography.fontFamily + '}';\n        const pathPrefix = '/apis/' + this.api_uuid + '/';\n        if (!api && notFound) {\n            return <ResourceNotFound />;\n        }\n        // check for widget=true in the query params. If it's present we render without <Base> component.\n        const pageUrl = new URL(window.location);\n        const isWidget = pageUrl.searchParams.get('widget');\n        const isAsyncApi = this.isAsyncAPI(api);\n        const isSubValidationDisabled = api && api.tiers && api.tiers.length === 1\n            && api.tiers[0].tierName.includes(CONSTANTS.DEFAULT_SUBSCRIPTIONLESS_PLAN);\n\n        return api ? (\n            <Root>\n                <ApiContext.Provider value={this.state}>\n                    <Helmet>\n                        <title>{`${prefix} ${api.name}${sufix}`}</title>\n                    </Helmet>\n                    <style>{globalStyle}</style>\n                    {!isWidget && (\n                        <nav\n                            role='navigation'\n                            aria-label={intl.formatMessage({\n                                id: 'Apis.Details.index.secondary.navigation',\n                                defaultMessage: 'Secondary Navigation',\n                            })}\n                            className={classNames(\n                                classes.leftMenu,\n                                {\n                                    [classes.leftMenuHorizontal]: position === 'horizontal',\n                                },\n                                {\n                                    [classes.leftMenuVerticalLeft]: position === 'vertical-left' && open,\n                                    [classes.leftMenuVerticalLeftMinView]: position === 'vertical-left' && !open,\n\n                                },\n                                {\n                                    [classes.leftMenuVerticalRight]: position === 'vertical-right' && open,\n                                    [classes.leftMenuVerticalRightMinView]: position === 'vertical-right' && !open,\n                                },\n                                'left-menu',\n                            )}\n                        >\n                            {rootIconVisible && (\n                                <Link to='/apis' className={classes.leftLInkMain} aria-label='ALL APIs'>\n                                    <CustomIcon width={rootIconSize} height={rootIconSize} icon='api' />\n                                    {rootIconTextVisible && (\n                                        <Typography className={classes.leftLInkMainText}>\n                                            <FormattedMessage id='Apis.Details.index.all.apis' defaultMessage='ALL APIs' />\n                                        </Typography>\n                                    )}\n                                </Link>\n                            )}\n                            <LeftMenuItem\n                                text={<FormattedMessage id='Apis.Details.index.overview' defaultMessage='Overview' />}\n                                route='overview'\n                                iconText='overview'\n                                to={pathPrefix + 'overview'}\n                                open={open}\n                                id='left-menu-overview'\n                            />\n                            {user && showCredentials && !isSubValidationDisabled\n                                && (api.gatewayVendor === 'wso2' || !api.gatewayVendor || api.gatewayType === 'solace') && (\n                                <>\n\n                                    <LeftMenuItem\n                                        text={(\n                                            <FormattedMessage\n                                                id='Apis.Details.index.subscriptions'\n                                                defaultMessage='Subscriptions'\n                                            />\n                                        )}\n                                        route='credentials'\n                                        iconText='credentials'\n                                        to={pathPrefix + 'credentials'}\n                                        open={open}\n                                        id='left-menu-credentials'\n                                    />\n\n                                </>\n                            )}\n                            {showTryout && (api.gatewayType !== 'wso2/apk'\n                                || (api.type === 'APIPRODUCT' && !api.gatewayVendor)) && api.gatewayType !== 'solace' && (\n                                <>\n                                    <Accordion\n                                        id='left-menu-try-out'\n                                        expanded={tryOutExpanded}\n                                        elevation={0}\n                                        style={{ backgroundColor: 'transparent', margin: 0 }}\n                                        onChange={(_event, expanded) => this.setState({ tryOutExpanded: expanded })}\n                                    >\n                                        <AccordionSummary\n                                            expandIcon={(\n                                                <ExpandMoreIcon\n                                                    className={classNames(\n                                                        classes.expandIcon,\n                                                        { [classes.expandIconMinView]: !open },\n                                                    )}\n                                                />\n                                            )}\n                                            style={{ maxHeight: 43, minHeight: 43 }}\n                                            className={classNames(\n                                                classes.accordianSummary,\n                                                { [classes.accordianSummaryMinView]: !open },\n                                            )}\n                                        >\n                                            <LeftMenuItem\n                                                text={(\n                                                    <FormattedMessage\n                                                        id='Apis.Details.index.try.out.'\n                                                        defaultMessage='Try Out'\n                                                    />\n                                                )}\n                                                iconText='test'\n                                                open={open}\n                                                id='left-menu-try-out'\n                                            />\n                                        </AccordionSummary>\n                                        <AccordionDetails\n                                            className={\n                                                classNames(\n                                                    classes.accordionDetails,\n                                                    { [classes.accordionDetailsMinView]: !open },\n                                                )\n                                            }\n                                        >\n                                            <div>\n                                                <LeftMenuItem\n                                                    text={(\n                                                        <FormattedMessage\n                                                            id='Apis.Details.index.try.out.api.console'\n                                                            defaultMessage='API Console'\n                                                        />\n                                                    )}\n                                                    route='api-console'\n                                                    iconText='api-console'\n                                                    to={pathPrefix + 'api-console'}\n                                                    open={open}\n                                                    id='left-menu-test'\n                                                />\n                                                {api.type !== CONSTANTS.API_TYPES.GRAPHQL && !isAsyncApi && apiChatEnabled\n                                                && (api.gatewayVendor === 'wso2' || !api.gatewayVendor) && (\n                                                    <LeftMenuItem\n                                                        text={(\n                                                            <FormattedMessage\n                                                                id='Apis.Details.index.try.out.api.chat'\n                                                                defaultMessage='API Chat'\n                                                            />\n                                                        )}\n                                                        route='api-chat'\n                                                        Icon={<QuestionAnswerIcon style={{ fontSize: 'large', padding: 8 }} />}\n                                                        to={pathPrefix + 'api-chat'}\n                                                        open={open}\n                                                        id='left-menu-api-chat'\n                                                    />\n                                                )}\n                                            </div>\n                                        </AccordionDetails>\n                                    </Accordion>\n                                </>\n                            )}\n                            {isAsyncApi && showAsyncSpecification && (\n                                <LeftMenuItem\n                                    text={(\n                                        <FormattedMessage\n                                            id='Apis.Details.index.definition'\n                                            defaultMessage='Definition'\n                                        />\n                                    )}\n                                    route='definition'\n                                    iconText='Definition'\n                                    to={pathPrefix + 'definition'}\n                                    open={open}\n                                    id='left-menu-definition'\n                                />\n                            )}\n                            {showComments && (\n\n                                <LeftMenuItem\n                                    text={(\n                                        <FormattedMessage\n                                            id='Apis.Details.index.comments'\n                                            defaultMessage='Comments'\n                                        />\n                                    )}\n                                    route='comments'\n                                    iconText='comments'\n                                    to={pathPrefix + 'comments'}\n                                    open={open}\n                                    id='left-menu-comments'\n                                />\n                            )}\n                            {showDocuments && (\n\n                                <LeftMenuItem\n                                    text={(\n                                        <FormattedMessage\n                                            id='Apis.Details.index.documentation'\n                                            defaultMessage='Documents'\n                                        />\n                                    )}\n                                    route='documents'\n                                    iconText='docs'\n                                    to={pathPrefix + 'documents'}\n                                    open={open}\n                                    id='left-menu-documents'\n                                />\n\n                            )}\n                            {!isAsyncApi && showSdks && (\n\n                                <LeftMenuItem\n                                    text={<FormattedMessage id='Apis.Details.index.sdk' defaultMessage='SDKs' />}\n                                    route='sdk'\n                                    iconText='sdk'\n                                    to={pathPrefix + 'sdk'}\n                                    open={open}\n                                    id='left-menu-sdk'\n                                />\n\n                            )}\n                            {open ? (\n                                <div\n                                    onClick={this.handleDrawerClose}\n                                    onKeyDown={this.handleDrawerClose}\n                                    style={{\n                                        width: 100, paddingLeft: '15px', position: 'absolute', bottom: 0, cursor: 'pointer',\n                                    }}\n                                >\n                                    <ArrowBackIosIcon\n                                        fontSize='medium'\n                                        style={{ color: 'white' }}\n                                        className={\n                                            classNames(\n                                                {\n                                                    [classes.leftMenuVerticalRightDrawerIcon]: position === 'vertical-right',\n                                                },\n                                            )\n                                        }\n                                    />\n                                </div>\n                            ) : (\n                                <div\n                                    onClick={this.handleDrawerOpen}\n                                    onKeyDown={this.handleDrawerOpen}\n                                    style={{\n                                        paddingLeft: '15px', position: 'absolute', bottom: 0, cursor: 'pointer',\n                                    }}\n                                >\n                                    <ArrowForwardIosIcon\n                                        fontSize='medium'\n                                        style={{ color: 'white' }}\n                                        className={\n                                            classNames(\n                                                {\n                                                    [classes.leftMenuVerticalRightDrawerIcon]: position === 'vertical-right',\n                                                },\n                                            )\n                                        }\n                                    />\n                                </div>\n\n                            )}\n\n                        </nav>\n                    )}\n\n                    <div\n                        className={classNames(\n                            { [classes.content]: open },\n                            { [classes.contentExpandView]: !open },\n                        )}\n                    >\n                        <Breadcrumb\n                            breadcrumbDocument={breadcrumbDocument}\n                        />\n                        <div\n                            className={classNames(\n                                { [classes.contentLoader]: position === 'horizontal' },\n                                { [classes.contentLoaderRightMenu]: position === 'vertical-right' },\n                            )}\n                        >\n                            <LoadableSwitch\n                                api={api}\n                                updateSubscriptionData={this.updateSubscriptionData}\n                                setbreadcrumbDocument={this.setbreadcrumbDocument}\n                                apiChatEnabled={apiChatEnabled}\n                            />\n                        </div>\n                    </div>\n                </ApiContext.Provider>\n            </Root>\n        ) : (\n            <div className='apim-dual-ring' />\n        );\n    }\n}\n\nDetailsLegacy.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    match: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\n\nfunction Details(props) {\n    const theme = useTheme();\n    return (\n        <DetailsLegacy\n            {...props}\n            theme={theme}\n        />\n    );\n}\n\nexport default withSettings(injectIntl((Details)));\n","/*\n * Copyright (c) 2024, WSO2 LLC. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Fab from '@mui/material/Fab';\nimport ChatIcon from '@mui/icons-material/Chat';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Tooltip from '@mui/material/Tooltip';\nimport { useIntl } from 'react-intl';\n\n/**\n * Renders Chat Icon view..\n * @param {JSON} props Parent pros.\n * @returns {JSX} renders Chat Icon view.\n */\nfunction ChatBotIcon(props) {\n    const { toggleChatbot, handleDisableChatbot, chatbotDisabled } = props;\n    const [showCloseButton, setShowCloseButton] = useState(false);\n    const intl = useIntl();\n\n    const handleMouseEnter = () => {\n        setShowCloseButton(true);\n    };\n\n    const handleMouseLeave = () => {\n        setShowCloseButton(false);\n    };\n\n    const handleCloseIconClick = () => {\n        setShowCloseButton(false);\n        handleDisableChatbot();\n    };\n\n    return (\n        <>\n            <div\n                style={{ position: 'fixed', bottom: 20, right: 30 }}\n                onMouseEnter={handleMouseEnter}\n                onMouseLeave={handleMouseLeave}\n            >\n                {chatbotDisabled ? null : (\n                    <Tooltip\n                        title={intl.formatMessage({\n                            id: 'Apis.Chat.ChatIcon.tooltip.label',\n                            defaultMessage: 'Open Chat',\n                        })}\n                        placement='left'\n                    >\n                        <Fab color='primary' aria-label='chat' onClick={toggleChatbot} style={{ boxShadow: 'none' }}>\n                            <ChatIcon />\n                        </Fab>\n                    </Tooltip>\n                )}\n                {showCloseButton && (\n                    <Tooltip\n                        title={intl.formatMessage({\n                            id: 'Apis.Chat.ChatIcon.disable.chat.label',\n                            defaultMessage: 'Disable chat',\n                        })}\n                        placement='left'\n                    >\n                        <Fab\n                            color='secondary'\n                            variant='round'\n                            aria-label='close'\n                            onClick={handleCloseIconClick}\n                            style={{\n                                position: 'absolute',\n                                top: -18,\n                                right: -18,\n                                width: 34,\n                                height: 16,\n                                backgroundColor: 'transparent',\n                                boxShadow: 'none',\n                            }}\n                        >\n                            <CloseIcon fontSize='medium' style={{ fill: '#000', stroke: '#000' }} />\n                        </Fab>\n                    </Tooltip>\n                )}\n            </div>\n        </>\n    );\n}\n\nChatBotIcon.propTypes = {\n    toggleChatbot: PropTypes.func.isRequired,\n    handleDisableChatbot: PropTypes.func.isRequired,\n    chatbotDisabled: PropTypes.bool.isRequired,\n};\nexport default ChatBotIcon;\n","/*\n * Copyright (c) 2024, WSO2 LLC. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSettingsContext } from 'AppComponents/Shared/SettingsContext';\nimport {\n    TextField, Snackbar, Typography, Box,\n} from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport SendIcon from '@mui/icons-material/Send';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport { useIntl } from 'react-intl';\n\n/**\n * Renders Chat Input view..\n * @param {JSON} props Parent pros.\n * @returns {JSX} renders Chat Input view.\n */\nfunction ChatInput(props) {\n    const { onSend, loading, user } = props;\n    const [content, setContent] = useState('');\n    const [notificationOpen, setNotificationOpen] = useState(false);\n    const QUERY_CHARACTER_LIMIT = 500;\n    const intl = useIntl();\n    const { settings: { marketplaceAssistantEnabled, aiAuthTokenProvided } } = useSettingsContext();\n\n    const handleChange = (e) => {\n        let { value } = e.target;\n        if (value.length > QUERY_CHARACTER_LIMIT) {\n            value = value.slice(0, QUERY_CHARACTER_LIMIT);\n        }\n        setContent(value);\n    };\n\n    const handleSend = () => {\n        if (content) {\n            onSend({ role: user, content });\n            setContent('');\n        }\n    };\n\n    const handleKeyDown = (e) => {\n        if (e.key === 'Enter' && !e.shiftKey) {\n            e.preventDefault();\n            if (!loading) {\n                handleSend();\n            }\n        }\n        if (e.keyCode === 13 && e.shiftKey) {\n            e.preventDefault();\n            setContent(`${content}\\n`);\n        }\n    };\n\n    const handleCloseNotification = () => {\n        setNotificationOpen(false);\n    };\n\n    return (\n        <div>\n            <TextField\n                placeholder={intl.formatMessage({\n                    id: 'Apis.Chat.ChatInput.placeholder',\n                    defaultMessage: 'Type a message...',\n                })}\n                value={content}\n                onChange={handleChange}\n                onKeyDown={handleKeyDown}\n                fullWidth\n                multiline\n                size='small'\n                maxRows={12}\n                disabled={(marketplaceAssistantEnabled && !aiAuthTokenProvided) || !marketplaceAssistantEnabled}\n                InputProps={{\n                    style: {\n                        borderRadius: 10, padding: 18, paddingRight: 4,\n                    },\n                    endAdornment: (\n                        <InputAdornment position='end'>\n                            <IconButton\n                                aria-label='marketplace-chat-message'\n                                onClick={handleSend}\n                                disabled={loading}\n                            >\n                                <SendIcon color='primary' />\n                            </IconButton>\n                        </InputAdornment>\n                    ),\n                }}\n            />\n            <Box display='flex' justifyContent='flex-end' mt={1} mr={1}>\n                <Typography variant='caption'>\n                    {content.length}\n                    /\n                    {QUERY_CHARACTER_LIMIT}\n                </Typography>\n            </Box>\n            <Snackbar\n                anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n                open={notificationOpen}\n                autoHideDuration={500}\n                onClose={handleCloseNotification}\n                message='Please enter a message'\n                sx={{\n                    position: 'absolute',\n                    bottom: 0,\n                    right: 0,\n                    transform: 'translate(50%, 50%)',\n                    marginBottom: '300px',\n                }}\n            />\n        </div>\n    );\n}\n\nChatInput.propTypes = {\n    onSend: PropTypes.func.isRequired,\n    loading: PropTypes.bool.isRequired,\n    user: PropTypes.string.isRequired,\n};\nexport default ChatInput;\n","/*\n * Copyright (c) 2024, WSO2 LLC. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useRef } from 'react';\nimport { PropTypes } from 'prop-types';\nimport Utils from 'AppData/Utils';\nimport {\n    Box, Typography, Card, CardContent, useTheme,\n} from '@mui/material';\nimport PersonIcon from '@mui/icons-material/Person';\nimport ChatIcon from '@mui/icons-material/Chat';\n\nconst getColorFromLetter = (letter, colorMap, offset) => {\n    let charLightColor = colorMap[letter.toLowerCase()];\n\n    if (!charLightColor) {\n        const charNumber = parseInt(letter, 10);\n        if (charNumber) {\n            charLightColor = colorMap[String.fromCharCode(111 + charNumber)];\n        } else {\n            return [null, null];\n        }\n    }\n    const { r, g, b } = Utils.hexToRGBHash(charLightColor);\n    const dark = Utils.rgbToHex(r - Math.ceil(r * offset), g - Math.ceil(offset * g),\n        b - Math.ceil(offset * b));\n    return [charLightColor, dark];\n};\n\n/**\n * Renders a single Chat Message view.\n * @param {JSON} props Parent props.\n * @returns {JSX} Renders single Chat Message view.\n */\nfunction ChatMessage(props) {\n    const { message } = props;\n    const outerBoxRef = useRef(null);\n    const theme = useTheme();\n    const {\n        colorMap, offset,\n    } = theme.custom.thumbnail;\n\n    const profileStyle = {\n        width: '26px',\n        height: '26px',\n        backgroundColor: message.role === 'assistant' ? '#10597f' : '#6d6d6d',\n        alignItems: 'center',\n        justifyContent: 'center',\n        display: 'flex',\n        margin: '10px 10px 10px 0px',\n        borderRadius: message.role === 'assistant' ? '50% 50% 50% 0' : '50% 50% 50% 0',\n    };\n\n    const messageStyle = {\n        textAlign: 'left',\n        justifyContent: 'flex-start',\n        background: message.role === 'assistant' ? theme.palette.grey[100] : '#fff',\n        color: 'black',\n        borderRadius: '8px',\n        overflow: 'auto',\n        overflowX: 'auto',\n        wordWrap: 'break-word',\n        whiteSpace: 'pre-wrap',\n        marginLeft: '20px',\n        maxWidth: '84%',\n    };\n\n    return (\n        <Box\n            display='flex'\n            flexDirection='column'\n            alignItems='flex-start'\n        >\n            {message.role === 'assistant' && (\n                <Box display='flex-start' alignItems='center' flexDirection='column' width='90%'>\n                    <Box display='flex' alignItems='center' width='100%'>\n                        <div style={profileStyle}>\n                            <ChatIcon style={{ fill: '#fff', stroke: '#fff', fontSize: 'small' }} />\n                        </div>\n                        <Typography variant='body1' style={{ fontWeight: '500', fontSize: '12pt' }}>Assistant</Typography>\n                    </Box>\n                </Box>\n            )}\n\n            {message.role !== 'assistant' && (\n                <Box display='flex' alignItems='center'>\n                    <div style={profileStyle}>\n                        <PersonIcon style={{ fill: '#fff', stroke: '#fff', fontSize: 'large' }} />\n                    </div>\n                    <Typography variant='body1' fontWeight='500' fontSize='12pt'>\n                        {message.role.charAt(0).toUpperCase() + message.role.slice(1)}\n                    </Typography>\n                </Box>\n            )}\n            <Box\n                style={{\n                    ...messageStyle,\n                    maxWidth: '84%',\n                }}\n                ref={outerBoxRef}\n                px={2}\n                py={message.role === 'assistant' ? 2 : 0}\n            >\n                <Typography>\n                    {message.content}\n                </Typography>\n            </Box>\n            <Box display='flex-start' alignItems='center' flexDirection='column' width='90%'>\n                {message.apis && (\n                    <Box display='flex' flexDirection='row' flexWrap='wrap' marginLeft='20px' marginRight='16px' width='100%'>\n                        {message.apis.map((api) => {\n                            const [light, dark] = getColorFromLetter(api.name.substring(0, 1), colorMap, offset);\n                            const background = light && `linear-gradient(to right, ${light}, ${dark})`;\n\n                            return (\n                                <a\n                                    key={api.id}\n                                    href={api.apiPath}\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    style={{\n                                        textDecoration: 'none',\n                                        color: 'inherit',\n                                        width: '33%',\n                                    }}\n                                >\n                                    <Card style={{\n                                        margin: '10px 10px 0 0', width: '97%', height: '70px', background,\n                                    }}\n                                    >\n                                        <CardContent style={{ wordWrap: 'break-word', alignItems: 'center', cursor: 'pointer' }}>\n                                            <Typography\n                                                variant='subtitle1'\n                                                gutterBottom\n                                                style={{\n                                                    whiteSpace: 'nowrap',\n                                                    overflow: 'hidden',\n                                                    textOverflow: 'ellipsis',\n                                                    margin: 0,\n                                                    color: '#fff',\n                                                    fontWeight: 'bold',\n                                                }}\n                                            >\n                                                {api.name}\n                                            </Typography>\n                                            <Typography\n                                                variant='subtitle1'\n                                                gutterBottom\n                                                style={{\n                                                    whiteSpace: 'nowrap',\n                                                    overflow: 'hidden',\n                                                    textOverflow: 'ellipsis',\n                                                    fontSize: '10px',\n                                                    color: '#fff',\n                                                }}\n                                            >\n                                                Version:\n                                                {api.version}\n                                            </Typography>\n                                        </CardContent>\n                                    </Card>\n                                </a>\n                            );\n                        })}\n                    </Box>\n                )}\n            </Box>\n        </Box>\n    );\n}\n\nChatMessage.propTypes = {\n    message: PropTypes.shape({\n        role: PropTypes.string.isRequired,\n        content: PropTypes.string.isRequired,\n        apis: PropTypes.arrayOf(PropTypes.string),\n    }).isRequired,\n};\nexport default ChatMessage;\n","/*\n * Copyright (c) 2024, WSO2 LLC. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\n\nconst Loader = () => {\n    return (\n        <div className='loader' />\n    );\n};\n\nexport default Loader;\n","/*\n * Copyright (c) 2024, WSO2 LLC. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useRef, useEffect } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { Box, Typography } from '@mui/material';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { useSettingsContext } from 'AppComponents/Shared/SettingsContext';\nimport LaunchIcon from '@mui/icons-material/Launch';\nimport Alert from '@mui/material/Alert';\nimport ChatIcon from '@mui/icons-material/Chat';\nimport ChatInput from './ChatInput';\nimport ChatMessage from './ChatMessage';\nimport Loader from './Loader';\n\n/**\n * Renders Chat Messages view.\n *\n * @param {JSON} props Parent pros.\n * @returns {JSX} renders Chat Messages view.\n */\nfunction ChatMessages(props) {\n    const {\n        messages, loading, onSend, user,\n    } = props;\n    const intl = useIntl();\n    const { settings: { aiAuthTokenProvided } } = useSettingsContext();\n    const messagesEndRef = useRef(null);\n\n    const subjectLine = intl.formatMessage({\n        id: 'Apis.Chat.Chat.Messages.subject.line',\n        defaultMessage: 'API Marketplace Assistant is an early feature and can make mistakes. Verify its outputs.',\n    });\n\n    const style = {\n        width: '26px',\n        height: '26px',\n        backgroundColor: '#10597f',\n        alignItems: 'center',\n        justifyContent: 'center',\n        display: 'flex',\n        margin: '10px 10px 10px 0px',\n        borderRadius: '50% 50% 50% 0',\n    };\n\n    const scrollToBottom = () => {\n        messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n    };\n\n    useEffect(scrollToBottom, [messages]);\n\n    const authTokenNotProvidedWarning = (\n        <FormattedMessage\n            id='Apis.Details.ChatMessages.warning.authTokenMissing'\n            defaultMessage={'You must provide a token to start using the API Marketplace Assistant. To obtain one, '\n                + 'follow the steps provided under {marketplaceAssistantDocLink} '}\n            values={{\n                marketplaceAssistantDocLink: (\n                    <a\n                        id='marketplace-assistant-doc-link'\n                        href='https://apim.docs.wso2.com/en/4.3.0/consume/discover-apis/marketplace-assistant/'\n                        target='_blank'\n                        rel='noopener noreferrer'\n                    >\n                        Search APIs with Marketplace Assistant\n                        <LaunchIcon\n                            style={{ marginLeft: '2px' }}\n                            fontSize='small'\n                        />\n                    </a>\n                ),\n            }}\n        />\n    );\n\n    return (\n        <Box\n            maxHeight='100%'\n            display='flex'\n            flexDirection='column'\n            marginLeft='5%'\n        >\n            <Box\n                display='flex'\n                justifyContent='center'\n                overflow='auto'\n            >\n                <Box\n                    maxWidth='1320px'\n                    width='100%'\n                >\n                    {aiAuthTokenProvided ? (\n                        messages && messages.map((message) => (\n                            <Box my={1}>\n                                <ChatMessage message={message} />\n                            </Box>\n                        ))\n                    ) : (\n                        <Box display='flex' justifyContent='center' alignItems='center' mr='5%' mb={1}>\n                            <Alert severity='warning'>\n                                {authTokenNotProvidedWarning}\n                            </Alert>\n                        </Box>\n                    )}\n\n                    {loading && (\n                        <Box\n                            display='flex'\n                            flexDirection='column'\n                            alignItems='flex-start'\n                        >\n                            <Box display='flex' alignItems='center'>\n                                <div style={style}>\n                                    <ChatIcon style={{ fill: '#fff', stroke: '#fff', fontSize: 'small' }} />\n                                </div>\n                                <Typography variant='body1' style={{ fontWeight: '500', fontSize: '12pt' }}>Assistant</Typography>\n                            </Box>\n                            <Box\n                                textAlign='left'\n                                bgcolor='#fff'\n                                borderRadius='10px'\n                                justifyContent='flex-start'\n                                px={3}\n                                marginLeft='12px'\n                                marginBottom='10px'\n                            >\n                                <Loader />\n                            </Box>\n                        </Box>\n                    )}\n                    <div ref={messagesEndRef} />\n                </Box>\n            </Box>\n\n            <Box\n                display='flex'\n                justifyContent='center'\n            >\n                <Box\n                    mt={1.5}\n                    mb={0.5}\n                    width='100%'\n                    maxWidth='1380px'\n                    marginRight='5%'\n                >\n                    <ChatInput onSend={onSend} loading={loading} user={user} />\n                </Box>\n\n            </Box>\n            <Box mb={1}>\n                <Typography\n                    color='grey'\n                    variant='body2'\n                    fontSize='8pt'\n                    textAlign='center'\n                    lineHeight='1.4'\n                    marginRight='5%'\n                >\n                    {subjectLine}\n                </Typography>\n            </Box>\n        </Box>\n    );\n}\n\nChatMessages.propTypes = {\n    messages: PropTypes.instanceOf(Array).isRequired,\n    loading: PropTypes.bool.isRequired,\n    onSend: PropTypes.func.isRequired,\n    user: PropTypes.string.isRequired,\n};\nexport default ChatMessages;\n","/*\n * Copyright (c) 2024, WSO2 LLC. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Box, IconButton, Typography } from '@mui/material';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport 'react-resizable/css/styles.css';\nimport FullscreenIcon from '@mui/icons-material/Fullscreen';\nimport FullscreenExitIcon from '@mui/icons-material/FullscreenExit';\nimport ExpandMoreTwoToneIcon from '@mui/icons-material/ExpandMoreTwoTone';\nimport Tooltip from '@mui/material/Tooltip';\nimport RestartAltTwoToneIcon from '@mui/icons-material/RestartAltTwoTone';\nimport { styled, alpha } from '@mui/material/styles';\n\nconst PREFIX = 'marketplace-assistant-chatbot-header';\n\nconst classes = {\n    mainHeader: `${PREFIX}-mainHeader`,\n    chatbotNameBox: `${PREFIX}-chatbotNameBox`,\n    chatbotName: `${PREFIX}-chatbotName`,\n};\n\nconst Root = styled('div')(({ theme }) => ({\n    [`& .${classes.chatbotNameBox}`]: {\n        padding: '2px 18px 1px 10px',\n        margin: '12px 0 12px auto',\n        borderBottom: '2px solid #10597f',\n        borderLeft: '2px solid #10597f',\n        borderRight: '2px solid #10597f',\n        borderRadius: '38px',\n    },\n    [`& .${classes.chatbotName}`]: {\n        marginBottom: -5,\n        fontSize: '12pt',\n        fontWeight: '500',\n        color: '#10597f',\n    },\n    [`& .${classes.mainHeader}`]: {\n        borderColor: alpha(theme.palette.common.black, 0.1),\n    },\n}));\n\n/**\n * Header of the Marketplace Assistant Chatbot\n *\n * @param {*} props properties\n * @returns {JSX} renders header view\n */\nfunction Header(props) {\n    const {\n        toggleChatbot, toggleFullScreen, isClicked, handleReset,\n    } = props;\n    const intl = useIntl();\n    return (\n        <Root>\n            <Box\n                display='flex'\n                flexDirection='row'\n                justifyContent='space-between'\n                borderBottom={1}\n                className={classes.mainHeader}\n            >\n                <Box>\n                    <IconButton\n                        onClick={toggleFullScreen}\n                        style={{\n                            alignSelf: 'flex-end', padding: '12px', color: '#10597f', margin: '6px 2px',\n                        }}\n                    >\n                        {isClicked ? (\n                            <FullscreenExitIcon fontSize='large' />\n                        ) : (\n                            <FullscreenIcon fontSize='large' />\n                        )}\n                    </IconButton>\n                    <Tooltip\n                        title={\n                            intl.formatMessage({\n                                id: 'Apis.Chat.Header.reset.chat.btn.tooltip',\n                                defaultMessage: 'Reset Chat',\n                            })\n                        }\n                        placement='right'\n                    >\n                        <IconButton\n                            onClick={handleReset}\n                            style={{\n                                alignSelf: 'flex-end', padding: '12px', color: '#10597f', margin: '6px 0',\n                            }}\n                        >\n                            <RestartAltTwoToneIcon fontSize='large' />\n                        </IconButton>\n                    </Tooltip>\n                </Box>\n                <Box display='flex' flexDirection='column' className={classes.chatbotNameBox}>\n                    <Typography variant='body1' className={classes.chatbotName}>\n                        <FormattedMessage\n                            id='Apis.Chat.Header.MarketplaceAssistantBanner.title'\n                            defaultMessage='API Marketplace Assistant'\n                        />\n                    </Typography>\n                    <Typography variant='caption' sx={{ textAlign: 'right', marginRight: -1 }}>\n                        <FormattedMessage\n                            id='Apis.Chat.Header.MarketplaceAssistantBanner.experimental'\n                            defaultMessage='Experimental'\n                        />\n                    </Typography>\n                </Box>\n                <Box>\n                    <IconButton\n                        onClick={toggleChatbot}\n                        style={{\n                            alignSelf: 'flex-end', padding: '12px', color: '#10597f', margin: '6px 2px',\n                        }}\n                    >\n                        <ExpandMoreTwoToneIcon fontSize='large' />\n                    </IconButton>\n                </Box>\n            </Box>\n        </Root>\n    );\n}\nHeader.propTypes = {\n    toggleChatbot: PropTypes.func.isRequired,\n    toggleFullScreen: PropTypes.func.isRequired,\n    isClicked: PropTypes.bool.isRequired,\n    handleReset: PropTypes.func.isRequired,\n};\nexport default Header;\n","const predefinedAnswers = {\n    hi: 'Hello there!, How can I assist you today?',\n    hiii: 'Hello there!, How can I assist you today?',\n    hello: 'Hi! How can I assist you today?',\n    hey: 'Hey! How can I help you?',\n    greetings: 'Greetings! What can I assist you with?',\n    thanks: 'You\\'re welcome!',\n    bye: 'Goodbye! Have a great day!',\n    goodbye: 'Goodbye! Have a great day!',\n    'thank you': 'You\\'re welcome!',\n    'thank you for your help': 'You\\'re welcome!',\n    'good morning': 'Good morning! How can I assist you today?',\n    'good afternoon': 'Good afternoon! What can I do for you?',\n    'good evening': 'Good evening! How can I help?',\n    'hey there': 'Hey! What can I assist you with?',\n    'hi there': 'Hello! How may I assist you?',\n    'hello there': 'Hello! How can I assist you today?',\n    'how are you': 'I\\'m doing well, thank you! How can I help you?',\n    'can you help me': 'You can ask me anything related to APIs!',\n    'what can I ask you': 'You can ask me anything related to APIs!',\n    'what can you do': 'I can help you with finding APIs and providing information related to APIs.',\n    'what do you do': 'I can help you with finding APIs and providing information related to APIs.',\n    'what do you know': 'I know a lot about APIs! What are you looking for?',\n    'what are you': 'I am the Marketplace Assistant. I can help you with finding APIs and providing information related to APIs.',\n    'who are you': 'I am the Marketplace Assistant. I can help you with finding APIs and providing information related to APIs.',\n    'what is your name': 'I am the Marketplace Assistant. I can help you with finding APIs and providing information related to APIs.',\n};\n\nconst calculateStringSimilarity = (string1, string2) => {\n    const str1 = string1.toLowerCase();\n    const str2 = string2.toLowerCase();\n\n    if (str1.length < 2 || str2.length < 2) return 0;\n\n    const subsequenceMap = new Map();\n    for (let i = 0; i < str1.length - 1; i++) {\n        const subsequence = str1.substr(i, 2);\n        subsequenceMap.set(subsequence, subsequenceMap.has(subsequence) ? subsequenceMap.get(subsequence) + 1 : 1);\n    }\n\n    let matchCount = 0;\n    for (let j = 0; j < str2.length - 1; j++) {\n        const subsequence = str2.substr(j, 2);\n        const count = subsequenceMap.has(subsequence) ? subsequenceMap.get(subsequence) : 0;\n        if (count > 0) {\n            subsequenceMap.set(subsequence, count - 1);\n            matchCount++;\n        }\n    }\n\n    return (matchCount * 2) / (str1.length + str2.length - 2);\n};\n\nconst findBestMatchingAnswer = (inputString) => {\n    let bestMatch = null;\n    let bestScore = -1;\n\n    const searchString = inputString.toLowerCase();\n\n    if (searchString.length < 2) return null;\n\n    for (const [key] of Object.entries(predefinedAnswers)) {\n        const comparisonString = key.toLowerCase();\n\n        const score = calculateStringSimilarity(searchString, comparisonString);\n\n        if (score > bestScore) {\n            bestScore = score;\n            bestMatch = key;\n        }\n    }\n\n    if (bestScore < 0.8) return null;\n\n    return predefinedAnswers[bestMatch];\n};\n\nexport default findBestMatchingAnswer;\n","/*\n * Copyright (c) 2024, WSO2 LLC. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Api from 'AppData/api';\nimport { useSettingsContext } from 'AppComponents/Shared/SettingsContext';\nimport {\n    Container, Box,\n} from '@mui/material';\nimport Alert from '@mui/material/Alert';\nimport { ResizableBox } from 'react-resizable';\nimport 'react-resizable/css/styles.css';\nimport ChatMessages from './ChatMessages';\nimport Header from './Header';\nimport findBestMatchingAnswer from './SimilaritySearch';\n\n/**\n * Renders Chat Messages view..\n * @param {JSON} props Parent pros.\n * @returns {JSX} renders Chat Window view.\n */\nfunction ChatWindow(props) {\n    const {\n        toggleChatbot, toggleClearChatbot, messages, setMessages, introMessage, user, loading, responseRef, apiCall,\n    } = props;\n\n    const [isClicked, setIsClicked] = useState(false);\n    const [apiLimitExceeded, setApiLimitExceeded] = useState(false);\n    const [apisCount, setApisCount] = useState(null);\n    const [limit, setLimit] = useState(null);\n\n    const { settings: { marketplaceAssistantEnabled, aiAuthTokenProvided } } = useSettingsContext();\n\n    const [, setWindowSize] = useState({\n        width: window.innerWidth,\n        height: window.innerHeight,\n    });\n\n    const toggleFullScreen = (e) => {\n        e.preventDefault();\n        setIsClicked(!isClicked);\n    };\n\n    const handleClear = () => {\n        setMessages([introMessage]);\n        toggleClearChatbot();\n    };\n\n    const handleSend = async (message) => {\n        responseRef.current = [...responseRef.current, { role: user, content: message.content.trim() }];\n        setMessages(responseRef.current);\n\n        const query = message.content.trim().toLowerCase();\n\n        const response = findBestMatchingAnswer(query);\n        if (response) {\n            responseRef.current = [...responseRef.current, { role: 'assistant', content: response.trim() }];\n            setMessages(responseRef.current);\n        } else {\n            apiCall(message.content);\n        }\n    };\n\n    const handleReset = () => {\n        responseRef.current = [introMessage];\n        setMessages([introMessage]);\n    };\n\n    useEffect(() => {\n        responseRef.current = messages;\n\n        if (marketplaceAssistantEnabled && aiAuthTokenProvided) {\n            const restApi = new Api();\n            restApi\n                .getMarketplaceAssistantApiCount()\n                .then((data) => {\n                    const apiCount = data.body.count;\n                    const apiLimit = data.body.limit;\n                    setApisCount(apiCount);\n                    setLimit(apiLimit);\n                    if (apiCount >= apiLimit - 50) {\n                        setApiLimitExceeded(true);\n                    }\n                })\n                .catch((error) => {\n                    console.error(error);\n                });\n        }\n    }, []);\n\n    useEffect(() => {\n        const handleResize = () => {\n            setWindowSize({\n                width: window.innerWidth,\n                height: window.innerHeight,\n            });\n        };\n\n        window.addEventListener('resize', handleResize);\n\n        return () => {\n            window.removeEventListener('resize', handleResize);\n        };\n    }, []);\n\n    return (\n\n        <ResizableBox\n            width={isClicked ? window.innerWidth : 500}\n            height={window.innerHeight - 64}\n            minConstraints={[500, window.innerHeight]}\n            maxConstraints={[window.innerWidth, window.innerHeight - 64]}\n            resizeHandles={['w']}\n            style={{\n                position: 'fixed',\n                bottom: 1,\n                right: 0,\n                display: 'flex',\n                justifyContent: 'flex-start',\n                flexDirection: 'row-reverse',\n                zIndex: 1200,\n            }}\n            handle={(\n                <span\n                    style={{\n                        width: '4px',\n                        cursor: 'ew-resize',\n                        minWidth: '4px',\n                    }}\n                />\n            )}\n        >\n            <Container\n                maxWidth={false}\n                style={{\n                    padding: 0,\n                    backgroundColor: '#fff',\n                    border: '0px solid #808e96',\n                    boxShadow: '0 4px 8px rgba(0,0,0,0.3)',\n                    borderRadius: '4px',\n                    margin: '4px 4px 4px 0',\n                }}\n            >\n                <Box\n                    display='flex'\n                    flexDirection='column'\n                    style={{\n                        height: '100%',\n                    }}\n                >\n                    <Header\n                        toggleChatbot={toggleChatbot}\n                        toggleFullScreen={toggleFullScreen}\n                        handleClear={handleClear}\n                        handleReset={handleReset}\n                        isClicked={isClicked}\n                    />\n                    {/* Alert to show API count info */}\n                    {marketplaceAssistantEnabled && aiAuthTokenProvided && apiLimitExceeded && (\n                        (apisCount >= limit) ? (\n                            <Alert severity='error' style={{ borderRadius: '0px', zIndex: 2999, padding: '0 10px 0 10px' }}>\n                                {`You are reached your maximum limit (${limit} apis) for API usage.`}\n                            </Alert>\n                        ) : (\n                            <Alert severity='warning' style={{ borderRadius: '0px', zIndex: 2999, padding: '0 10px 0 10px' }}>\n                                {`You are approaching your maximum limit for API usage. You can utilize up to ${limit} APIs.\n                                    Currently, you have utilized ${apisCount} APIs.`}\n                            </Alert>\n                        )\n                    )}\n\n                    <Box\n                        flexGrow={1}\n                        display='flex'\n                        overflow='auto'\n                        flexDirection='column'\n                        justifyContent='flex-end'\n                    >\n                        <ChatMessages\n                            messages={messages}\n                            loading={loading}\n                            onSend={handleSend}\n                            onReset={handleReset}\n                            user={user}\n                        />\n                    </Box>\n                </Box>\n            </Container>\n        </ResizableBox>\n    );\n}\n\nChatWindow.propTypes = {\n    toggleChatbot: PropTypes.func.isRequired,\n    toggleClearChatbot: PropTypes.func.isRequired,\n    messages: PropTypes.instanceOf(Array).isRequired,\n    setMessages: PropTypes.func.isRequired,\n    introMessage: PropTypes.shape({\n        role: PropTypes.string.isRequired,\n        content: PropTypes.string.isRequired,\n    }).isRequired,\n    user: PropTypes.string.isRequired,\n    loading: PropTypes.bool.isRequired,\n    responseRef: PropTypes.shape({\n        current: PropTypes.arrayOf(PropTypes.shape({\n            role: PropTypes.string.isRequired,\n            content: PropTypes.string.isRequired,\n        })).isRequired,\n    }).isRequired,\n    apiCall: PropTypes.func.isRequired,\n};\nexport default ChatWindow;\n","/*\n * Copyright (c) 2024, WSO2 LLC. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport { Box } from '@mui/material';\nimport { useSettingsContext } from 'AppComponents/Shared/SettingsContext';\nimport Api from 'AppData/api';\nimport Utils from 'AppData/Utils';\nimport ChatBotIcon from './ChatIcon';\nimport ChatWindow from './ChatWindow';\n\n/**\n * Renders AI Search Assistant view.\n *\n * @returns {JSX} renders Chat Icon view.\n */\nfunction AISearchAssistant() {\n    const { settings: { marketplaceAssistantEnabled, aiAuthTokenProvided } } = useSettingsContext();\n\n    const [showChatbot, setShowChatbot] = useState(true);\n    const [loading, setLoading] = useState(false);\n    const [messages, setMessages] = useState(null);\n    const [chatbotDisabled, setChatbotDisabled] = useState(!marketplaceAssistantEnabled);\n    const [user, setUser] = useState('Anonymous User');\n    const responseRef = useRef([]);\n\n    const introMessage = {\n        role: 'assistant',\n        content: 'Hello! I\\'m here to assist you in discovering and obtaining information about APIs.'\n        + ' How can I help you?',\n    };\n\n    const pathName = window.location.pathname;\n    const { search, origin } = window.location;\n\n    const apiCall = (query) => {\n        setLoading(true);\n\n        if (marketplaceAssistantEnabled && aiAuthTokenProvided) {\n            const restApi = new Api();\n            const messagePayload = messages.slice(-10).map(({ apis, ...message }) => {\n                if (!apis) {\n                    return { role: message.role === 'assistant' ? 'assistant' : 'user', content: message.content };\n                }\n                const apiList = apis.map((api) => ({ apiName: api.name, version: api.version }));\n                return {\n                    role: message.role === 'assistant' ? 'assistant' : 'user',\n                    content: JSON.stringify({ response: message.content, apis: apiList }),\n                };\n            });\n\n            restApi.marketplaceAssistantExecute(query, messagePayload)\n                .then((result) => {\n                    const { apis } = result.body;\n\n                    const apiPaths = apis.map((api) => {\n                        return { apiPath: `${origin}${pathName}/${api.apiId}/overview${search}`, name: api.apiName, version: api.version };\n                    });\n                    responseRef.current = [...responseRef.current, { role: 'assistant', content: result.body.response, apis: apiPaths }];\n                    setMessages(responseRef.current);\n                    return result.body;\n                }).catch((error) => {\n                    let content;\n                    try {\n                        switch (error.response.status) {\n                            case 401: // Unauthorized\n                                content = 'Apologies for the inconvenience. It appears that your token is invalid or expired. Please'\n                                + ' provide a valid token or upgrade your subscription plan.';\n                                break;\n                            case 429: // Token limit exceeded\n                                content = 'Apologies for the inconvenience. It appears that the token limit has been exceeded.';\n                                break;\n                            default:\n                                content = 'Apologies for the inconvenience. It seems that something went wrong with the'\n                                + ' Marketplace Assistant. Please try again later.';\n                                break;\n                        }\n                    } catch (err) {\n                        content = 'Apologies for the inconvenience. It seems that something went wrong with the'\n                        + ' Marketplace Assistant. Please try again later.';\n                    }\n\n                    const errorMessage = { role: 'assistant', content };\n                    responseRef.current = [...responseRef.current, errorMessage];\n                    setMessages(responseRef.current);\n\n                    throw error;\n                }).finally(() => {\n                    setLoading(false);\n                });\n        }\n    };\n\n    const toggleChatbot = () => {\n        setShowChatbot(!showChatbot);\n    };\n\n    const handleDisableChatbot = () => {\n        setChatbotDisabled(true);\n        setMessages([introMessage]);\n    };\n\n    useEffect(() => {\n        if (messages) {\n            const messagesJSON = JSON.stringify({ messages, timestamp: Date.now() });\n            localStorage.setItem('messages', messagesJSON);\n        }\n    }, [messages]);\n\n    useEffect(() => {\n        try {\n            const loggedInUser = Utils.getUser();\n            if (loggedInUser) {\n                setUser(loggedInUser);\n            }\n            const storedData = localStorage.getItem('messages');\n            if (storedData) {\n                const { messages: storedMessages, timestamp } = JSON.parse(storedData);\n                if (storedMessages.length > 1) {\n                    if (storedMessages[storedMessages.length - 2].role !== 'Anonymous User') {\n                        if (Date.now() - timestamp > 60 * 60 * 1000) {\n                            setMessages([introMessage]);\n                            localStorage.setItem('messages',\n                                JSON.stringify({ messages: [introMessage], timestamp: Date.now() }));\n                        } else {\n                            setMessages(storedMessages);\n                        }\n                    } else if (Date.now() - timestamp > 15 * 60 * 1000) {\n                        setMessages([introMessage]);\n                        localStorage.setItem('messages',\n                            JSON.stringify({ messages: [introMessage], timestamp: Date.now() }));\n                    } else {\n                        setMessages(storedMessages);\n                    }\n                } else {\n                    setMessages(storedMessages);\n                }\n            } else {\n                setMessages([introMessage]);\n                localStorage.setItem('messages', JSON.stringify({ messages: [introMessage], timestamp: Date.now() }));\n            }\n        } catch (error) {\n            console.error('Error loading messages from localStorage:', error);\n        }\n    }, []);\n\n    return (\n        <Box>\n            {!chatbotDisabled && (\n                showChatbot ? (\n                    <Box position='absolute' bottom={24} right={24}>\n                        <ChatBotIcon\n                            toggleChatbot={toggleChatbot}\n                            handleDisableChatbot={handleDisableChatbot}\n                            chatbotDisabled={chatbotDisabled}\n                        />\n                    </Box>\n                ) : (\n                    <ChatWindow\n                        toggleChatbot={toggleChatbot}\n                        messages={messages}\n                        setMessages={setMessages}\n                        introMessage={introMessage}\n                        user={user}\n                        loading={loading}\n                        responseRef={responseRef}\n                        apiCall={apiCall}\n                    />\n                )\n            )}\n        </Box>\n    );\n}\n\nexport default AISearchAssistant;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport CommonListing from './Listing/CommonListing';\nimport TagCloudListing from './Listing/TagCloudListing';\nimport Details from './Details/index';\nimport { ResourceNotFound } from '../Base/Errors';\nimport AISearchAssistant from './Chat/AISearchAssistant';\n/**\n * Default API Store overview page\n *\n * @returns {React.Component}\n */\nfunction Apis() {\n    return (\n        <Switch>\n            <Route\n                exact\n                path='/api-groups'\n                render={(props) => (\n                    <TagCloudListing {...props} />)}\n            />\n            <Route\n                exact\n                path='/apis'\n                render={(props) => (\n                    <>\n                        <CommonListing {...props} />\n                        <AISearchAssistant />\n                    </>\n                )}\n            />\n            <Route\n                path='/apis/search'\n                render={(props) => (\n                    <CommonListing {...props} />)}\n            />\n            <Route\n                path='/apis/:apiUuid/'\n                render={(props) => (\n                    <Details {...props} />)}\n            />\n            <Route component={ResourceNotFound} />\n        </Switch>\n    );\n}\n\nexport default Apis;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { styled } from '@mui/material/styles';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Grid from '@mui/material/Grid';\nimport ListItemText from '@mui/material/ListItemText';\nimport InputLabel from '@mui/material/InputLabel';\nimport Typography from '@mui/material/Typography';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport PropTypes from 'prop-types';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\n\nconst PREFIX = 'SubscribeToApi';\n\nconst classes = {\n    titleBar: `${PREFIX}-titleBar`,\n    buttonLeft: `${PREFIX}-buttonLeft`,\n    buttonRight: `${PREFIX}-buttonRight`,\n    title: `${PREFIX}-title`,\n    buttonsWrapper: `${PREFIX}-buttonsWrapper`,\n    legend: `${PREFIX}-legend`,\n    inputText: `${PREFIX}-inputText`,\n    buttonRightLink: `${PREFIX}-buttonRightLink`,\n    FormControl: `${PREFIX}-FormControl`,\n    fullWidth: `${PREFIX}-fullWidth`,\n    FormControlOdd: `${PREFIX}-FormControlOdd`,\n    quotaHelp: `${PREFIX}-quotaHelp`,\n    subscribeRoot: `${PREFIX}-subscribeRoot`,\n    subscribeRootSmall: `${PREFIX}-subscribeRootSmall`,\n    smallDisplay: `${PREFIX}-smallDisplay`,\n    smallDisplayFix: `${PREFIX}-smallDisplayFix`,\n    selectMenuRoot: `${PREFIX}-selectMenuRoot`,\n    appDropDown: `${PREFIX}-appDropDown`\n};\n\nconst StyledGrid = styled(Grid)((\n    {\n        theme\n    }\n) => ({\n    [`& .${classes.titleBar}`]: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        borderBottomWidth: '1px',\n        borderBottomStyle: 'solid',\n        borderColor: theme.palette.text.secondary,\n        marginBottom: 20,\n    },\n\n    [`& .${classes.buttonLeft}`]: {\n        alignSelf: 'flex-start',\n        display: 'flex',\n    },\n\n    [`& .${classes.buttonRight}`]: {\n        alignSelf: 'flex-end',\n        display: 'flex',\n        marginLeft: 20,\n    },\n\n    [`& .${classes.title}`]: {\n        display: 'inline-block',\n        marginLeft: 20,\n    },\n\n    [`& .${classes.buttonsWrapper}`]: {\n        marginTop: 40,\n    },\n\n    [`& .${classes.legend}`]: {\n        marginBottom: 0,\n        borderBottomStyle: 'none',\n        marginTop: 20,\n        fontSize: 12,\n    },\n\n    [`& .${classes.inputText}`]: {\n        marginTop: 20,\n    },\n\n    [`& .${classes.buttonRightLink}`]: {\n        textDecoration: 'none',\n    },\n\n    [`& .${classes.FormControl}`]: {\n        padding: theme.spacing(2),\n        width: '100%',\n    },\n\n    [`& .${classes.fullWidth}`]: {\n        '& .MuiFormControl-root':{\n            width: '100%',\n        }\n    },\n\n    [`& .${classes.FormControlOdd}`]: {\n        backgroundColor: theme.palette.background.paper,\n    },\n\n    [`& .${classes.quotaHelp}`]: {\n        position: 'relative',\n    },\n\n    [`&.${classes.subscribeRoot}`]: {\n        paddingLeft: theme.spacing(2),\n    },\n\n    [`&.${classes.subscribeRootSmall}`]: {\n        marginLeft: theme.spacing(-4),\n    },\n\n    [`& .${classes.smallDisplay}`]: {\n        width: 240,\n        '& .MuiInput-formControl': {\n            marginTop: 0,\n        },\n    },\n\n    [`& .${classes.smallDisplayFix}`]: {\n        '& .MuiSelect-selectMenu': {\n            padding: 0,\n        },\n    },\n\n    [`& .${classes.selectMenuRoot}`]: {\n        margin: 0,\n        padding: 0,\n    },\n\n    [`& .${classes.appDropDown}`]: {\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n        '&:hover': {\n            backgroundColor: 'unset',\n        },\n    }\n}));\n\nconst subscribeToApi = (props) => {\n    const [appSelected, setAppSelected] = useState('');\n    const [policySelected, setPolicySelected] = useState({tierName:''});\n    const [applicationsList, setApplicationsList] = useState([]);\n    const {\n        throttlingPolicyList,\n        applicationsAvailable,\n        subscriptionRequest,\n        updateSubscriptionRequest,\n        renderSmall,\n    } = props;\n\n    useEffect(() => {\n        if (throttlingPolicyList && throttlingPolicyList[0]) {\n            setPolicySelected(throttlingPolicyList[0]);\n        }\n    }, [throttlingPolicyList]);\n\n    useEffect(() => {\n        if (applicationsAvailable && applicationsAvailable[0]) {\n            setApplicationsList(applicationsAvailable);\n            setAppSelected(applicationsAvailable[0]);\n            const newRequest = { ...subscriptionRequest };\n            newRequest.applicationId = applicationsAvailable[0].value;\n        }\n    }, [applicationsAvailable]);\n\n    /**\n     * This method is used to handle the updating of subscription\n     * request object and selected fields.\n     * @param {*} field field that should be updated in subscription request\n     * @param {*} event event fired\n     */\n    const handleChange = (field, event,value = null) => {\n        const newRequest = { ...subscriptionRequest };\n        const { target } = event;\n        switch (field) {\n            case 'application':\n                newRequest.applicationId = value.value;\n                setAppSelected(value);\n                break;\n            case 'throttlingPolicy':\n                newRequest.throttlingPolicy = value.tierName;\n                setPolicySelected(value);\n                break;\n            default:\n                break;\n        }\n        updateSubscriptionRequest(newRequest);\n    };\n\n    return (\n        <StyledGrid container className={classNames(classes.subscribeRoot, { [classes.subscribeRootSmall]: renderSmall })}>\n            <Grid item xs={12} md={renderSmall ? 12 : 6}>\n                {appSelected && (\n                    <FormControl\n                        variant=\"standard\"\n                        className={classNames(classes.FormControl, { [classes.smallDisplay]: renderSmall })}>\n                        <InputLabel shrink for='application-subscribe' className={classes.quotaHelp}>\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.SubscribeToApi.application'\n                                defaultMessage='Application'\n                            />\n                        </InputLabel>\n                        <Autocomplete\n                           id=\"application-subscribe\"\n                           aria-describedby='application-helper-text'\n                           options={applicationsList}\n                           disableClearable\n                           value={(applicationsList.length !== 0 && appSelected === '') ?\n                                applicationsList[0] : appSelected}\n                           onChange={(e, value) => handleChange('application', e, value)}\n                           getOptionLabel={(option) => option.label}\n                           classes={{root:classes.fullWidth}}\n                           renderInput={(params) => <TextField variant=\"standard\" {...params} />}\n                         />\n                        <FormHelperText id='application-helper-text'>\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.SubscribeToApi.select.an.application.to.subscribe'\n                                defaultMessage='Select an Application to subscribe'\n                            />\n                        </FormHelperText>\n                    </FormControl>\n                )}\n                {throttlingPolicyList && (\n                    <FormControl\n                        variant=\"standard\"\n                        className={classNames(classes.FormControl, classes.smallDisplayFix, {\n                            [classes.smallDisplay]: renderSmall,\n                            [classes.FormControlOdd]: !renderSmall,\n                        })}\n                    >\n                        <InputLabel shrink htmlFor='policy-label-placeholder' className={classes.quotaHelp}>\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.SubscribeToApi.business.plan'\n                                defaultMessage='Business Plan'\n                            />\n                        </InputLabel>\n                        <Autocomplete\n                            id='application-policy'\n                            aria-describedby='policies-helper-text'\n                            options={throttlingPolicyList}\n                            disableClearable\n                            value={policySelected}\n                            getOptionLabel={(option) => option.tierName}\n                            getOptionSelected={(option, value) => option.tierName === value.tierName}\n                            onChange={(e, value) => handleChange('throttlingPolicy', e, value)}\n                            classes={{ root: classes.fullWidth }}\n                            renderInput={(params) => <TextField variant=\"standard\" {...params} />}\n                            groupBy={(option) => option.tierPlan === 'COMMERCIAL'  ? 'Commercial' : 'Free'}\n                            renderOption={(props, policy) => (\n                                <MenuItem {...props} value={policy.tierName} key={policy.tierName} className={classes.appDropDown}>\n                                    {policy.tierPlan === 'COMMERCIAL' ? (\n                                        <React.Fragment>\n                                            <ListItemText\n                                                classes={{ root: classes.selectMenuRoot }}\n                                                primary={policy.tierName}\n                                                secondary={\n                                                    policy.monetizationAttributes.pricePerRequest ? (\n                                                        <Typography>\n                                                            {policy.monetizationAttributes.pricePerRequest}{' '}\n                                                            {policy.monetizationAttributes.currencyType}\n                                                            {' per Request'}\n                                                        </Typography>\n                                                    ) : (\n                                                        <Typography>\n                                                            {policy.monetizationAttributes.fixedPrice}{' '}\n                                                            {policy.monetizationAttributes.currencyType}\n                                                            {' per '}\n                                                            {policy.monetizationAttributes.billingCycle}\n                                                        </Typography>\n                                                    )\n                                                }\n                                            />\n                                        </React.Fragment>\n                                    ) : (\n                                        <ListItemText primary={policy.tierName} />\n                                    )}\n                                </MenuItem>\n                            )}\n                        />\n                    </FormControl>\n                )}\n            </Grid>\n        </StyledGrid>\n    );\n};\nsubscribeToApi.propTypes = {\n    classes: PropTypes.shape({\n        FormControl: PropTypes.string,\n        quotaHelp: PropTypes.string,\n        selectEmpty: PropTypes.string,\n        FormControlOdd: PropTypes.string,\n        subscribeRoot: PropTypes.string,\n        subscribeRootSmall: PropTypes.string,\n        smallDisplayFix: PropTypes.string,\n        selectMenuRoot: PropTypes.string,\n        smallDisplay: PropTypes.string,\n    }).isRequired,\n    applicationsAvailable: PropTypes.arrayOf(PropTypes.shape({\n        value: PropTypes.string,\n        label: PropTypes.string,\n    })).isRequired,\n    throttlingPolicyList: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n    subscriptionRequest: PropTypes.shape({}).isRequired,\n    updateSubscriptionRequest: PropTypes.func.isRequired,\n    renderSmall: PropTypes.bool,\n};\nsubscribeToApi.defaultProps = {\n    renderSmall: false,\n};\n\nexport default (subscribeToApi);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Typography from '@mui/material/Typography';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport Icon from '@mui/material/Icon';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { app } from 'Settings';\nimport { useTheme } from '@mui/material';\n\nconst PREFIX = 'ApiTagThumb';\n\nconst classes = {\n    thumbContent: `${PREFIX}-thumbContent`,\n    thumbLeft: `${PREFIX}-thumbLeft`,\n    thumbRight: `${PREFIX}-thumbRight`,\n    thumbInfo: `${PREFIX}-thumbInfo`,\n    thumbHeader: `${PREFIX}-thumbHeader`,\n    contextBox: `${PREFIX}-contextBox`,\n    thumbWrapper: `${PREFIX}-thumbWrapper`,\n    deleteIcon: `${PREFIX}-deleteIcon`,\n    textWrapper: `${PREFIX}-textWrapper`,\n    image: `${PREFIX}-image`,\n    imageWrapper: `${PREFIX}-imageWrapper`,\n    imageOverlap: `${PREFIX}-imageOverlap`,\n};\n\nconst Root = styled('div')((\n    {\n        theme,\n    },\n) => ({\n    [`& .${classes.thumbContent}`]: {\n        width: theme.custom.tagWise.thumbnail.width - theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(1),\n    },\n\n    [`& .${classes.thumbLeft}`]: {\n        alignSelf: 'flex-start',\n        flex: 1,\n    },\n\n    [`& .${classes.thumbRight}`]: {\n        alignSelf: 'flex-end',\n    },\n\n    [`& .${classes.thumbInfo}`]: {\n        display: 'flex',\n    },\n\n    [`& .${classes.thumbHeader}`]: {\n        width: theme.custom.tagWise.thumbnail.width - theme.spacing(1),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        justifyContent: 'center',\n        margin: 0,\n    },\n\n    [`& .${classes.contextBox}`]: {\n        // eslint-disable-next-line radix\n        width: parseInt(150 - theme.spacing(0.5)),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        display: 'inline-block',\n        lineHeight: '1em',\n    },\n\n    [`&.${classes.thumbWrapper}`]: {\n        position: 'relative',\n        paddingTop: 20,\n        marginRight: theme.spacing(2),\n    },\n\n    [`& .${classes.deleteIcon}`]: {\n        fill: 'red',\n    },\n\n    [`& .${classes.textWrapper}`]: {\n        color: theme.custom.tagCloud.leftMenu.color,\n        '& .material-icons': {\n            color: theme.custom.tagCloud.leftMenu.color,\n        },\n    },\n\n    [`& .${classes.image}`]: {\n        width: theme.custom.tagWise.thumbnail.width,\n    },\n\n    [`& .${classes.imageWrapper}`]: {\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.background.paper,\n        width: theme.custom.tagWise.thumbnail.width + theme.spacing(1),\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n\n    [`& .${classes.imageOverlap}`]: {\n        position: 'absolute',\n        bottom: 1,\n        backgroundColor: theme.custom.thumbnail.contentBackgroundColor,\n    },\n}));\n\n/**\n * Get ApiTagThumb\n * @param {*} props properties\n * @returns {*}\n */\nfunction ApiTagThumb(props) {\n    const {\n        tag, path, style, mainPage,\n    } = props;\n    const theme = useTheme();\n    const tagLink = path + ':' + tag.value;\n    const {\n        tagWise: {\n            thumbnail: { image },\n        },\n    } = theme.custom;\n    const name = tag.value.split(theme.custom.tagWise.key)[0];\n    if (style === 'fixed-left' || !mainPage) {\n        return (\n            <Link to={tagLink} className={classes.textWrapper}>\n                <ListItem button>\n                    <ListItemIcon>\n                        <Icon>label</Icon>\n                    </ListItemIcon>\n                    <ListItemText primary={name} />\n                </ListItem>\n            </Link>\n        );\n    }\n\n    return (\n        <Root className={classes.thumbWrapper}>\n            <Link to={tagLink} className={classes.imageWrapper}>\n                <img src={app.context + image} className={classes.image} alt='' />\n            </Link>\n            <center>\n                <div className={classNames(classes.thumbContent)}>\n                    <Link to={tagLink} className={classes.textWrapper}>\n                        <Typography className={classes.thumbHeader} variant='h4' gutterBottom title={name}>\n                            {name}\n                        </Typography>\n                    </Link>\n                </div>\n            </center>\n        </Root>\n    );\n}\n\nApiTagThumb.propTypes = {\n    classes: PropTypes.shape({\n        thumbWrapper: PropTypes.shape({}).isRequired,\n        imageWrapper: PropTypes.shape({}).isRequired,\n        thumbContent: PropTypes.shape({}).isRequired,\n        imageOverlap: PropTypes.shape({}).isRequired,\n        textWrapper: PropTypes.shape({}).isRequired,\n        thumbHeader: PropTypes.shape({}).isRequired,\n        image: PropTypes.shape({}).isRequired,\n    }).isRequired,\n    theme: PropTypes.shape({\n        custom: PropTypes.shape({\n            tagWise: PropTypes.shape({}).isRequired,\n        }).isRequired,\n    }).isRequired,\n    tag: PropTypes.shape({\n        value: PropTypes.shape({\n            split: PropTypes.func,\n        }).isRequired,\n    }).isRequired,\n    path: PropTypes.shape({}).isRequired,\n    style: PropTypes.string.isRequired,\n};\n\nexport default (ApiTagThumb);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled, useTheme } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Typography from '@mui/material/Typography';\nimport List from '@mui/material/List';\nimport Divider from '@mui/material/Divider';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport Icon from '@mui/material/Icon';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\nimport ApiTagThumb from './ApiTagThumb';\n\nconst PREFIX = 'TagCloudListingTags';\n\nconst classes = {\n    mainTitle: `${PREFIX}-mainTitle`,\n    mainTitleWrapper: `${PREFIX}-mainTitleWrapper`,\n    listContentWrapper: `${PREFIX}-listContentWrapper`,\n    textWrapper: `${PREFIX}-textWrapper`,\n    linkTextWrapper: `${PREFIX}-linkTextWrapper`,\n    tagWiseThumbWrapper: `${PREFIX}-tagWiseThumbWrapper`,\n    filterTitle: `${PREFIX}-filterTitle`,\n    mainPageList: `${PREFIX}-mainPageList`,\n    mainPageAllApis: `${PREFIX}-mainPageAllApis`,\n};\n\n// TODO jss-to-styled codemod: The Fragment root was replaced by div. Change the tag if needed.\nconst Root = styled('div')((\n    {\n        theme,\n    },\n) => ({\n    [`& .${classes.mainTitle}`]: {\n        paddingTop: 10,\n    },\n\n    [`& .${classes.mainTitleWrapper}`]: {\n        flexGrow: 1,\n    },\n\n    [`& .${classes.listContentWrapper}`]: {\n        padding: `0 ${theme.spacing(3)}`,\n    },\n\n    [`& .${classes.textWrapper}`]: {\n        color: theme.custom.tagCloud.leftMenu.color,\n        '& .material-icons': {\n            color: theme.custom.tagCloud.leftMenu.color,\n        },\n    },\n\n    [`& .${classes.linkTextWrapper}`]: {\n        color: theme.palette.primary.main,\n    },\n\n    [`& .${classes.tagWiseThumbWrapper}`]: {\n        display: 'flex',\n    },\n\n    [`& .${classes.filterTitle}`]: {\n        fontWeight: 200,\n        paddingLeft: theme.spacing(2),\n        background: theme.custom.tagCloud.leftMenu.titleBackground,\n        color: theme.palette.getContrastText(theme.custom.tagCloud.leftMenu.titleBackground),\n        height: theme.custom.infoBar.height,\n        alignItems: 'center',\n        display: 'flex',\n    },\n\n    [`& .${classes.mainPageList}`]: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n\n    [`& .${classes.mainPageAllApis}`]: {\n        width: '100%',\n    },\n}));\n\n/**\n * Tag cloud listing tags\n * @param {JSON} props properties passed from parent.\n * @returns {void}\n */\nfunction TagCloudListingTags(props) {\n    const theme = useTheme();\n    const {\n        custom: {\n            tagWise: {\n                key, active, style, showAllApis,\n            },\n        },\n    } = theme;\n\n    const tagWiseURL = '/apis?offset=0&query=tag';\n    const { allTags, mainPage } = props;\n    let apisTagCloudGroup = null;\n\n    if (allTags.count !== 0) {\n        if (allTags !== null) {\n            apisTagCloudGroup = allTags.filter((item) => active === true && item.value.split(key).length > 1);\n        }\n        if (apisTagCloudGroup && apisTagCloudGroup.length > 0) {\n            // const tagLink = tagWiseURL + ':' + apisTagCloudGroup[0].value;\n            // if (style === 'fixed-left') history.push(tagLink);\n        }\n    }\n\n    /**\n     *\n     * @inheritdoctheme\n     * @returns {React.Component} @inheritdoc\n     * @memberof TagCloudListing\n     */\n    return apisTagCloudGroup && apisTagCloudGroup.length > 0 ? (\n        <Root>\n            {!mainPage && (\n                <Typography variant='h6' gutterBottom className={classNames(classes.filterTitle, 'api-listing-tags-title')}>\n                    <FormattedMessage defaultMessage='API Groups' id='Apis.Listing.TagCloudListingTags.title' />\n                </Typography>\n            )}\n            <List component='nav' aria-label='main mailbox folders' className={classNames({ [classes.mainPageList]: mainPage })}>\n                {Object.keys(apisTagCloudGroup).map((keyInner) => {\n                    return (\n                        <ApiTagThumb\n                            key={keyInner}\n                            tag={apisTagCloudGroup[keyInner]}\n                            path={tagWiseURL}\n                            style={style}\n                            mainPage={mainPage}\n                        />\n                    );\n                })}\n            </List>\n            {showAllApis && (\n                <div className={classNames({ [classes.mainPageAllApis]: mainPage }, 'tag-cloud-listing-wrapper')}>\n                    <Divider />\n\n                    <Link to='apis/' className={classes.textWrapper}>\n                        <ListItem button>\n                            <ListItemIcon>\n                                <Icon>label</Icon>\n                            </ListItemIcon>\n                            <ListItemText\n                                primary={(\n                                    <FormattedMessage\n                                        defaultMessage='All Apis'\n                                        id='Apis.Listing.TagCloudListingTags.allApis'\n                                    />\n                                )}\n                            />\n                        </ListItem>\n                    </Link>\n                </div>\n            )}\n        </Root>\n\n    ) : (\n        <Root>\n            {!mainPage && (\n                <Typography variant='h6' gutterBottom className={classNames(classes.filterTitle, 'apis-listing-tags-group')}>\n                    <FormattedMessage defaultMessage='API Groups' id='Apis.Listing.TagCloudListingTags.title' />\n                </Typography>\n            )}\n            <div className={classNames(classes.mainTitle, 'apis-listing-tags-empty')}>\n                <Typography variant='subtitle1' gutterBottom align='center'>\n                    <FormattedMessage\n                        defaultMessage='API groups cannot be found'\n                        id='Apis.Listing.TagCloudListingTags.tagsNotFound'\n                    />\n                </Typography>\n                <Link to='apis/' className={classNames(classes.linkTextWrapper, 'apis-listing-tags-group-all-apis-link')}>\n                    <Typography variant='subtitle1' gutterBottom align='center'>\n                        <FormattedMessage\n                            defaultMessage='All Apis'\n                            id='Apis.Listing.TagCloudListingTags.allApis'\n                        />\n                    </Typography>\n                </Link>\n            </div>\n        </Root>\n    );\n}\n\nTagCloudListingTags.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    allTags: PropTypes.shape({}).isRequired,\n};\n\nexport default TagCloudListingTags;\n"],"names":["PREFIX","classes","appBar","mainIconWrapper","mainTitle","mainTitleWrapper","content","listContentWrapper","iconDefault","Root","styled","_ref","theme","height","background","custom","infoBar","color","palette","getContrastText","borderBottom","grey","A200","display","alignItems","justifyContent","paddingTop","paddingLeft","paddingRight","flexGrow","padding","spacing","TagCloudListing","useTheme","allTags","setAllTags","useState","useEffect","API","getAllTags","then","response","body","list","catch","error","console","log","strokeColorMain","paper","React","className","CustomIcon","strokeColor","width","icon","Typography","variant","FormattedMessage","defaultMessage","id","TagCloudListingTags","mainPage","WrappedComponent","props","SettingsConsumer","context","_extends","root","link","linkNotActive","selectedTagText","apiGroup","StyledPaper","Paper","cursor","marginRight","textIndent","ApiBreadcrumbs","selectedTag","elevation","Breadcrumbs","RouterLink","to","tagWise","active","style","Link","underline","Icon","media","actions","header","info","apiName","version","subtitle","StyledCard","Card","thumbnail","backgroundColor","minHeight","margin","transition","paddingBottom","whiteSpace","overflow","textOverflow","flex","textAlign","fontSize","DocThumbLegacy","_ref2","doc","state","category","selectedIcon","backgroundIndex","imageObj","history","useHistory","detailsLink","apiUUID","name","sourceType","apiVersion","window","URL","revokeObjectURL","onClick","handleCardClick","push","defaultApiImage","CardMedia","image","title","ImageGenerator","api","fixedIcon","key","CardContent","component","propTypes","PropTypes","isRequired","flexDirection","wordBreak","DefinitionThumb","def","apiContext","apiProvider","apiType","StyledStyledEngineProvider","StyledEngineProvider","marginLeft","listView","tableBodyEvenBackgrund","marginTop","iconColor","listViewIconSize","ApiTableViewLegacy","constructor","super","_defineProperty","gridView","this","themeAdditions","muiTheme","overrides","MUIDataTable","marginBottom","boxShadow","tableRoot","border","lineHeight","tableBodyOddBackgrund","tableHeadBackground","MUIDataTablePagination","default","MuiMenuItem","MUIDataTableToolbar","flexWrap","MUIDataTableBodyCell","systemTheme","merge","DefaultConfigurations","Configurations","cloneDeep","dataTableTheme","createTheme","adaptV4Theme","intl","setState","loading","xhrRequest","data","pagination","total","count","setTenantDomain","code","Alert","formatMessage","finally","query","page","rowsPerPage","searchQuery","URLSearchParams","get","composeQuery","queryString","limit","offset","search","getAllAPIs","localStorage","getItem","pageType","componentDidMount","getData","componentDidUpdate","prevProps","render","_this","social","showRating","columns","options","filter","customBodyRender","value","tableMeta","updateValue","tableViewObj","arguments","length","undefined","rowData","artifact","rowIndex","sort","label","apiId","type","businessOwner","avgRating","StarRatingBar","apiRating","isEditable","showSummary","filterType","responsive","serverSide","onTableChange","action","tableState","changePage","selectableRows","onChangeRowsPerPage","numberOfRows","pageInner","countInner","setItem","textLabels","toolbar","downloadCsv","print","viewColumns","customRowRender","_data","dataIndex","DocThumb","ApiThumb","customHeight","customWidth","download","customToolbar","Loading","NoApi","injectFirst","ThemeProvider","getMuiTheme","contextType","ApiContext","withSettings","injectIntl","textWrapper","listItemText","StyledLink","tagCloud","leftMenu","APICategoryThumb","path","categoryLink","categoryDesc","description","substring","Tooltip","placement","ListItem","button","ListItemIcon","ListItemText","primary","secondary","classNames","tagWiseThumbWrapper","filterTitle","fontWeight","titleBackground","CategoryListingCategories","allCategories","gutterBottom","List","Object","keys","map","align","clickablePointer","maxWidth","ApiTagCloud","colorOptions","apisTagWithoutGroups","item","TagCloud","minSize","maxSize","tags","shuffle","tag","tagSearchURL","handleOnClick","card","apiDetails","suppressLinkStyles","row","thumbBy","thumbContent","thumbLeft","thumbRight","thumbInfo","thumbHeader","contextBox","thumbWrapper","deleteIcon","imageWrapper","imageOverlap","chipWrapper","ratingWrapper","unit","contentBackgroundColor","textDecoration","text","disabled","objectFit","alignSelf","parseInt","position","fill","bottom","windowURL","webkitURL","RecommendedApiThumbLegacy","MaterialIcons","isHover","toggleMouseOver","bind","Api","getAPIThumbnail","headers","iconJson","JSON","parse","size","url","createObjectURL","componentWillUnmount","getPathPrefix","event","showInfo","imageWidth","imageHeight","defaultImage","ImageView","src","alt","onMouseOver","onFocus","onMouseOut","onBlur","raised","handleRedirectToAPIOverview","transportType","Chip","defaultProps","rowImageOverride","apiNameLink","RecommendationsLegacy","assign","getApiRecommendations","RecommendedApiThumb","rowsPerPageOptions","rightIcon","buttonRight","ListingWrapper","iconSelected","contentWithTags","contentWithoutTags","contentWithTagsHidden","LeftMenu","LeftMenuForSlider","sliderButton","rotatedText","recommendationsBar","apiListingWrapper","contentAreaWidth","listGridSelectedColor","sliderWidth","fontFamily","typography","top","left","overflowY","sliderBackground","right","transform","transformOrigin","CommonListingLegacy","listType","prevState","showLeftMenu","enabled","settings","monetizationEnabled","isMonetizationEnabled","recommendationEnabled","isRecommendationEnabled","defaultApiView","showToggle","restApiClient","apiCategories","location","user","AuthManager","getUser","tagCloudActive","splits","split","splitTagArray","tagPaneVisible","categoryPaneVisible","toggleLeftMenu","onKeyDown","IconButton","setListType","Provider","ApiTableView","Recommendations","Settings","Container","Box","Grid","container","xs","md","statusText","py","pb","Button","Image404","VerbElement","verb","resourceChipColors","toLowerCase","disableFocusRipple","borderColor","toUpperCase","table","centerItems","leftCol","iconAligner","iconTextWrapper","iconEven","iconOdd","heading","heading1","emptyBox","summaryRoot","actionPanel","Box2","Box3","urlPaper","input","avatar","iconStyle","minWidth","iconOddColor","main","borderRadius","maxHeight","SolaceTopicsInfo","apiUuid","useParams","application","setApplication","environment","setEnvironment","selectedProtocol","setSelectedProtocol","envsListOfApplication","setEnvsListOfApplication","selectedEndpoint","setSelectedEndpoint","protocolsListOfEnvironments","setProtocolsListOfEnvironments","topics","setTopics","applicationList","setApplicationList","notFound","setNotFound","urlCopied","setUrlCopied","topicCopied","setTopicCopied","apiTopics","setApiTopics","apiPubTopics","setApiPubTopics","apiSubTopics","setApiSubTopics","useIntl","onTopicCopy","setTimeout","setPubAndSubTopics","allTopics","allApiTopics","apiPubTopicList","publishTopics","t","e","toString","includes","apiSubTopicList","subscribeTopics","client","promisedApi","getAllTopics","apiTopicList","obj","entry","parts","getSubscriptionAdditionalInfo","appInner","applicationName","solaceDeployedEnvironments","solaceURLs","protocol","endpointURL","SolaceTopicsObject","mqttSyntax","defaultSyntax","status","ResourceNotFound","setProtocolTopics","selectedEnv","SubscriptionNotFound","mt","TextField","select","fullWidth","onChange","selectedApp","target","app","helperText","SelectProps","native","environmentDisplayName","upperCaseString","pt","Divider","mr","InputBase","inputProps","Avatar","sizes","interactive","navigator","clipboard","writeText","p","Breadcrumb","useContext","breadcrumbDocument","pages","route","selected","setSelected","detectCurrentMenu","locationLocal","pathname","i","test1","RegExp","test2","match","listen","VerticalDivider","separator","NavigateNextIcon","MUILink","document","styles","pl","ButtonPanel","currentStep","handleCurrentStep","handleReset","nextActive","updateSubscriptionData","stepsLength","handleCancel","handleTest","appCreateFormWrapper","warningIcon","throttlingPolicyList","setThrottlingPolicyList","applicationRequest","setApplicationRequest","throttlingPolicy","tokenType","groups","attributes","isNameValid","setIsNameValid","allAppAttributes","setAllAppAttributes","hasValidKM","setHasValidKM","setCreatedApp","incrementStep","setStepStatus","stepStatuses","apiObject","promiseTiers","getAllTiers","throttlingPolicyLimit","promisedAttributes","getAllApplicationAttributes","promisedKeyManagers","getKeyManagers","Promise","all","tierResponse","allAttributes","keyManagers","throttlingPolicyListLocal","newRequest","_objectSpread","allAppAttr","hidden","responseKeyManagerList","hasValidKMInner","x","px","ApplicationCreateForm","updateApplicationRequest","validateName","trim","resolve","reject","Error","handleAttributesChange","newApplicationRequest","isRequiredAttribute","attribute","required","getAttributeValue","handleDeleteChip","chip","index","appGroups","values","v","handleAddChip","slice","createApplication","appCreated","applicationId","PROCEED","BLOCKED","message","mb","ml","InlineMessage","subscriptionRequest","newApp","setNewApp","tiers","createdApp","newSubscriptionRequest","tierData","tierName","SubscribeToApi","applicationsAvailable","updateSubscriptionRequest","subscribeToApplication","subscribe","subscriptionId","keyConfigWrapper","radioWrapper","subTitle","tabPanel","hr","muiFormGroupRoot","TabPanel","children","other","_objectWithoutProperties","_excluded","role","tokenWrapper","titleSub","boxWrapper","stepComponents","CreateAppStep","SubscribeToAppStep","setNextActive","keyManager","setKeyManager","keyRequest","setKeyRequest","keyType","supportedGrantTypes","callbackUrl","additionalProperties","setCreatedKeyType","setCreatedSelectedTab","selectedKeyManager","responseKeyManagerListDefault","filteredGrantTypes","availableGrantTypes","k","newKeyRequest","lg","FormHelperText","Table","TableBody","TableRow","TableCell","scope","displayName","tokenEndpoint","revokeEndpoint","userInfoEndpoint","gt","m","generateKeys","Application","keyState","setKeyType","selectedTab","setSelectedTab","subscriptionScopes","setSubscriptionScopes","accessTokenRequest","setAccessTokenRequest","timeout","scopesSelected","setCreatedToken","createdKeyType","createdSelectedTab","getKeys","subscriptionScopesList","messages","defineMessages","dataInfo","Tokens","updateAccessTokenRequest","generateAccessToken","generateToken","createdToken","my","mx","ViewToken","token","isOauth","completeStep","Wizard","Component","stepStatus","steps","redirect","CurrentStepComponent","Stepper","activeStep","Step","StepLabel","handleNext","subscribeTitle","plainContent","instructions","wizardContent","ApiConsole","lazy","GraphQLConsole","AsyncApiConsole","Overview","Documents","Credentials","Comments","Sdk","AsyncApiDefinition","ApiChat","LoadableSwitch","withRouter","setbreadcrumbDocument","apiChatEnabled","params","redirectURL","tryoutRoute","CONSTANTS","API_TYPES","GRAPHQL","Route","WS","WEBSUB","SSE","ASYNC","Suspense","fallback","Progress","Switch","Redirect","exact","from","leftMenuHorizontal","leftMenuVerticalLeft","leftMenuVerticalLeftMinView","leftMenuVerticalRight","leftMenuVerticalRightMinView","leftLInkMain","leftLInkMainText","detailsContent","contentExpandView","shiftLeft","contentLoader","contentLoaderRightMenu","expandIcon","expandIconMinView","accordianSummary","accordianSummaryMinView","accordionDetails","accordionDetailsMinView","leftMenuVerticalRightDrawerIcon","shiftToLeft","shiftToRight","shiftToLeftMinView","shiftToRightMinView","leftMenuPaddingLeft","backgroundImage","overflowX","breakpoints","down","borderRight","rootBackground","DetailsLegacy","callback","existingSubscriptions","promisedApplications","restApi","getAPIById","api_uuid","user1","User","open","isSideBarOpen","getSubscriptions","subscriptionLimit","subscribeApplicationLimit","getAllApplications","subscriptions","applications","subscribedApplications","element","policy","applicationInfo","subscribedAppIds","sub","filteredApp","overviewHiden","xo","tryOutExpanded","setDetailsAPI","handleDrawerClose","handleDrawerOpen","getSettings","prevApiUuid","newApiUuid","setUser","isAsyncAPI","rootIconSize","rootIconTextVisible","rootIconVisible","apiDetailPages","showCredentials","showComments","showTryout","showDocuments","showSdks","showAsyncSpecification","prefix","sufix","globalStyle","pathPrefix","isWidget","searchParams","isAsyncApi","isSubValidationDisabled","DEFAULT_SUBSCRIPTIONLESS_PLAN","Helmet","LeftMenuItem","iconText","gatewayVendor","gatewayType","Accordion","expanded","_event","AccordionSummary","ExpandMoreIcon","AccordionDetails","QuestionAnswerIcon","ArrowBackIosIcon","ArrowForwardIosIcon","ChatBotIcon","toggleChatbot","handleDisableChatbot","chatbotDisabled","showCloseButton","setShowCloseButton","onMouseEnter","handleMouseEnter","onMouseLeave","handleMouseLeave","Fab","ChatIcon","handleCloseIconClick","CloseIcon","stroke","ChatInput","onSend","setContent","notificationOpen","setNotificationOpen","marketplaceAssistantEnabled","aiAuthTokenProvided","useSettingsContext","handleSend","placeholder","shiftKey","preventDefault","keyCode","multiline","maxRows","InputProps","endAdornment","InputAdornment","SendIcon","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","handleCloseNotification","sx","ChatMessage","outerBoxRef","useRef","colorMap","profileStyle","messageStyle","wordWrap","PersonIcon","charAt","ref","apis","light","dark","getColorFromLetter","letter","charLightColor","charNumber","String","fromCharCode","r","g","b","Utils","hexToRGBHash","rgbToHex","Math","ceil","href","apiPath","rel","shape","string","arrayOf","Loader","ChatMessages","messagesEndRef","subjectLine","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","authTokenNotProvidedWarning","marketplaceAssistantDocLink","LaunchIcon","severity","bgcolor","instanceOf","Array","bool","func","mainHeader","chatbotNameBox","chatbotName","borderLeft","alpha","common","black","Header","toggleFullScreen","isClicked","FullscreenExitIcon","FullscreenIcon","RestartAltTwoToneIcon","ExpandMoreTwoToneIcon","predefinedAnswers","hi","hiii","hello","hey","greetings","thanks","bye","goodbye","calculateStringSimilarity","string1","string2","str1","str2","subsequenceMap","Map","subsequence","substr","set","has","matchCount","j","ChatWindow","toggleClearChatbot","setMessages","introMessage","responseRef","apiCall","setIsClicked","apiLimitExceeded","setApiLimitExceeded","apisCount","setApisCount","setLimit","setWindowSize","innerWidth","innerHeight","getMarketplaceAssistantApiCount","apiCount","apiLimit","handleResize","addEventListener","removeEventListener","ResizableBox","minConstraints","maxConstraints","resizeHandles","zIndex","handle","handleClear","async","inputString","bestMatch","bestScore","searchString","entries","comparisonString","score","findBestMatchingAnswer","onReset","showChatbot","setShowChatbot","setLoading","setChatbotDisabled","pathName","origin","messagesJSON","stringify","timestamp","Date","now","loggedInUser","storedData","storedMessages","messagePayload","apiList","marketplaceAssistantExecute","result","apiPaths","err","errorMessage","CommonListing","AISearchAssistant","Details","titleBar","buttonLeft","buttonsWrapper","legend","inputText","buttonRightLink","FormControl","FormControlOdd","quotaHelp","subscribeRoot","subscribeRootSmall","smallDisplay","smallDisplayFix","selectMenuRoot","appDropDown","StyledGrid","borderBottomWidth","borderBottomStyle","subscribeToApi","appSelected","setAppSelected","policySelected","setPolicySelected","applicationsList","setApplicationsList","renderSmall","handleChange","field","InputLabel","shrink","for","Autocomplete","disableClearable","getOptionLabel","option","renderInput","htmlFor","getOptionSelected","groupBy","tierPlan","renderOption","MenuItem","monetizationAttributes","pricePerRequest","currencyType","fixedPrice","billingCycle","selectEmpty","ApiTagThumb","tagLink","linkTextWrapper","mainPageList","mainPageAllApis","showAllApis","apisTagCloudGroup","keyInner"],"sourceRoot":""}