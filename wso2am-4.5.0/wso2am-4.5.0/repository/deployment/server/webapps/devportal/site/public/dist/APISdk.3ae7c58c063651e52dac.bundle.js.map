{"version":3,"file":"APISdk.3ae7c58c063651e52dac.bundle.js","mappings":"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","sources":["webpack://@wso2apim/devportal/./node_modules/js-file-download/file-download.js","webpack://@wso2apim/devportal/./node_modules/@mui/material/CardActions/cardActionsClasses.js","webpack://@wso2apim/devportal/./node_modules/@mui/material/CardActions/CardActions.js","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Details/Sdk.jsx"],"sourcesContent":["module.exports = function(data, filename, mime, bom) {\n    var blobData = (typeof bom !== 'undefined') ? [bom, data] : [data]\n    var blob = new Blob(blobData, {type: mime || 'application/octet-stream'});\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were\n        // revoked by closing the blob for which they were created.\n        // These URLs will no longer resolve as the data backing\n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    }\n    else {\n        var blobURL = (window.URL && window.URL.createObjectURL) ? window.URL.createObjectURL(blob) : window.webkitURL.createObjectURL(blob);\n        var tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename);\n\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\n        // target if the browser does not support the HTML5 download attribute.\n        // This allows you to download files in desktop safari if pop up blocking\n        // is enabled.\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n\n        document.body.appendChild(tempLink);\n        tempLink.click();\n\n        // Fixes \"webkit blob resource error 1\"\n        setTimeout(function() {\n            document.body.removeChild(tempLink);\n            window.URL.revokeObjectURL(blobURL);\n        }, 200)\n    }\n}\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiCardActions', slot);\n}\nconst cardActionsClasses = generateUtilityClasses('MuiCardActions', ['root', 'spacing']);\nexport default cardActionsClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"disableSpacing\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getCardActionsUtilityClass } from './cardActionsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableSpacing\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getCardActionsUtilityClass, classes);\n};\nconst CardActionsRoot = styled('div', {\n  name: 'MuiCardActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableSpacing && styles.spacing];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 8\n}, !ownerState.disableSpacing && {\n  '& > :not(style) ~ :not(style)': {\n    marginLeft: 8\n  }\n}));\nconst CardActions = /*#__PURE__*/React.forwardRef(function CardActions(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardActions'\n  });\n  const {\n      disableSpacing = false,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    disableSpacing\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardActionsRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the actions do not have additional margin.\n   * @default false\n   */\n  disableSpacing: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardActions;","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardMedia from '@mui/material/CardMedia';\nimport Icon from '@mui/material/Icon';\nimport Divider from '@mui/material/Divider';\nimport Grid from '@mui/material/Grid';\nimport JSFileDownload from 'js-file-download';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Alert from 'AppComponents/Shared/Alert';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\nimport AuthManager from 'AppData/AuthManager';\nimport { app } from 'Settings';\nimport { useTheme } from '@mui/material';\nimport Api from '../../../data/api';\n\nconst PREFIX = 'Sdk';\n\nconst classes = {\n    genericMessageWrapper: `${PREFIX}-genericMessageWrapper`,\n    titleSub: `${PREFIX}-titleSub`,\n    gridRoot: `${PREFIX}-gridRoot`,\n    titleWrappper: `${PREFIX}-titleWrappper`,\n    cardTitle: `${PREFIX}-cardTitle`,\n    cardRoot: `${PREFIX}-cardRoot`,\n};\n\nconst Root = styled('div')((\n    {\n        theme,\n    },\n) => ({\n    [`& .${classes.genericMessageWrapper}`]: {\n        margin: theme.spacing(2),\n    },\n\n    [`& .${classes.titleSub}`]: {\n        marginLeft: theme.spacing(3),\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n        color: theme.palette.getContrastText(theme.palette.background.default),\n    },\n\n    [`& .${classes.gridRoot}`]: {\n        marginLeft: theme.spacing(2),\n    },\n\n    [`& .${classes.titleWrappper}`]: {\n        display: 'flex',\n        alignItems: 'center',\n        '& h4': {\n            marginRight: theme.spacing(1),\n        },\n    },\n\n    [`& .${classes.cardTitle}`]: {\n        background: theme.palette.grey[50],\n    },\n\n    [`& .${classes.cardRoot}`]: {\n        background: theme.custom.apiDetailPages.sdkBackground,\n    },\n}));\n\n/**\n * @class Sdk\n * @extends {React.Component}\n */\nclass SdkLegacy extends React.Component {\n    /**\n     * Create instance of SdkLegacy\n     * @param {JSON} props props passed from parent\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            sdkLanguages: null,\n            items: null,\n        };\n        const { match, apiId } = this.props;\n        this.api_uuid = match ? match.params.apiUuid : apiId;\n        this.filter_threshold = 5;\n        this.getSdkForApi = this.getSdkForApi.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.addDefaultSrc = this.addDefaultSrc.bind(this);\n    }\n\n    /**\n     * @memberof SdkLegacy\n     */\n    componentDidMount() {\n        const api = new Api();\n        const user = AuthManager.getUser();\n        if (user != null) {\n            const promisedLanguages = api.getSdkLanguages();\n\n            promisedLanguages\n                .then((response) => {\n                    if (response.obj.length === 0) {\n                        this.setState({ sdkLanguages: false });\n                        return;\n                    }\n                    this.setState({ sdkLanguages: response.obj });\n                    this.setState({ items: response.obj });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    Alert.error(error);\n                });\n        }\n    }\n\n    /**\n     * Call the REST API to generate the SDK\n     *\n     * @param {string} apiId api id\n     * @param {string} language language selected\n     * @memberof SdkLegacy\n     */\n    getSdkForApi(apiId, language) {\n        const api = new Api();\n        const promisedSdk = api.getSdk(apiId, language);\n\n        promisedSdk\n            .then((response) => {\n                const sdkZipName = response.headers['content-disposition'].match(/filename=\"(.+)\"/)[1];\n                const sdkZip = response.data;\n                // Prompt to download zip file for the SDK\n                JSFileDownload(sdkZip, sdkZipName);\n            })\n            .catch((error) => {\n                console.log(error);\n                Alert.error(error);\n            });\n    }\n\n    /**\n     * Handle the click event of the download button\n     * @param {event} _event click event\n     * @param {string} item selected language\n     * @memberof SdkLegacy\n     */\n    handleClick = (_event, item) => {\n        const apiId = this.api_uuid;\n        const language = item;\n        this.getSdkForApi(apiId, language);\n    };\n\n    /**\n     * Handle the change event of the Search input field\n     * @param {event} event click event\n     * @memberof SdkLegacy\n     */\n    handleChange = (event) => {\n        const { sdkLanguages } = this.state;\n        let updatedList = sdkLanguages;\n        updatedList = updatedList.filter((item) => {\n            return item.toLowerCase().search(event.target.value.toLowerCase()) !== -1;\n        });\n        this.setState({ items: updatedList });\n    };\n\n    /**\n     * Handle sdk image not found issue. Point to a default image\n     * @param {event} ev click event\n     * @memberof SdkLegacy\n     */\n    addDefaultSrc = (ev) => {\n        const evLocal = ev;\n        evLocal.target.src = app.context + '/site/public/images/sdks/default.svg';\n    };\n\n    /**\n     * @returns  {JSX} rendered sdk ui\n     * @memberof SdkLegacy\n     */\n    render() {\n        const languageList = this.state.items;\n        const {\n            onlyIcons, intl, theme,\n        } = this.props;\n        const {\n            custom: {\n                apiDetailPages: { onlyShowSdks },\n            },\n        } = theme;\n        const filteredLanguageList = languageList && languageList.length > 0 && onlyShowSdks && onlyShowSdks.length > 0\n            ? languageList.filter((lang) => onlyShowSdks.includes(lang.toLowerCase()))\n            : languageList;\n        if (onlyIcons) {\n            return (\n                filteredLanguageList && (\n                    <Root>\n                        {filteredLanguageList.map((language, index) => index < 3 && (\n                            <Grid item xs={4} key={language}>\n                                <Button\n                                    onClick={(event) => this.handleClick(event, language)}\n                                    onKeyDown={(event) => this.handleClick(event, language)}\n                                    style={{ cursor: 'pointer' }}\n                                    aria-label={'Download ' + language + ' SDK'}\n                                    id='download-sdk-btn'\n                                >\n                                    <img\n                                        alt={language}\n                                        src={\n                                            app.context\n                                                    + '/site/public/images/sdks/'\n                                                    + String(language)\n                                                    + '.svg'\n                                        }\n                                        style={{\n                                            width: 80,\n                                            height: 80,\n                                            margin: 10,\n                                        }}\n                                    />\n                                </Button>\n                            </Grid>\n                        ))}\n                    </Root>\n                )\n            );\n        }\n        return (\n            <Root>\n                <div className={classes.titleWrappper}>\n                    <Typography variant='h4' component='h2' className={classes.titleSub}>\n                        <FormattedMessage id='Apis.Details.Sdk.title' defaultMessage='Software Development Kits (SDKs)' />\n                    </Typography>\n                    {filteredLanguageList && this.state.sdkLanguages.length >= this.filter_threshold && (\n                        <TextField\n                            variant='outlined'\n                            id='search'\n                            label={intl.formatMessage({\n                                defaultMessage: 'Search SDK',\n                                id: 'Apis.Details.Sdk.search.sdk',\n                            })}\n                            type='text'\n                            margin='normal'\n                            name='searchSdk'\n                            onChange={this.handleChange}\n                        />\n                    )}\n                </div>\n                {filteredLanguageList ? (\n                    <Grid container spacing={0} className={classes.gridRoot}>\n                        <Grid item xs={12} sm={6} md={9} lg={9} xl={10}>\n                            <Grid container justifyContent='flex-start' spacing={4}>\n                                {filteredLanguageList.map((language) => (\n                                    <Grid key={language} item>\n                                        <div style={{ width: 'auto', textAlign: 'center', margin: '10px' }}>\n                                            <Card className={classes.cardRoot}>\n                                                <div>{language.toString().toUpperCase()}</div>\n                                                <Divider />\n                                                <CardMedia\n                                                    title={language.toString().toUpperCase()}\n                                                    src={\n                                                        app.context + '/site/public/images/sdks/'\n                                                        + String(language)\n                                                        + '.svg'\n                                                    }\n                                                    classes={{ root: classes.cardTitle }}\n                                                >\n                                                    <img\n                                                        alt={language}\n                                                        onError={this.addDefaultSrc}\n                                                        src={`${app.context}/site/public/images/sdks/${language}.svg`}\n                                                        style={{ width: '100px', height: '100px', margin: '30px' }}\n                                                    />\n                                                </CardMedia>\n                                                <CardActions>\n                                                    <Grid container justifyContent='center'>\n                                                        <Button\n                                                            color='secondary'\n                                                            onClick={(event) => this.handleClick(event, language)}\n                                                            aria-label={'Download ' + language + ' SDK'}\n                                                            id='download-sdk-btn'\n                                                        >\n                                                            <Icon>arrow_downward</Icon>\n                                                            <FormattedMessage\n                                                                id='Apis.Details.Sdk.download.btn'\n                                                                defaultMessage='Download'\n                                                            />\n                                                        </Button>\n                                                    </Grid>\n                                                </CardActions>\n                                            </Card>\n                                        </div>\n                                    </Grid>\n                                ))}\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                ) : (\n                    <div className={classes.genericMessageWrapper}>\n                        <InlineMessage type='info' className={classes.dialogContainer}>\n                            <Typography variant='h5' component='h3'>\n                                <FormattedMessage id='Apis.Details.Sdk.no.sdks' defaultMessage='No SDKs' />\n                            </Typography>\n                            <Typography component='p'>\n                                <FormattedMessage\n                                    id='Apis.Details.Sdk.no.sdks.content'\n                                    defaultMessage='No SDKs available for this API'\n                                />\n                            </Typography>\n                        </InlineMessage>\n                    </div>\n                )}\n            </Root>\n        );\n    }\n}\n\nfunction Sdk(props) {\n    const {\n        match, apiId, onlyIcons, intl,\n    } = props;\n    const theme = useTheme();\n    return (\n        <SdkLegacy\n            match={match}\n            apiId={apiId}\n            onlyIcons={onlyIcons}\n            intl={intl}\n            theme={theme}\n        />\n    );\n}\n\nexport default injectIntl((Sdk));\n"],"names":["module","exports","data","filename","mime","bom","blob","Blob","type","window","navigator","msSaveBlob","blobURL","URL","createObjectURL","webkitURL","tempLink","document","createElement","style","display","href","setAttribute","download","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","getCardActionsUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardActionsRoot","styled","name","overridesResolver","props","styles","ownerState","root","disableSpacing","spacing","alignItems","padding","marginLeft","CardActions","inProps","ref","className","other","classes","slots","composeClasses","useUtilityClasses","clsx","PREFIX","genericMessageWrapper","titleSub","gridRoot","titleWrappper","cardTitle","cardRoot","Root","_ref","theme","margin","paddingTop","paddingBottom","color","palette","getContrastText","background","default","marginRight","grey","custom","apiDetailPages","sdkBackground","SdkLegacy","React","constructor","super","_defineProperty","_event","item","apiId","this","api_uuid","language","getSdkForApi","event","sdkLanguages","state","updatedList","filter","toLowerCase","search","target","value","setState","items","ev","src","app","context","match","params","apiUuid","filter_threshold","bind","handleClick","handleChange","addDefaultSrc","componentDidMount","api","Api","AuthManager","getUser","getSdkLanguages","then","response","obj","length","catch","error","console","log","Alert","getSdk","sdkZipName","headers","sdkZip","JSFileDownload","render","languageList","onlyIcons","intl","onlyShowSdks","filteredLanguageList","lang","includes","map","index","Grid","xs","key","Button","onClick","onKeyDown","cursor","id","alt","String","width","height","Typography","variant","component","FormattedMessage","defaultMessage","TextField","label","formatMessage","onChange","container","sm","md","lg","xl","justifyContent","textAlign","Card","toString","toUpperCase","Divider","CardMedia","title","onError","Icon","InlineMessage","dialogContainer","injectIntl","useTheme"],"sourceRoot":""}