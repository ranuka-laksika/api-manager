{"version":3,"file":"1274.ea9dc157aec1871273c9.bundle.js","mappings":"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","sources":["webpack://@wso2apim/devportal/./node_modules/codemirror/addon/fold/foldgutter.js","webpack://@wso2apim/devportal/./node_modules/codemirror/addon/fold/foldcode.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"./foldcode\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"./foldcode\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineOption(\"foldGutter\", false, function(cm, val, old) {\n    if (old && old != CodeMirror.Init) {\n      cm.clearGutter(cm.state.foldGutter.options.gutter);\n      cm.state.foldGutter = null;\n      cm.off(\"gutterClick\", onGutterClick);\n      cm.off(\"changes\", onChange);\n      cm.off(\"viewportChange\", onViewportChange);\n      cm.off(\"fold\", onFold);\n      cm.off(\"unfold\", onFold);\n      cm.off(\"swapDoc\", onChange);\n      cm.off(\"optionChange\", optionChange);\n    }\n    if (val) {\n      cm.state.foldGutter = new State(parseOptions(val));\n      updateInViewport(cm);\n      cm.on(\"gutterClick\", onGutterClick);\n      cm.on(\"changes\", onChange);\n      cm.on(\"viewportChange\", onViewportChange);\n      cm.on(\"fold\", onFold);\n      cm.on(\"unfold\", onFold);\n      cm.on(\"swapDoc\", onChange);\n      cm.on(\"optionChange\", optionChange);\n    }\n  });\n\n  var Pos = CodeMirror.Pos;\n\n  function State(options) {\n    this.options = options;\n    this.from = this.to = 0;\n  }\n\n  function parseOptions(opts) {\n    if (opts === true) opts = {};\n    if (opts.gutter == null) opts.gutter = \"CodeMirror-foldgutter\";\n    if (opts.indicatorOpen == null) opts.indicatorOpen = \"CodeMirror-foldgutter-open\";\n    if (opts.indicatorFolded == null) opts.indicatorFolded = \"CodeMirror-foldgutter-folded\";\n    return opts;\n  }\n\n  function isFolded(cm, line) {\n    var marks = cm.findMarks(Pos(line, 0), Pos(line + 1, 0));\n    for (var i = 0; i < marks.length; ++i) {\n      if (marks[i].__isFold) {\n        var fromPos = marks[i].find(-1);\n        if (fromPos && fromPos.line === line)\n          return marks[i];\n      }\n    }\n  }\n\n  function marker(spec) {\n    if (typeof spec == \"string\") {\n      var elt = document.createElement(\"div\");\n      elt.className = spec + \" CodeMirror-guttermarker-subtle\";\n      return elt;\n    } else {\n      return spec.cloneNode(true);\n    }\n  }\n\n  function updateFoldInfo(cm, from, to) {\n    var opts = cm.state.foldGutter.options, cur = from - 1;\n    var minSize = cm.foldOption(opts, \"minFoldSize\");\n    var func = cm.foldOption(opts, \"rangeFinder\");\n    // we can reuse the built-in indicator element if its className matches the new state\n    var clsFolded = typeof opts.indicatorFolded == \"string\" && classTest(opts.indicatorFolded);\n    var clsOpen = typeof opts.indicatorOpen == \"string\" && classTest(opts.indicatorOpen);\n    cm.eachLine(from, to, function(line) {\n      ++cur;\n      var mark = null;\n      var old = line.gutterMarkers;\n      if (old) old = old[opts.gutter];\n      if (isFolded(cm, cur)) {\n        if (clsFolded && old && clsFolded.test(old.className)) return;\n        mark = marker(opts.indicatorFolded);\n      } else {\n        var pos = Pos(cur, 0);\n        var range = func && func(cm, pos);\n        if (range && range.to.line - range.from.line >= minSize) {\n          if (clsOpen && old && clsOpen.test(old.className)) return;\n          mark = marker(opts.indicatorOpen);\n        }\n      }\n      if (!mark && !old) return;\n      cm.setGutterMarker(line, opts.gutter, mark);\n    });\n  }\n\n  // copied from CodeMirror/src/util/dom.js\n  function classTest(cls) { return new RegExp(\"(^|\\\\s)\" + cls + \"(?:$|\\\\s)\\\\s*\") }\n\n  function updateInViewport(cm) {\n    var vp = cm.getViewport(), state = cm.state.foldGutter;\n    if (!state) return;\n    cm.operation(function() {\n      updateFoldInfo(cm, vp.from, vp.to);\n    });\n    state.from = vp.from; state.to = vp.to;\n  }\n\n  function onGutterClick(cm, line, gutter) {\n    var state = cm.state.foldGutter;\n    if (!state) return;\n    var opts = state.options;\n    if (gutter != opts.gutter) return;\n    var folded = isFolded(cm, line);\n    if (folded) folded.clear();\n    else cm.foldCode(Pos(line, 0), opts);\n  }\n\n  function optionChange(cm, option) {\n    if (option == \"mode\") onChange(cm)\n  }\n\n  function onChange(cm) {\n    var state = cm.state.foldGutter;\n    if (!state) return;\n    var opts = state.options;\n    state.from = state.to = 0;\n    clearTimeout(state.changeUpdate);\n    state.changeUpdate = setTimeout(function() { updateInViewport(cm); }, opts.foldOnChangeTimeSpan || 600);\n  }\n\n  function onViewportChange(cm) {\n    var state = cm.state.foldGutter;\n    if (!state) return;\n    var opts = state.options;\n    clearTimeout(state.changeUpdate);\n    state.changeUpdate = setTimeout(function() {\n      var vp = cm.getViewport();\n      if (state.from == state.to || vp.from - state.to > 20 || state.from - vp.to > 20) {\n        updateInViewport(cm);\n      } else {\n        cm.operation(function() {\n          if (vp.from < state.from) {\n            updateFoldInfo(cm, vp.from, state.from);\n            state.from = vp.from;\n          }\n          if (vp.to > state.to) {\n            updateFoldInfo(cm, state.to, vp.to);\n            state.to = vp.to;\n          }\n        });\n      }\n    }, opts.updateViewportTimeSpan || 400);\n  }\n\n  function onFold(cm, from) {\n    var state = cm.state.foldGutter;\n    if (!state) return;\n    var line = from.line;\n    if (line >= state.from && line < state.to)\n      updateFoldInfo(cm, line, line + 1);\n  }\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  function doFold(cm, pos, options, force) {\n    if (options && options.call) {\n      var finder = options;\n      options = null;\n    } else {\n      var finder = getOption(cm, options, \"rangeFinder\");\n    }\n    if (typeof pos == \"number\") pos = CodeMirror.Pos(pos, 0);\n    var minSize = getOption(cm, options, \"minFoldSize\");\n\n    function getRange(allowFolded) {\n      var range = finder(cm, pos);\n      if (!range || range.to.line - range.from.line < minSize) return null;\n      if (force === \"fold\") return range;\n\n      var marks = cm.findMarksAt(range.from);\n      for (var i = 0; i < marks.length; ++i) {\n        if (marks[i].__isFold) {\n          if (!allowFolded) return null;\n          range.cleared = true;\n          marks[i].clear();\n        }\n      }\n      return range;\n    }\n\n    var range = getRange(true);\n    if (getOption(cm, options, \"scanUp\")) while (!range && pos.line > cm.firstLine()) {\n      pos = CodeMirror.Pos(pos.line - 1, 0);\n      range = getRange(false);\n    }\n    if (!range || range.cleared || force === \"unfold\") return;\n\n    var myWidget = makeWidget(cm, options, range);\n    CodeMirror.on(myWidget, \"mousedown\", function(e) {\n      myRange.clear();\n      CodeMirror.e_preventDefault(e);\n    });\n    var myRange = cm.markText(range.from, range.to, {\n      replacedWith: myWidget,\n      clearOnEnter: getOption(cm, options, \"clearOnEnter\"),\n      __isFold: true\n    });\n    myRange.on(\"clear\", function(from, to) {\n      CodeMirror.signal(cm, \"unfold\", cm, from, to);\n    });\n    CodeMirror.signal(cm, \"fold\", cm, range.from, range.to);\n  }\n\n  function makeWidget(cm, options, range) {\n    var widget = getOption(cm, options, \"widget\");\n\n    if (typeof widget == \"function\") {\n      widget = widget(range.from, range.to);\n    }\n\n    if (typeof widget == \"string\") {\n      var text = document.createTextNode(widget);\n      widget = document.createElement(\"span\");\n      widget.appendChild(text);\n      widget.className = \"CodeMirror-foldmarker\";\n    } else if (widget) {\n      widget = widget.cloneNode(true)\n    }\n    return widget;\n  }\n\n  // Clumsy backwards-compatible interface\n  CodeMirror.newFoldFunction = function(rangeFinder, widget) {\n    return function(cm, pos) { doFold(cm, pos, {rangeFinder: rangeFinder, widget: widget}); };\n  };\n\n  // New-style interface\n  CodeMirror.defineExtension(\"foldCode\", function(pos, options, force) {\n    doFold(this, pos, options, force);\n  });\n\n  CodeMirror.defineExtension(\"isFolded\", function(pos) {\n    var marks = this.findMarksAt(pos);\n    for (var i = 0; i < marks.length; ++i)\n      if (marks[i].__isFold) return true;\n  });\n\n  CodeMirror.commands.toggleFold = function(cm) {\n    cm.foldCode(cm.getCursor());\n  };\n  CodeMirror.commands.fold = function(cm) {\n    cm.foldCode(cm.getCursor(), null, \"fold\");\n  };\n  CodeMirror.commands.unfold = function(cm) {\n    cm.foldCode(cm.getCursor(), { scanUp: false }, \"unfold\");\n  };\n  CodeMirror.commands.foldAll = function(cm) {\n    cm.operation(function() {\n      for (var i = cm.firstLine(), e = cm.lastLine(); i <= e; i++)\n        cm.foldCode(CodeMirror.Pos(i, 0), { scanUp: false }, \"fold\");\n    });\n  };\n  CodeMirror.commands.unfoldAll = function(cm) {\n    cm.operation(function() {\n      for (var i = cm.firstLine(), e = cm.lastLine(); i <= e; i++)\n        cm.foldCode(CodeMirror.Pos(i, 0), { scanUp: false }, \"unfold\");\n    });\n  };\n\n  CodeMirror.registerHelper(\"fold\", \"combine\", function() {\n    var funcs = Array.prototype.slice.call(arguments, 0);\n    return function(cm, start) {\n      for (var i = 0; i < funcs.length; ++i) {\n        var found = funcs[i](cm, start);\n        if (found) return found;\n      }\n    };\n  });\n\n  CodeMirror.registerHelper(\"fold\", \"auto\", function(cm, start) {\n    var helpers = cm.getHelpers(start, \"fold\");\n    for (var i = 0; i < helpers.length; i++) {\n      var cur = helpers[i](cm, start);\n      if (cur) return cur;\n    }\n  });\n\n  var defaultOptions = {\n    rangeFinder: CodeMirror.fold.auto,\n    widget: \"\\u2194\",\n    minFoldSize: 0,\n    scanUp: false,\n    clearOnEnter: true\n  };\n\n  CodeMirror.defineOption(\"foldOptions\", null);\n\n  function getOption(cm, options, name) {\n    if (options && options[name] !== undefined)\n      return options[name];\n    var editorOptions = cm.options.foldOptions;\n    if (editorOptions && editorOptions[name] !== undefined)\n      return editorOptions[name];\n    return defaultOptions[name];\n  }\n\n  CodeMirror.defineExtension(\"foldOption\", function(options, name) {\n    return getOption(this, options, name);\n  });\n});\n"],"names":["CodeMirror","defineOption","cm","val","old","opts","Init","clearGutter","state","foldGutter","options","gutter","off","onGutterClick","onChange","onViewportChange","onFold","optionChange","State","indicatorOpen","indicatorFolded","updateInViewport","on","Pos","this","from","to","isFolded","line","marks","findMarks","i","length","__isFold","fromPos","find","marker","spec","elt","document","createElement","className","cloneNode","updateFoldInfo","cur","minSize","foldOption","func","clsFolded","classTest","clsOpen","eachLine","mark","gutterMarkers","test","pos","range","setGutterMarker","cls","RegExp","vp","getViewport","operation","folded","clear","foldCode","option","clearTimeout","changeUpdate","setTimeout","foldOnChangeTimeSpan","updateViewportTimeSpan","mod","doFold","force","call","finder","getOption","getRange","allowFolded","findMarksAt","cleared","firstLine","myWidget","widget","text","createTextNode","appendChild","makeWidget","e","myRange","e_preventDefault","markText","replacedWith","clearOnEnter","signal","newFoldFunction","rangeFinder","defineExtension","commands","toggleFold","getCursor","fold","unfold","scanUp","foldAll","lastLine","unfoldAll","registerHelper","funcs","Array","prototype","slice","arguments","start","found","helpers","getHelpers","defaultOptions","auto","minFoldSize","name","undefined","editorOptions","foldOptions"],"sourceRoot":""}