{"version":3,"file":"573.c3dba6bf049e48417c2a.bundle.js","mappings":"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","sources":["webpack://@wso2apim/devportal/./source/src/app/components/Apis/Listing/APICards/LetterGenerator.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Listing/APICards/ApiThumbClassic.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Listing/APICards/ImageUtils.js","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Listing/APICards/APIThumbPlain.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Listing/ApiThumb.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Details/StarRatingSummary.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Details/ApiContext.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Listing/Background.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Listing/APICards/ImageGenerator.jsx","webpack://@wso2apim/devportal/./source/src/app/data/stringFormatter.js","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Listing/StarRatingBar.jsx"],"sourcesContent":["/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport { capitalizeFirstLetter } from 'AppData/stringFormatter';\nimport Utils from 'AppData/Utils';\nimport { useTheme } from '@mui/material';\nimport Box from '@mui/material/Box';\n\nconst getColorFromLetter = (letter, colorMap, offset) => {\n    let charLightColor = colorMap[letter.toLowerCase()];\n\n    if (!charLightColor) {\n        const charNumber = parseInt(letter, 10);\n        if (charNumber) {\n            charLightColor = colorMap[String.fromCharCode(111 + charNumber)];\n        } else {\n            return [null, null];\n        }\n    }\n    const { r, g, b } = Utils.hexToRGBHash(charLightColor);\n    const dark = Utils.rgbToHex(r - Math.ceil(r * offset), g - Math.ceil(offset * g),\n        b - Math.ceil(offset * b));\n    return [charLightColor, dark];\n};\n\nexport default (props) => {\n    const {\n        artifact, width, height, charLength = 2, ThumbIcon, bgColor,\n    } = props;\n    const theme = useTheme();\n    const name = artifact.name.substring(0, charLength);\n    const {\n        colorMap, offset, width: defaultWidth, textShadow,\n    } = theme.custom.thumbnail;\n\n    return (\n        <Box sx={{ display: 'flex' }}>\n            <Avatar\n                variant='square'\n                sx={() => {\n                    const [light, dark] = getColorFromLetter(bgColor === false ? '' : name.substring(0, 1), colorMap, offset);\n                    const fontSize = Math.ceil((width * 70) / defaultWidth);\n                    /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n                    const background = light && `linear-gradient(to right, ${light}, ${dark})`;\n                    return {\n                        color: light && theme.palette.getContrastText(dark),\n                        background,\n                        fallbacks: [\n                            { background: light }, /* fallback for old browsers */\n                            {\n                                background:\n                                `-webkit-linear-gradient(to right, ${light}, ${dark})`, /* Chrome 10-25, Safari 5.1-6 */\n                            },\n                        ],\n                        height,\n                        width,\n                        fontSize: `${fontSize}px`,\n                        textShadow,\n                    };\n                }}\n            >\n                {ThumbIcon ? (\n                    <ThumbIcon sx={() => {\n                        const fontSize = Math.ceil((width * 90) / defaultWidth);\n                        return {\n                            fontSize,\n                        };\n                    }}\n                    />\n                ) : capitalizeFirstLetter(name)}\n            </Avatar>\n        </Box>\n    );\n};\n","/* eslint-disable react/prop-types */\n/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Typography from '@mui/material/Typography';\nimport Card from '@mui/material/Card';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardContent from '@mui/material/CardContent';\nimport Chip from '@mui/material/Chip';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport MaterialIcons from 'MaterialIcons';\nimport StarRatingBar from 'AppComponents/Apis/Listing/StarRatingBar';\nimport { app, apis } from 'Settings';\nimport classNames from 'classnames';\nimport Box from '@mui/material/Box';\nimport Popover from '@mui/material/Popover';\nimport MonetizationOnIcon from '@mui/icons-material/MonetizationOn';\nimport EmailIcon from '@mui/icons-material/Email';\nimport Divider from '@mui/material/Divider';\nimport { CardActionArea, useTheme } from '@mui/material';\nimport ImageGenerator from './ImageGenerator';\nimport Api from '../../../../data/api';\nimport { ApiContext } from '../../Details/ApiContext';\nimport LetterGenerator from './LetterGenerator';\n\nconst PREFIX = 'ApiThumbClassicLegacy';\n\nconst classes = {\n    card: `${PREFIX}-card`,\n    apiDetails: `${PREFIX}-apiDetails`,\n    suppressLinkStyles: `${PREFIX}-suppressLinkStyles`,\n    row: `${PREFIX}-row`,\n    thumbBy: `${PREFIX}-thumbBy`,\n    media: `${PREFIX}-media`,\n    thumbContent: `${PREFIX}-thumbContent`,\n    thumbLeft: `${PREFIX}-thumbLeft`,\n    thumbLeftAction: `${PREFIX}-thumbLeftAction`,\n    thumbRight: `${PREFIX}-thumbRight`,\n    thumbInfo: `${PREFIX}-thumbInfo`,\n    thumbHeader: `${PREFIX}-thumbHeader`,\n    contextBox: `${PREFIX}-contextBox`,\n    context: `${PREFIX}-context`,\n    thumbWrapper: `${PREFIX}-thumbWrapper`,\n    deleteIcon: `${PREFIX}-deleteIcon`,\n    textWrapper: `${PREFIX}-textWrapper`,\n    imageWrapper: `${PREFIX}-imageWrapper`,\n    imageOverlap: `${PREFIX}-imageOverlap`,\n    chipWrapper: `${PREFIX}-chipWrapper`,\n    chipWrapper2: `${PREFIX}-chipWrapper2`,\n    chipWrapper3: `${PREFIX}-chipWrapper3`,\n    ratingWrapper: `${PREFIX}-ratingWrapper`,\n    textblock: `${PREFIX}-textblock`,\n    actionArea: `${PREFIX}-actionArea`,\n    ribbon: `${PREFIX}-ribbon`,\n    truncate: `${PREFIX}-truncate`,\n    businessDetail: `${PREFIX}-businessDetail`,\n    popover: `${PREFIX}-popover`,\n    paper: `${PREFIX}-paper`,\n    typo: `${PREFIX}-typo`,\n};\n\nconst StyledCard = styled(Card)((\n    {\n        theme,\n    },\n) => ({\n    [`&.${classes.card}`]: {\n        margin: theme.spacing(3 / 2),\n        maxWidth: theme.custom.thumbnail.width,\n        transition: 'box-shadow 0.3s ease-in-out',\n        position: 'relative',\n    },\n\n    [`& .${classes.apiDetails}`]: {\n        background: theme.custom.thumbnail.contentBackgroundColor,\n        padding: theme.spacing(1),\n        color: theme.palette.getContrastText(theme.custom.thumbnail.contentBackgroundColor),\n        '& a': {\n            color: theme.palette.getContrastText(theme.custom.thumbnail.contentBackgroundColor),\n        },\n        position: theme.custom.thumbnail.contentPictureOverlap ? 'absolute' : 'relative',\n        top: 0,\n    },\n\n    [`& .${classes.suppressLinkStyles}`]: {\n        textDecoration: 'none',\n        color: theme.palette.text.disabled,\n    },\n\n    [`& .${classes.row}`]: {\n        display: 'inline-block',\n    },\n\n    [`& .${classes.thumbBy}`]: {\n        'padding-left': '5px',\n    },\n\n    [`& .${classes.media}`]: {\n        // ⚠️ object-fit is not supported by IE11.\n        objectFit: 'cover',\n    },\n\n    [`& .${classes.thumbContent}`]: {\n        width: theme.custom.thumbnail.width - theme.spacing(2),\n    },\n\n    [`& .${classes.thumbLeft}`]: {\n        alignSelf: 'flex-start',\n        flex: 1,\n        width: '25%',\n        'padding-left': '5px',\n        'padding-right': '65px',\n    },\n\n    [`& .${classes.thumbLeftAction}`]: {\n        alignSelf: 'flex-start',\n        flex: 1,\n        width: '25%',\n        'padding-left': '5px',\n        'padding-right': '10px',\n    },\n\n    [`& .${classes.thumbRight}`]: {\n        display: 'flex',\n        alignItems: 'flex-start',\n        flexDirection: 'column',\n    },\n\n    [`& .${classes.thumbInfo}`]: {\n        display: 'flex',\n    },\n\n    [`& .${classes.thumbHeader}`]: {\n        width: theme.custom.thumbnail.width - theme.spacing(1),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        'padding-left': '5px',\n    },\n\n    [`& .${classes.contextBox}`]: {\n        width: `calc((${parseInt(theme.custom.thumbnail.width, 10)}px - ${theme.spacing(1)}) / 2)`,\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        display: 'inline-block',\n        lineHeight: '1em',\n        'padding-top': 5,\n        'padding-right': 5,\n        'padding-bottom': 1.5,\n        textAlign: 'left',\n    },\n\n    [`& .${classes.context}`]: {\n        marginTop: 5,\n    },\n\n    [`& .${classes.thumbWrapper}`]: {\n        position: 'relative',\n        paddingTop: 20,\n        marginRight: theme.spacing(2),\n    },\n\n    [`& .${classes.deleteIcon}`]: {\n        fill: 'red',\n    },\n\n    [`& .${classes.textWrapper}`]: {\n        color: theme.palette.text.secondary,\n        textDecoration: 'none',\n    },\n\n    [`& .${classes.imageWrapper}`]: {\n        color: theme.custom.thumbnail.iconColor,\n        width: theme.custom.thumbnail.width,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n\n    [`& .${classes.imageOverlap}`]: {\n        position: 'absolute',\n        bottom: 1,\n    },\n\n    [`& .${classes.chipWrapper}`]: {\n        marginTop: '15px',\n    },\n\n    [`& .${classes.chipWrapper2}`]: {\n        marginBottom: '10px',\n    },\n\n    [`& .${classes.chipWrapper3}`]: {\n        marginTop: '12px',\n    },\n\n    [`& .${classes.ratingWrapper}`]: {\n        marginTop: '20px',\n    },\n\n    [`& .${classes.textblock}`]: {\n        color: theme.palette.text.secondary,\n        position: 'absolute',\n        bottom: '35px',\n        right: '10px',\n        background: theme.custom.thumbnail.contentBackgroundColor,\n        'padding-left': '10px',\n        'padding-right': '10px',\n    },\n\n    [`& .${classes.actionArea}`]: {\n        display: 'block !important',\n        '&:focus': {\n            border: '1px solid' + theme.palette.primary.main,\n        },\n    },\n\n    [`& .${classes.ribbon}`]: {\n        fontFamily: theme.typography.fontFamily,\n        fontSize: '12px',\n        fontWeight: 800,\n        backgroundColor: theme.palette.primary.main,\n        color: 'white',\n        position: 'absolute',\n        padding: '5px',\n        width: '80px',\n        zIndex: 3,\n        textAlign: 'center',\n        textTransform: 'uppercase',\n    },\n\n    [`& .${classes.truncate}`]: {\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        maxWidth: '175px',\n    },\n\n    [`& .${classes.businessDetail}`]: {\n        display: 'flex',\n    },\n\n    [`& .${classes.popover}`]: {\n        pointerEvents: 'none',\n    },\n\n    [`& .${classes.paper}`]: {\n        padding: theme.spacing(1),\n        maxWidth: '300px',\n    },\n\n    [`& .${classes.typo}`]: {\n        display: 'flex',\n    },\n}));\n\nconst windowURL = window.URL || window.webkitURL;\n\n/**\n *\n * Render API Card component in API listing card view,containing essential API information like name , version ect\n * @class APIThumb\n * @extends {Component}\n */\nclass ApiThumbClassicLegacy extends React.Component {\n    /**\n     *Creates an instance of APIThumb.\n     * @param {*} props\n     * @memberof APIThumb\n     */\n    constructor(props) {\n        super(props);\n        const { theme: { custom: { thumbnail: { defaultApiImage } } } } = props;\n        this.state = {\n            category: MaterialIcons.categories[0].name,\n            selectedIcon: null,\n            color: null,\n            backgroundIndex: null,\n            imageObj: null,\n            imageLoaded: !!defaultApiImage, // Convert the image string to boolean value.\n            businessAnchorEl: null,\n            buniessOpenPopover: false,\n            technicalAnchorEl: null,\n            technicalOpenPopover: false,\n        };\n    }\n\n    /**\n     *\n     *\n     * @memberof ApiThumb\n     */\n    componentDidMount() {\n        const { imageLoaded } = this.state;\n        if (imageLoaded) return;\n        const { api } = this.props;\n        const restApi = new Api();\n\n        const promisedThumbnail = restApi.getAPIThumbnail(api.id);\n        promisedThumbnail.then((response) => {\n            if (response && response.data) {\n                if (response.headers['content-type'] === 'application/json') {\n                    const iconJson = JSON.parse(response.data);\n                    this.setState({\n                        selectedIcon: iconJson.key,\n                        category: iconJson.category,\n                        color: iconJson.color,\n                        backgroundIndex: iconJson.backgroundIndex,\n                    });\n                } else if (response && response.data.size > 0) {\n                    const url = windowURL.createObjectURL(response.data);\n                    this.setState({ imageObj: url });\n                }\n            }\n        }).finally(() => {\n            this.setState({ imageLoaded: true });\n        });\n    }\n\n    /**\n     * Clean up resource\n     */\n    componentWillUnmount() {\n        if (this.state.thumbnail) {\n            windowURL.revokeObjectURL(this.state.imageObj);\n        }\n    }\n\n    /**\n     * Get Path Prefix depedning on the respective API Type being rendered\n     *\n     * @returns {String} path\n     * @memberof ApiThumb\n     */\n    getPathPrefix() {\n        const path = '/apis/';\n        return path;\n    }\n\n    handleBusinessPopoverOpen = (event) => {\n        this.setState({ businessAnchorEl: event.currentTarget, buniessOpenPopover: true });\n    };\n\n    handleBusinessPopoverClose = () => {\n        this.setState({ businessAnchorEl: null, buniessOpenPopover: false });\n    };\n\n    handleTechnicalPopoverOpen = (event) => {\n        this.setState({ technicalAnchorEl: event.currentTarget, technicalOpenPopover: true });\n    };\n\n    handleTechnicalPopoverClose = () => {\n        this.setState({ technicalAnchorEl: null, technicalOpenPopover: false });\n    };\n\n    /**\n     * @inheritdoc\n     * @returns {React.Component} @inheritdoc\n     * @memberof APIThumb\n     */\n    render() {\n        const {\n            imageObj, selectedIcon, color, backgroundIndex, category, imageLoaded,\n        } = this.state;\n        const path = this.getPathPrefix();\n        const { isMonetizationEnabled } = this.context;\n\n        const detailsLink = path + this.props.api.id;\n        const {\n            api, theme, customWidth, customHeight, showInfo,\n        } = this.props;\n        const { custom: { thumbnail, social: { showRating }, thumbnailTemplates: { variant, active } } } = theme;\n        const { name, version, context } = api;\n\n        let { provider } = api;\n        if (\n            api.businessInformation\n            && api.businessInformation.businessOwner\n            && api.businessInformation.businessOwner.trim() !== ''\n        ) {\n            provider = api.businessInformation.businessOwner;\n        }\n        if (!api.lifeCycleStatus) {\n            api.lifeCycleStatus = api.status;\n        }\n        const imageWidth = customWidth || thumbnail.width;\n        const imageHeight = customHeight || 140;\n        const defaultImage = thumbnail.defaultApiImage;\n        const { tileDisplayInfo } = apis;\n\n        const showChips = () => {\n            if (api.lifeCycleStatus === 'PROTOTYPED') {\n                if ((api.type === 'GRAPHQL' || api.transportType === 'GRAPHQL')) {\n                    // GraphQL APIs in prototyped status.\n                    return (\n                        <div className='api-thumb-chip-main'>\n                            <Typography\n                                variant='subtitle1'\n                                gutterBottom\n                                align='right'\n                                className={classNames(classes.chipWrapper2, 'api-thumb-chip-wrapper')}\n                            >\n                                <Chip\n                                    label={api.transportType === undefined ? api.type : api.transportType}\n                                    color='primary'\n                                />\n                            </Typography>\n                            <Typography\n                                variant='subtitle1'\n                                gutterBottom\n                                align='right'\n                                className={classes.chipWrapper3}\n                            >\n                                <Chip\n                                    label='PRE-RELEASED'\n                                    color='default'\n                                />\n                            </Typography>\n                        </div>\n                    );\n                } else if ((api.gatewayType === 'solace')) {\n                    // Solace APIs in prototyped status.\n                    return (\n                        <div className='api-thumb-chip-main'>\n                            <Typography\n                                variant='subtitle1'\n                                gutterBottom\n                                align='right'\n                                className={classes.chipWrapper2}\n                            >\n                                <Chip\n                                    label='SOLACE'\n                                    color='primary'\n                                />\n                            </Typography>\n                            <Typography\n                                variant='subtitle1'\n                                gutterBottom\n                                align='right'\n                                className={classes.chipWrapper3}\n                            >\n                                <Chip\n                                    label='PRE-RELEASED'\n                                    color='default'\n                                />\n                            </Typography>\n                        </div>\n                    );\n                } else {\n                    // APIs in prototyped status.\n                    return (\n                        <div className='api-thumb-chip-main'>\n                            <Chip\n                                label='PRE-RELEASED'\n                                color='default'\n                            />\n                        </div>\n                    );\n                }\n            } else {\n                // GraphQL APIs which are not in prototyped status.\n                if ((api.type === 'GRAPHQL' || api.transportType === 'GRAPHQL')) {\n                    return (\n                        <div className='api-thumb-chip-main'>\n                            <Chip\n                                label={api.transportType === undefined ? api.type : api.transportType}\n                                color='primary'\n                            />\n                        </div>\n                    );\n                }\n\n                // Solace APIs which are not in prototyped status.\n                if ((api.gatewayType === 'solace')) {\n                    return (\n                        <div className='api-thumb-chip-main'>\n                            <Chip\n                                data-testid='solace-label'\n                                label='SOLACE'\n                                color='primary'\n                            />\n                        </div>\n                    );\n                }\n            }\n            return null;\n        };\n\n        let ImageView;\n        if (!imageLoaded) {\n            ImageView = (\n                <div className='image-load-frame'>\n                    <div className='image-load-animation1' />\n                    <div className='image-load-animation2' />\n                </div>\n            );\n        } else if (imageObj) {\n            ImageView = (\n                <img\n                    height={imageHeight}\n                    width={imageWidth}\n                    src={imageObj}\n                    alt='API Thumbnail'\n                    className={classes.media}\n                />\n            );\n        } else {\n            ImageView = (variant === 'text' && active) ? (\n                <LetterGenerator\n                    width={imageWidth}\n                    height={imageHeight}\n                    artifact={api}\n                />\n            ) : (\n                <ImageGenerator\n                    width={imageWidth}\n                    height={imageHeight}\n                    api={api}\n                    fixedIcon={{\n                        key: selectedIcon,\n                        color: color || thumbnail.iconColor,\n                        backgroundIndex,\n                        category,\n                        api,\n                    }}\n                />\n            );\n        }\n        if (!showInfo) {\n            return (\n                <div className='api-thumb-image-view'>\n                    {!defaultImage && ImageView}\n                    {defaultImage && <img src={app.context + defaultImage} alt='img' />}\n                </div>\n            );\n        }\n        return (\n            <StyledCard className={classNames('image-thumbnail', classes.card)}>\n                <CardActionArea>\n                    {api.advertiseInfo && api.advertiseInfo.advertised && (\n                        <div className={classes.ribbon} data-testid='third-party-api-card-label'>third party</div>\n                    )}\n                    {isMonetizationEnabled && (\n                        <div className={classNames(classes.textblock, 'image-thumb-text-block')}>{api.monetizationLabel}</div>\n                    )}\n                    <Link\n                        className={classNames(classes.actionArea, 'image-thumb-action-area')}\n                        to={detailsLink}\n                        area-label={'Go to ' + name}\n                    >\n                        <div style={{ position: 'relative' }}>\n                            <CardMedia area-hidden='true' classes={{ root: 'image-thumb-card-root' }}>\n                                {!defaultImage && ImageView}\n                                {defaultImage && <img src={app.context + defaultImage} alt='img' />}\n                            </CardMedia>\n                            {tileDisplayInfo.showMonetizedState && api.monetizedInfo && (\n                                <div className={classes.thumbLeft} style={{ position: 'absolute', bottom: 0 }}>\n                                    <MonetizationOnIcon fontSize='medium' style={{ color: '#FFD700', paddingLeft: '2px' }} />\n                                </div>\n                            )}\n                        </div>\n                        <CardContent classes={{ root: classNames(classes.apiDetails, 'image-thumb-card-content') }}>\n                            <Typography\n                                className={classNames(classes.thumbHeader, 'image-thumb-card-thumb-header')}\n                                variant='h5'\n                                component='h2'\n                                gutterBottom\n                                onClick={this.handleRedirectToAPIOverview}\n                                title={name}\n                            >\n                                {name}\n                            </Typography>\n                            <div className={classNames(classes.row, 'image-thumb-provider-wrapper')}>\n                                <Typography\n                                    variant='caption'\n                                    gutterBottom\n                                    align='left'\n                                    className={classNames(classes.thumbBy, 'image-thumb-provider')}\n                                >\n                                    <FormattedMessage defaultMessage='By' id='Apis.Listing.ApiThumb.by' />\n                                    <FormattedMessage defaultMessage=' : ' id='Apis.Listing.ApiThumb.by.colon' />\n                                    {provider}\n                                </Typography>\n                            </div>\n                            <div className={classNames(classes.thumbInfo, 'image-thumb-info')}>\n                                <div className={classNames(classes.row, 'image-thumb-row')}>\n                                    <div className={classNames(classes.thumbLeft, 'image-thumb-left-version')}>\n                                        <Typography variant='subtitle1' component='div'>{version}</Typography>\n                                        <Typography variant='caption' component='div' gutterBottom align='left'>\n                                            <FormattedMessage defaultMessage='Version' id='Apis.Listing.ApiThumb.version' />\n                                        </Typography>\n                                    </div>\n                                </div>\n                                <div className={classNames(classes.row, 'image-thumb-context')}>\n                                    <div className={classes.thumbRight}>\n                                        <Typography\n                                            variant='subtitle1'\n                                            component='div'\n                                            align='right'\n                                            className={classes.contextBox}\n                                        >\n                                            {context}\n                                        </Typography>\n                                        <Typography\n                                            variant='caption'\n                                            gutterBottom\n                                            align='right'\n                                            className={classes.context}\n                                            Component='div'\n                                        >\n                                            <FormattedMessage defaultMessage='Context' id='Apis.Listing.ApiThumb.context' />\n                                        </Typography>\n                                    </div>\n                                </div>\n                            </div>\n                            {(tileDisplayInfo.showBusinessDetails || tileDisplayInfo.showTechnicalDetails) && (\n                                <>\n                                    <Box mt={1} mb={1}>\n                                        <Divider />\n                                        <div>\n                                            <div className={classes.row}>\n                                                <div className={classes.thumbLeft}>\n                                                    <Typography variant='body2' gutterBottom align='left'>\n                                                        <FormattedMessage defaultMessage='Owners' id='Apis.Listing.ApiThumb.owners' />\n                                                    </Typography>\n                                                </div>\n                                                {tileDisplayInfo.showBusinessDetails && (\n                                                    <div>\n                                                        <Typography\n                                                            variant='caption'\n                                                            gutterBottom\n                                                            align='left'\n                                                            onMouseEnter={this.handleBusinessPopoverOpen}\n                                                            onMouseLeave={this.handleBusinessPopoverClose}\n                                                            className={classes.typo}\n                                                        >\n                                                            <div style={{ paddingLeft: '5px', whiteSpace: 'nowrap', paddingRight: '5px' }}>\n                                                                <FormattedMessage\n                                                                    defaultMessage='Business'\n                                                                    id='Apis.Listing.ApiThumb.owners.business'\n                                                                />\n                                                                {' : '}\n                                                            </div>\n                                                            <div className={classes.truncate}>\n                                                                {api.businessInformation.businessOwner\n                                                                    ? (api.businessInformation.businessOwner)\n                                                                    : (\n                                                                        <span\n                                                                            style={{ color: '#808080', fontWeight: 'bold' }}\n                                                                        >\n                                                                            Not Provided\n                                                                        </span>\n                                                                    )}\n                                                            </div>\n                                                        </Typography>\n                                                        {api.businessInformation.businessOwnerEmail && (\n                                                            <Popover\n                                                                id='mouse-over-popover'\n                                                                className={classes.popover}\n                                                                classes={{\n                                                                    paper: classes.paper,\n                                                                }}\n                                                                open={this.state.buniessOpenPopover}\n                                                                anchorEl={this.state.businessAnchorEl}\n                                                                anchorOrigin={{\n                                                                    vertical: 'top',\n                                                                    horizontal: 'right',\n                                                                }}\n                                                                transformOrigin={{\n                                                                    vertical: 'bottom',\n                                                                    horizontal: 'left',\n                                                                }}\n                                                                onClose={this.handleBusinessPopoverClose}\n                                                                disableRestoreFocus\n                                                            >\n                                                                <div style={{\n                                                                    display: 'flex',\n                                                                    flexDirection: 'row',\n                                                                    alignItems: 'center',\n                                                                }}\n                                                                >\n                                                                    <EmailIcon fontSize='small' />\n                                                                    <Typography\n                                                                        variant='body2'\n                                                                        style={{ marginLeft: '8px' }}\n                                                                    >\n                                                                        {api.businessInformation.businessOwnerEmail}\n                                                                    </Typography>\n                                                                </div>\n                                                            </Popover>\n                                                        )}\n                                                    </div>\n                                                )}\n                                                {tileDisplayInfo.showTechnicalDetails && (\n                                                    <div>\n                                                        <Typography\n                                                            variant='caption'\n                                                            gutterBottom\n                                                            align='left'\n                                                            onMouseEnter={this.handleTechnicalPopoverOpen}\n                                                            onMouseLeave={this.handleTechnicalPopoverClose}\n                                                            className={classes.typo}\n                                                        >\n                                                            <div\n                                                                style={{\n                                                                    paddingLeft: '5px',\n                                                                    whiteSpace: 'nowrap',\n                                                                    paddingRight: '5px',\n                                                                }}\n                                                            >\n                                                                <FormattedMessage\n                                                                    defaultMessage='Technical'\n                                                                    id='Apis.Listing.ApiThumb.owners.technical'\n                                                                />\n                                                                {' : '}\n                                                            </div>\n                                                            <div className={classes.truncate}>\n                                                                {api.businessInformation.technicalOwner\n                                                                    ? (api.businessInformation.technicalOwner)\n                                                                    : (\n                                                                        <span\n                                                                            style={{\n                                                                                color: '#808080',\n                                                                                fontWeight: 'bold',\n                                                                            }}\n                                                                        >\n                                                                            Not Provided\n                                                                        </span>\n                                                                    )}\n                                                            </div>\n                                                        </Typography>\n                                                        {api.businessInformation.technicalOwnerEmail && (\n                                                            <Popover\n                                                                id='mouse-over-popover'\n                                                                className={classes.popover}\n                                                                classes={{\n                                                                    paper: classes.paper,\n                                                                }}\n                                                                open={this.state.technicalOpenPopover}\n                                                                anchorEl={this.state.technicalAnchorEl}\n                                                                anchorOrigin={{\n                                                                    vertical: 'top',\n                                                                    horizontal: 'right',\n                                                                }}\n                                                                transformOrigin={{\n                                                                    vertical: 'bottom',\n                                                                    horizontal: 'left',\n                                                                }}\n                                                                onClose={this.handleTechnicalPopoverClose}\n                                                                disableRestoreFocus\n                                                            >\n                                                                <div style={{\n                                                                    display: 'flex',\n                                                                    flexDirection: 'row',\n                                                                    alignItems: 'center',\n                                                                }}\n                                                                >\n                                                                    <EmailIcon fontSize='small' />\n                                                                    <Typography\n                                                                        variant='body2'\n                                                                        style={{ marginLeft: '8px' }}\n                                                                    >\n                                                                        {api.businessInformation.technicalOwnerEmail}\n                                                                    </Typography>\n                                                                </div>\n                                                            </Popover>\n                                                        )}\n                                                    </div>\n                                                )}\n                                            </div>\n                                        </div>\n                                        <Divider />\n                                    </Box>\n                                </>\n                            )}\n                            <div className={classNames(classes.thumbInfo, 'api-thumb-rating-chip-wrapper')}>\n                                {showRating && (\n                                    <div className={classNames(classes.thumbLeftAction, 'api-thumb-rating-wrapper')}>\n                                        <Typography\n                                            variant='subtitle1'\n                                            component='div'\n                                            aria-label='API Rating'\n                                            gutterBottom\n                                            align='left'\n                                            className={classNames('api-thumb-rating', classes.ratingWrapper)}\n                                        >\n                                            <StarRatingBar\n                                                apiRating={api.avgRating}\n                                                apiId={api.id}\n                                                isEditable={false}\n                                                showSummary={false}\n                                            />\n                                        </Typography>\n                                    </div>\n                                )}\n                                <div className={classNames(classes.thumbRight, 'api-thumb-chips-wrapper')}>\n                                    <Typography\n                                        variant='subtitle1'\n                                        component='div'\n                                        gutterBottom\n                                        align='right'\n                                        className={classes.chipWrapper}\n                                    >\n                                        {showChips()}\n                                    </Typography>\n                                </div>\n                            </div>\n                        </CardContent>\n                    </Link>\n                </CardActionArea>\n            </StyledCard>\n        );\n    }\n}\nApiThumbClassicLegacy.defaultProps = {\n    customWidth: null,\n    customHeight: null,\n    showInfo: true,\n};\nApiThumbClassicLegacy.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    customWidth: PropTypes.number,\n    customHeight: PropTypes.number,\n    showInfo: PropTypes.bool,\n};\n\nApiThumbClassicLegacy.contextType = ApiContext;\n\nfunction ApiThumbClassic(props) {\n    const theme = useTheme();\n    return (\n        <ApiThumbClassicLegacy\n            {...props}\n            theme={theme}\n        />\n    );\n}\n\nexport default (ApiThumbClassic);\n","const getIcon = (key, category, theme, api) => {\n    let IconElement;\n\n    // Creating the icon\n    if (key && category) {\n        IconElement = key;\n    } else if (api.type === 'DOC') {\n        IconElement = theme.custom.thumbnail.document.icon;\n    } else {\n        IconElement = 'settings';\n    }\n    return IconElement;\n};\n\nexport default getIcon;\n","import React, { useEffect, useState } from 'react';\nimport { styled, useTheme } from '@mui/material/styles';\nimport Icon from '@mui/material/Icon';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Chip from '@mui/material/Chip';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport StarRatingBar from 'AppComponents/Apis/Listing/StarRatingBar';\nimport { app, apis } from 'Settings';\nimport Api from 'AppData/api';\nimport Popover from '@mui/material/Popover';\nimport classNames from 'classnames';\nimport MonetizationOnIcon from '@mui/icons-material/MonetizationOn';\nimport EmailIcon from '@mui/icons-material/Email';\n\nimport getIcon from './ImageUtils';\n\nconst PREFIX = 'APIThumbPlain';\n\nconst classes = {\n    root: `${PREFIX}-root`,\n    bullet: `${PREFIX}-bullet`,\n    title: `${PREFIX}-title`,\n    pos: `${PREFIX}-pos`,\n    thumbHeader: `${PREFIX}-thumbHeader`,\n    contextBox: `${PREFIX}-contextBox`,\n    caption: `${PREFIX}-caption`,\n    imageDisplay: `${PREFIX}-imageDisplay`,\n    typo: `${PREFIX}-typo`,\n    truncate: `${PREFIX}-truncate`,\n    popover: `${PREFIX}-popover`,\n    paper: `${PREFIX}-paper`,\n    ribbon: `${PREFIX}-ribbon`,\n};\n\nconst StyledCard = styled(Card)((\n    {\n        theme,\n    },\n) => ({\n    [`&.${classes.root}`]: {\n        minWidth: 200,\n        marginTop: 10,\n    },\n\n    [`& .${classes.bullet}`]: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n\n    [`& .${classes.title}`]: {\n        fontSize: 14,\n    },\n\n    [`& .${classes.pos}`]: {\n        marginBottom: 12,\n    },\n\n    [`& .${classes.thumbHeader}`]: {\n        width: '150px',\n        color: '#444',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        'padding-left': '5px',\n    },\n\n    [`& .${classes.contextBox}`]: {\n        maxWidth: 120,\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        paddingLeft: '5px',\n    },\n\n    [`& .${classes.caption}`]: {\n        color: theme.palette.grey[700],\n    },\n\n    [`& .${classes.imageDisplay}`]: {\n        maxWidth: '40px',\n        maxHeight: '40px',\n    },\n\n    [`& .${classes.typo}`]: {\n        display: 'flex',\n    },\n\n    [`& .${classes.truncate}`]: {\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        maxWidth: '175px',\n    },\n\n    [`& .${classes.popover}`]: {\n        pointerEvents: 'none',\n    },\n\n    [`& .${classes.paper}`]: {\n        padding: theme.spacing(1),\n        maxWidth: '300px',\n    },\n\n    [`& .${classes.ribbon}`]: {\n        fontFamily: theme.typography.fontFamily,\n        fontSize: '12px',\n        fontWeight: 800,\n        color: '#616161',\n        position: 'absolute',\n        padding: '5px',\n        width: '80px',\n        zIndex: 3,\n        textAlign: 'center',\n        textTransform: 'uppercase',\n    },\n}));\n\nconst windowURL = window.URL || window.webkitURL;\n\n/**\n * @param {JSON} props props passed from parent\n * @returns {JSX} plain api thumbnail\n */\nfunction APIThumbPlain(props) {\n    const theme = useTheme();\n\n    const { api, showInfo } = props;\n    const { custom: { thumbnail, social: { showRating } } } = theme;\n    const {\n        name, version, context, provider,\n    } = api;\n\n    const [imageConf, setImageConf] = useState({\n        selectedIcon: '',\n        category: '',\n        color: '#ccc',\n    });\n    const [imageObj, setIMageObj] = useState(null);\n    const [imageLoaded, setImageLoaded] = useState(false);\n    const { tileDisplayInfo } = apis;\n    const [businessAnchorEl, setBusinessAnchorEl] = useState(null);\n    const [technicalAnchorEl, setTechnicalAnchorEl] = useState(null);\n    const [businessOpenPopover, setBusinessOpenPopover] = useState(false);\n    const [technicalOpenPopover, setTechnicalOpenPopover] = useState(false);\n\n    useEffect(() => {\n        const restApi = new Api();\n\n        const promisedThumbnail = restApi.getAPIThumbnail(api.id);\n\n        promisedThumbnail.then((response) => {\n            if (response && response.data) {\n                if (response.headers['content-type'] === 'application/json') {\n                    const iconJson = JSON.parse(response.data);\n                    setImageConf({\n                        selectedIcon: iconJson.key,\n                        category: iconJson.category,\n                        color: iconJson.color,\n                    });\n                } else if (response && response.data.size > 0) {\n                    setIMageObj(windowURL.createObjectURL(response.data));\n                }\n            }\n        }).finally(() => {\n            setImageLoaded(true);\n        });\n    }, []);\n    let ImageView;\n    if (!imageLoaded) {\n        ImageView = (\n            <div className='image-load-frame'>\n                <div className='image-load-animation1' />\n                <div className='image-load-animation2' />\n            </div>\n        );\n    } else if (imageObj) {\n        ImageView = (\n            <img\n                src={imageObj}\n                alt='API Thumbnail'\n                className={classes.imageDisplay}\n            />\n        );\n    } else {\n        ImageView = (\n            <Icon className={classes.icon} style={{ fontSize: 40 + 'px', color: imageConf.color }}>\n                {getIcon(imageConf.selectedIcon, imageConf.category, theme, api)}\n            </Icon>\n        );\n    }\n\n    if (!showInfo) {\n        return (\n            <Link to={'/apis/' + api.id} aria-hidden='true'>\n                <Box display='flex'>\n                    <Box>\n                        {!thumbnail.defaultApiImage && ImageView}\n                        {thumbnail.defaultApiImage && <img src={app.context + thumbnail.defaultApiImage} alt='img' />}\n                    </Box>\n                </Box>\n\n            </Link>\n        );\n    }\n\n    const handleBusinessPopoverOpen = (event) => {\n        setBusinessOpenPopover(true);\n        setBusinessAnchorEl(event.currentTarget);\n    };\n\n    const handleBusinessPopoverClose = () => {\n        setBusinessAnchorEl(null);\n        setBusinessOpenPopover(false);\n    };\n\n    const handleTechnicalPopoverOpen = (event) => {\n        setTechnicalAnchorEl(event.currentTarget);\n        setTechnicalOpenPopover(true);\n    };\n\n    const handleTechnicalPopoverClose = () => {\n        setTechnicalAnchorEl(null);\n        setTechnicalOpenPopover(false);\n    };\n\n    return (\n        <StyledCard className={classes.root} variant='outlined'>\n            <Box mb={2} pl={1}>\n                {api.advertiseInfo && api.advertiseInfo.advertised && (\n                    <div className={classes.ribbon}>third party</div>\n                )}\n            </Box>\n            <CardContent>\n                <Box>\n                    <Link to={'/apis/' + api.id} aria-hidden='true'>\n                        <Box display='flex'>\n                            <Box>\n                                {!thumbnail.defaultApiImage && ImageView}\n                                {thumbnail.defaultApiImage && <img src={app.context + thumbnail.defaultApiImage} alt='img' />}\n                            </Box>\n                            <Typography\n                                variant='h5'\n                                gutterBottom\n                                title={name}\n                                className={classes.thumbHeader}\n                            >\n                                {name}\n                            </Typography>\n                        </Box>\n\n                    </Link>\n                </Box>\n                <Box display='flex'>\n                    <Box flex={1}>\n                        {provider && (\n                            <>\n                                <Typography variant='caption' gutterBottom align='left' className={classes.caption} component='span'>\n                                    <FormattedMessage defaultMessage='By' id='Apis.Listing.ApiThumb.by' />\n                                    <FormattedMessage defaultMessage=' : ' id='Apis.Listing.ApiThumb.by.colon' />\n                                </Typography>\n                                <Typography variant='body2' component='span'>{provider}</Typography>\n                            </>\n                        )}\n                    </Box>\n                    <Box>\n                        {api.monetizedInfo && tileDisplayInfo.showMonetizedState && (\n                            <MonetizationOnIcon fontSize='medium' />\n                        )}\n                    </Box>\n                </Box>\n                <Box display='flex' mt={2}>\n                    <Box flex={1}>\n                        <Typography variant='subtitle1'>{version}</Typography>\n                        <Typography variant='caption' gutterBottom align='left' className={classes.caption}>\n                            <FormattedMessage defaultMessage='Version' id='Apis.Listing.ApiThumb.version' />\n                        </Typography>\n                    </Box>\n                    <Box>\n                        <Typography variant='subtitle1' align='right' className={classes.contextBox}>\n                            {context}\n                        </Typography>\n                        <Typography\n                            variant='caption'\n                            gutterBottom\n                            align='right'\n                            className={classes.caption}\n                            Component='div'\n                        >\n                            <FormattedMessage defaultMessage='Context' id='Apis.Listing.ApiThumb.context' />\n                        </Typography>\n                    </Box>\n                </Box>\n                {(tileDisplayInfo.showBusinessDetails || tileDisplayInfo.showTechnicalDetails) && (\n                    <>\n                        <hr />\n                        <div>\n                            <div>\n                                <div>\n                                    <Typography variant='body2' gutterBottom align='left'>\n                                        <FormattedMessage\n                                            defaultMessage='Owners'\n                                            id='Apis.Listing.ApiThumb.owners'\n                                        />\n                                    </Typography>\n                                </div>\n                                {tileDisplayInfo.showBusinessDetails && (\n                                    <div>\n                                        <Typography\n                                            variant='caption'\n                                            gutterBottom\n                                            align='left'\n                                            onMouseEnter={handleBusinessPopoverOpen}\n                                            onMouseLeave={handleBusinessPopoverClose}\n                                            className={classes.typo}\n                                        >\n                                            <div style={{\n                                                whiteSpace: 'nowrap',\n                                                paddingRight: '5px',\n                                            }}\n                                            >\n                                                <FormattedMessage\n                                                    defaultMessage='Business'\n                                                    id='Apis.Listing.ApiThumb.owners.business'\n                                                />\n                                                {' : '}\n                                            </div>\n                                            <div className={classes.truncate}>\n                                                {api.businessInformation.businessOwner\n                                                    ? (api.businessInformation.businessOwner)\n                                                    : (\n                                                        <span\n                                                            style={{ color: '#808080', fontWeight: 'bold' }}\n                                                        >\n                                                            Not Provided\n                                                        </span>\n                                                    )}\n                                            </div>\n                                        </Typography>\n                                        {api.businessInformation.businessOwnerEmail && (\n                                            <Popover\n                                                id='mouse-over-popover'\n                                                className={classes.popover}\n                                                classes={{\n                                                    paper: classes.paper,\n                                                }}\n                                                open={businessOpenPopover}\n                                                anchorEl={businessAnchorEl}\n                                                anchorOrigin={{\n                                                    vertical: 'top',\n                                                    horizontal: 'right',\n                                                }}\n                                                transformOrigin={{\n                                                    vertical: 'bottom',\n                                                    horizontal: 'left',\n                                                }}\n                                                onClose={handleBusinessPopoverClose}\n                                                disableRestoreFocus\n                                            >\n                                                <div style={{\n                                                    display: 'flex',\n                                                    flexDirection: 'column',\n                                                }}\n                                                >\n                                                    <div style={{ display: 'flex' }}>\n                                                        <EmailIcon fontSize='small' />\n                                                        <Typography\n                                                            variant='body2'\n                                                            style={{ marginLeft: '8px' }}\n                                                        >\n                                                            {api.businessInformation.businessOwnerEmail}\n                                                        </Typography>\n                                                    </div>\n                                                </div>\n                                            </Popover>\n                                        )}\n                                    </div>\n                                )}\n                                {tileDisplayInfo.showTechnicalDetails && (\n                                    <div>\n                                        <Typography\n                                            variant='caption'\n                                            gutterBottom\n                                            align='left'\n                                            onMouseEnter={handleTechnicalPopoverOpen}\n                                            onMouseLeave={handleTechnicalPopoverClose}\n                                            className={classes.typo}\n                                        >\n                                            <div style={{\n                                                whiteSpace: 'nowrap',\n                                                paddingRight: '5px',\n                                            }}\n                                            >\n                                                <FormattedMessage\n                                                    defaultMessage='Technical'\n                                                    id='Apis.Listing.ApiThumb.owners.technical'\n                                                />\n                                                {' : '}\n                                            </div>\n                                            <div className={classes.truncate}>\n                                                {api.businessInformation.technicalOwner\n                                                    ? (api.businessInformation.technicalOwner)\n                                                    : (\n                                                        <span\n                                                            style={{ color: '#808080', fontWeight: 'bold' }}\n                                                        >\n                                                            Not Provided\n                                                        </span>\n                                                    )}\n                                            </div>\n                                        </Typography>\n                                        {api.businessInformation.technicalOwnerEmail && (\n                                            <Popover\n                                                id='mouse-over-popover'\n                                                className={classes.popover}\n                                                classes={{\n                                                    paper: classes.paper,\n                                                }}\n                                                open={technicalOpenPopover}\n                                                anchorEl={technicalAnchorEl}\n                                                anchorOrigin={{\n                                                    vertical: 'top',\n                                                    horizontal: 'right',\n                                                }}\n                                                transformOrigin={{\n                                                    vertical: 'bottom',\n                                                    horizontal: 'left',\n                                                }}\n                                                onClose={handleTechnicalPopoverClose}\n                                                disableRestoreFocus\n                                            >\n                                                <div style={{\n                                                    display: 'flex',\n                                                    flexDirection: 'column',\n                                                }}\n                                                >\n                                                    <div style={{ display: 'flex' }}>\n                                                        <EmailIcon fontSize='small' />\n                                                        <Typography\n                                                            variant='body2'\n                                                            style={{ marginLeft: '8px' }}\n                                                        >\n                                                            {api.businessInformation.technicalOwnerEmail}\n                                                        </Typography>\n                                                    </div>\n                                                </div>\n                                            </Popover>\n                                        )}\n                                    </div>\n                                )}\n                            </div>\n                        </div>\n                        <hr />\n                    </>\n                )}\n\n                <Box display='flex' mt={2}>\n                    {showRating && (\n                        <Box flex={1}>\n                            <Typography\n                                variant='subtitle1'\n                                gutterBottom\n                                align='left'\n                                className={classNames('api-thumb-rating', classes.ratingWrapper)}\n                            >\n                                <StarRatingBar\n                                    apiRating={api.avgRating}\n                                    apiId={api.id}\n                                    isEditable={false}\n                                    showSummary={false}\n                                />\n                            </Typography>\n                        </Box>\n                    )}\n                    <Box>\n                        <Typography\n                            variant='subtitle1'\n                            gutterBottom\n                            align='right'\n                            className={classes.chipWrapper}\n                        >\n                            {(api.type === 'GRAPHQL' || api.transportType === 'GRAPHQL') && (\n                                <Chip\n                                    label={api.transportType === undefined ? api.type : api.transportType}\n                                    color='primary'\n                                />\n                            )}\n                            {(api.lifeCycleStatus === 'PROTOTYPED') && (\n                                <Chip\n                                    label={api.apiType === 'APIProduct' ? api.state : 'PROTOTYPE'}\n                                    color='default'\n                                />\n                            )}\n                        </Typography>\n                    </Box>\n                </Box>\n            </CardContent>\n        </StyledCard>\n    );\n}\n\nAPIThumbPlain.defaultProps = {\n    showInfo: true,\n};\nAPIThumbPlain.propTypes = {\n    showInfo: PropTypes.bool,\n};\n\nexport default APIThumbPlain;\n","import React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport ApiThumbClassic from 'AppComponents/Apis/Listing/APICards/ApiThumbClassic';\nimport APIThumbPlain from 'AppComponents/Apis/Listing/APICards/APIThumbPlain';\n\n/**\n * Render no api section\n * @param {JSON} props properties passed from parent\n * @returns {void}\n */\nexport default function ApiThumb(props) {\n    const theme = useTheme();\n    const { custom } = theme;\n    if (!custom.thumbnailTemplates || !custom.thumbnailTemplates.active) {\n        return (\n            <ApiThumbClassic {...props} />\n        );\n    }\n    const { thumbnailTemplates: { variant, active } } = custom;\n    if (active && variant === 'plain') {\n        return (\n            <APIThumbPlain {...props} />\n        );\n    }\n    if (active && variant === 'text') {\n        return (\n            <ApiThumbClassic {...props} />\n        );\n    }\n}\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { styled } from '@mui/material/styles';\nimport StarRate from '@mui/icons-material/StarRate';\nimport Icon from '@mui/material/Icon';\nimport Typography from '@mui/material/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport { useTheme } from '@mui/material';\n\nconst PREFIX = 'StarRatingSummary';\n\nconst classes = {\n    starRate: `${PREFIX}-starRate`,\n    userRating: `${PREFIX}-userRating`,\n};\n\n// TODO jss-to-styled codemod: The Fragment root was replaced by div. Change the tag if needed.\nconst Root = styled('div')((\n    {\n        theme,\n    },\n) => ({\n    [`& .${classes.starRate}`]: {\n        marginRight: theme.spacing(),\n        color: theme.custom.infoBar.starColor || theme.palette.getContrastText(theme.custom.infoBar.background),\n        '&.material-icons': {\n            fontSize: 30,\n        },\n    },\n\n    [`& .${classes.userRating}`]: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n    },\n}));\n\n/**\n *\n * @param {JSON} props props passed from parent\n * @returns {JSX} summary of the rating\n */\nfunction StarRatingSummary(props) {\n    const {\n        avgRating, reviewCount, returnCount,\n    } = props;\n    const theme = useTheme();\n    return (\n        <Root>\n            {returnCount > 0 ? (\n                <>\n                    <Icon className={classes.starRate}>star</Icon>\n                    <div className={classes.ratingSummary}>\n                        <div aria-label='User rating' className={classes.userRating}>\n                            <Typography variant='body1'>{avgRating}</Typography>\n                            <Typography aria-label='out of five' variant='body1'>/5.0</Typography>\n                        </div>\n                        <Typography aria-label='Number of users who has rated' variant='body1' gutterBottom align='left'>\n                            {reviewCount}\n                            {' '}\n                            {reviewCount === 1 ? (\n                                <FormattedMessage defaultMessage='user' id='Apis.Details.StarRatingSummary.user' />\n                            ) : (\n                                <FormattedMessage defaultMessage='users' id='Apis.Details.StarRatingSummary.users' />\n                            )}\n                        </Typography>\n                    </div>\n                </>\n            ) : (\n                <>\n                    <StarRate className={classes.starRate} style={{ color: theme.palette.grey.A200 }} />\n                    <div className={classes.ratingSummary}>\n                        <Typography variant='caption' gutterBottom align='left'>\n                            <FormattedMessage defaultMessage='Not Rated' id='Apis.Details.StarRatingSummary.not.rated' />\n                        </Typography>\n                    </div>\n                </>\n            )}\n        </Root>\n    );\n}\n\nexport default (StarRatingSummary);\n","/* eslint-disable import/prefer-default-export */\n/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\n\nexport const ApiContext = React.createContext({\n    active: 'overview',\n    handleMenuSelect: () => {},\n    api: null,\n    applications: null,\n    subscribedApplications: [],\n    applicationsAvailable: [],\n    updateSubscriptionData: () => {},\n});\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\n\nconst PREFIX = 'Background';\n\nconst classes = {\n    svgImage: `${PREFIX}-svgImage`,\n};\n\nconst Root = styled('svg')({\n    [`&.${classes.svgImage}`]: {\n        cursor: 'pointer',\n        // ⚠️ object-fit is not supported by IE11.\n        objectFit: 'cover',\n    },\n});\n\nfunction aHexToOpacity(aHex) {\n    const alphaValue = '0x' + aHex.substring(7, 9);\n    return alphaValue / 256;\n}\n\n/**\n *\n * @param {*} aHex\n */\nfunction getColorWithoutAlpha(aHex) {\n    return aHex.substring(0, 7);\n}\n\n/**\n * Generate svg background.\n * @param {*} props\n */\nfunction Background(props) {\n    const {\n        colorPair, width, height,\n    } = props;\n    // Creating the background\n\n    const thumbnailBox = {\n        width: 250,\n        height: 200,\n    };\n\n    const thumbnailBoxChild = {\n        width: 50,\n        height: 50,\n    };\n\n    const rects = [];\n    for (let i = 0; i <= 4; i++) {\n        for (let j = 0; j <= 4; j++) {\n            const color = '#' + (colorPair.sub - ((0x00000025 * i) - (j * 0x00000015))).toString(16);\n            rects.push(<rect\n                key={i + '_' + j}\n                {...thumbnailBoxChild}\n                /* eslint no-mixed-operators: 0 */\n                fill={getColorWithoutAlpha(color)}\n                fillOpacity={aHexToOpacity(color)}\n                x={200 - i * 54}\n                y={54 * j}\n            />);\n        }\n    }\n    const primeColor = '#' + colorPair.prime.toString(16);\n    return (\n        <Root width={width} height={height} className={classes.svgImage} aria-hidden='true'>\n            <rect {...thumbnailBox} fill={getColorWithoutAlpha(primeColor)} fillOpacity={aHexToOpacity(primeColor)} />\n            {rects}\n        </Root>\n    );\n}\n\nBackground.propTypes = {\n    classes: PropTypes.shape({ svgImage: PropTypes.string }).isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    colorPair: PropTypes.shape({ sub: PropTypes.number, prime: PropTypes.number }).isRequired,\n};\n\nexport default (Background);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { PureComponent } from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport Icon from '@mui/material/Icon';\nimport MaterialIcons from 'MaterialIcons';\nimport { useTheme } from '@mui/material';\nimport Background from '../Background';\n\nconst PREFIX = 'ImageGeneratorLegacy';\n\nconst classes = {\n    icon: `${PREFIX}-icon`,\n    iconWrapper: `${PREFIX}-iconWrapper`,\n};\n\nconst Root = styled('div')({\n    [`& .${classes.icon}`]: {},\n    [`&.${classes.iconWrapper}`]: {\n        position: 'relative',\n        display: 'flex',\n        justifyContent: 'center',\n        '& span': {\n            position: 'absolute',\n            right: 'auto',\n        },\n    },\n});\n\n/**\n * Generate dynamic API thumbnail image (SVG), Use PureComponent to avoid unnessasary re-rendering when hover ect\n *\n * @class ImageGeneratorLegacy\n * @extends {PureComponent}\n */\nclass ImageGeneratorLegacy extends PureComponent {\n    /**\n     *\n     * @inheritdoc\n     * @returns {React.PureComponent} @inheritdoc\n     * @memberof ImageGeneratorLegacy\n     */\n    render() {\n        const {\n            api, width, height, theme, fixedIcon,\n        } = this.props;\n\n        const {\n            category, key, color, backgroundIndex,\n        } = fixedIcon;\n\n        let str = api;\n        if (typeof api === 'object') str = api.name;\n        let count;\n        let colorPair;\n        let randomBackgroundIndex;\n        let IconElement;\n        const colorPairs = theme.custom.thumbnail.backgrounds;\n\n        // Creating the icon\n        if (key && category) {\n            IconElement = key;\n        } else if (api.type === 'DOC') {\n            IconElement = theme.custom.thumbnail.document.icon;\n        } else if (api.type === 'DEFINITION') {\n            IconElement = theme.custom.thumbnail.definition.icon;\n        } else {\n            count = MaterialIcons.categories[10].icons.length;\n            const randomIconIndex = (str.charCodeAt(0) + str.charCodeAt(str.length - 1)) % count;\n            IconElement = MaterialIcons.categories[10].icons[randomIconIndex].id;\n        }\n\n        // Obtain or generate background color pair\n        if (api.type === 'DOC') {\n            colorPair = theme.custom.thumbnail.document.backgrounds;\n        } else if (api.type === 'DEFINITION') {\n            colorPair = theme.custom.thumbnail.definition.backgrounds;\n        } else if (backgroundIndex && colorPairs.length > backgroundIndex) {\n            colorPair = colorPairs[backgroundIndex];\n        } else {\n            randomBackgroundIndex = (str.charCodeAt(0) + str.charCodeAt(str.length - 1)) % colorPairs.length;\n            colorPair = colorPairs[randomBackgroundIndex];\n        }\n        return (\n            <Root className={classes.iconWrapper} style={{ width }}>\n                <Icon className={classes.icon} style={{ fontSize: height + 'px', color }}>\n                    {IconElement}\n                </Icon>\n                <Background width={width} height={height} colorPair={colorPair} />\n            </Root>\n        );\n    }\n}\n\nImageGeneratorLegacy.defaultProps = {\n    height: 190,\n    width: 250,\n    fixedIcon: {\n        category: null,\n        key: null,\n        color: '',\n        backgroundIndex: null,\n    },\n};\n\nImageGeneratorLegacy.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    height: PropTypes.number,\n    width: PropTypes.number,\n    fixedIcon: PropTypes.shape({}),\n    api: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n};\n\nfunction ImageGenerator(props) {\n    const {\n        width, height, api, fixedIcon,\n    } = props;\n    const theme = useTheme();\n    return (\n        <ImageGeneratorLegacy\n            width={width}\n            height={height}\n            api={api}\n            fixedIcon={fixedIcon}\n            theme={theme}\n        />\n    );\n}\n\nexport default (ImageGenerator);\n","/*\n *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n *  WSO2 Inc. licenses this file to you under the Apache License,\n *  Version 2.0 (the \"License\"); you may not use this file except\n *  in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing,\n *  software distributed under the License is distributed on an\n *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n *  KIND, either express or implied. See the License for the\n *  specific language governing permissions and limitations\n *  under the License.\n */\n\n/**\n * Capitalize the first letter of a string\n * @param {string} string string to be formatted\n * @return {string} formatted string\n */\nfunction capitalizeFirstLetter(string) {\n    return string && string.charAt(0).toUpperCase() + string.slice(1);\n}\n\n/**\n * Lowercase all letters in a string\n * @param {string} string string to be formatted\n * @return {string} formatted string\n */\nfunction lowerCaseString(string) {\n    return string.toLowerCase();\n}\n\n/**\n * Uppercase all letters in a string\n * @param {string} string string to be formatted\n * @return {string} formatted string\n */\nfunction upperCaseString(string) {\n    return string.toUpperCase();\n}\n\nexport { capitalizeFirstLetter, lowerCaseString, upperCaseString };\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport IconButton from '@mui/material/IconButton';\nimport Cancel from '@mui/icons-material/Cancel';\nimport Clear from '@mui/icons-material/Clear';\nimport StarRate from '@mui/icons-material/StarRate';\nimport StarIcon from '@mui/icons-material/Star';\nimport StarBorderIcon from '@mui/icons-material/StarBorder';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Api from 'AppData/api';\nimport AuthManager from 'AppData/AuthManager';\nimport StarRatingSummary from 'AppComponents/Apis/Details/StarRatingSummary';\nimport Rating from '@mui/material/Rating';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { useTheme } from '@mui/material';\n\nconst PREFIX = 'StarRatingBarLegacy';\n\nconst classes = {\n    starRate: `${PREFIX}-starRate`,\n    noStarRate: `${PREFIX}-noStarRate`,\n    iconFilled: `${PREFIX}-iconFilled`,\n    iconEmpty: `${PREFIX}-iconEmpty`,\n    removeRating: `${PREFIX}-removeRating`,\n    closeRating: `${PREFIX}-closeRating`,\n    userRating: `${PREFIX}-userRating`,\n    rateThis: `${PREFIX}-rateThis`,\n};\n\n// TODO jss-to-styled codemod: The Fragment root was replaced by div. Change the tag if needed.\nconst Root = styled('div')((\n    {\n        theme,\n    },\n) => ({\n    [`& .${classes.starRate}`]: {\n        fontSize: 30,\n        color: theme.custom.infoBar.starColor,\n    },\n\n    [`& .${classes.noStarRate}`]: {\n        fontSize: 30,\n        color: theme.palette.grey.A400,\n    },\n\n    [`& .${classes.iconFilled}`]: {\n        color: theme.custom.infoBar.starColor,\n    },\n\n    [`& .${classes.iconEmpty}`]: {\n        color: theme.custom.infoBar.starColorEmpty || '#cfcfcf',\n    },\n\n    [`& .${classes.removeRating}`]: {\n        fontSize: 20,\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n    },\n\n    [`& .${classes.closeRating}`]: {\n        position: 'absolute',\n        right: theme.spacing(-2),\n        top: theme.spacing(-2),\n    },\n\n    [`& .${classes.userRating}`]: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n        cursor: 'pointer',\n        padding: '5px',\n        background: '#efefef',\n        borderRadius: '3px',\n        position: 'absolute',\n        right: 0,\n        top: '-50px',\n        marginLeft: '125px',\n    },\n\n    [`& .${classes.rateThis}`]: {\n        lineHeight: '15px',\n        width: 40,\n    },\n}));\n\n/**\n *\n *\n * @class StarRatingBarLegacy\n * @extends {React.Component}\n */\nclass StarRatingBarLegacy extends React.Component {\n    /**\n     *Creates an instance of RecommendedApiThumb.\n     * @param {JSON} props properties\n     * @memberof StarRatingBarLegacy\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            avgRating: 0,\n            userRating: 0,\n            count: 0,\n            total: 0,\n            showEditing: false,\n        };\n        this.getApiRating = this.getApiRating.bind(this);\n        this.removeUserRating = this.removeUserRating.bind(this);\n        this.doRate = this.doRate.bind(this);\n        this.toggleEditRating = this.toggleEditRating.bind(this);\n    }\n\n    /**\n     * Component did mount callback.\n     * @memberof StarRatingBarLegacy\n     */\n    componentDidMount() {\n        this.getApiRating();\n    }\n\n    /**\n     * Component did mount callback.\n     * @param {JSON} prevProps previous instance properties\n     * @memberof StarRatingBarLegacy\n     */\n    componentDidUpdate(prevProps) {\n        const { ratingUpdate } = this.props;\n        if (ratingUpdate !== prevProps.ratingUpdate) {\n            this.getApiRating();\n        }\n    }\n\n    /**\n     *\n     *\n     * @memberof StarRatingBarLegacy\n     */\n    getApiRating() {\n        const { apiId, setRatingUpdate } = this.props;\n        const user = AuthManager.getUser();\n        const api = new Api();\n        // get api rating\n        if (user != null) {\n            const promisedRating = api.getRatingFromUser(apiId, null);\n            promisedRating.then((response) => {\n                this.setState({\n                    avgRating: response.body.avgRating,\n                    userRating: response.body.userRating,\n                    count: response.body.count,\n                    total: response.body.pagination.total,\n                });\n                if (setRatingUpdate) {\n                    setRatingUpdate({\n                        avgRating: response.body.avgRating,\n                        count: response.body.count,\n                        total: response.body.pagination.total,\n                    });\n                }\n            });\n        }\n    }\n\n    /**\n     *\n     *\n     * @param {*} rateIndex\n     * @memberof StarRatingBarLegacy\n     */\n    doRate(rateIndex) {\n        const { apiId, intl } = this.props;\n        const api = new Api();\n        const ratingInfo = { rating: rateIndex };\n        const promise = api.addRating(apiId, ratingInfo);\n        promise\n            .then(() => {\n                this.getApiRating();\n            })\n            .catch((error) => {\n                Alert.error(intl.formatMessage({\n                    defaultMessage: 'Error occurred while adding ratings',\n                    id: 'Apis.Listing.StarRatingBar.error.occurred.adding',\n                }));\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n            })\n            .finally(() => {\n                this.toggleEditRating();\n            });\n    }\n\n    /**\n     * @memberof StarRatingBarLegacy\n     */\n    removeUserRating() {\n        const { apiId, setRatingUpdate, intl } = this.props;\n        const api = new Api();\n        // remove user rating\n        api.removeRatingOfUser(apiId, null)\n            .then(() => {\n                this.getApiRating();\n                setRatingUpdate();\n            })\n            .catch((error) => {\n                Alert.error(intl.formatMessage({\n                    defaultMessage: 'Error occurred while removing ratings',\n                    id: 'Apis.Listing.StarRatingBar.error.occurred',\n                }));\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n            })\n            .finally(() => {\n                this.toggleEditRating();\n            });\n    }\n\n    /**\n     * @memberof StarRatingBarLegacy\n     */\n    toggleEditRating() {\n        this.setState((prevState) => ({ showEditing: !prevState.showEditing }));\n    }\n\n    /**\n     * @returns {JSX} star rating bar\n     * @memberof StarRatingBarLegacy\n     */\n    render() {\n        const {\n            avgRating, userRating, count, total, showEditing,\n        } = this.state;\n        const {\n            isEditable, showSummary, apiRating,\n        } = this.props;\n        const apiRatingNumber = parseFloat(apiRating);\n        return (\n            <Root>\n                {showSummary ? (\n                    <StarRatingSummary avgRating={avgRating} reviewCount={total} returnCount={count} />\n                ) : (\n                    <>\n                        {isEditable ? (\n                            <Box position='relative'>\n                                <IconButton\n                                    component='div'\n                                    onClick={this.toggleEditRating}\n                                    display='flex'\n                                    style={{ cursor: 'pointer' }}\n                                    size='large'\n                                >\n                                    {(userRating === 0)\n                                        ? (<StarBorderIcon style={{ fontSize: 30 }} />)\n                                        : (<StarIcon style={{ fontSize: 30, color: '#75d5fa' }} />)}\n                                    <Typography variant='body2' className={classes.rateThis}>\n                                        {(userRating === 0) ? (\n                                            <FormattedMessage defaultMessage='Rate This' id='Apis.Listing.StarRatingBar.rate.this' />\n                                        ) : (\n                                            <Box>\n                                                <Box fontSize={22} ml={1} mb={0.5}>{userRating}</Box>\n                                                <Box><FormattedMessage defaultMessage='You' id='Apis.Listing.StarRatingBar.you' /></Box>\n                                            </Box>\n                                        )}\n                                    </Typography>\n                                </IconButton>\n                                {showEditing && (\n                                    <>\n                                        <ClickAwayListener onClickAway={this.toggleEditRating}>\n                                            <div className={classes.userRating}>\n                                                {[1, 2, 3, 4, 5].map((i) => (\n                                                    <IconButton area-label={'Rate ' + i} onClick={() => this.doRate(i)} size='large'>\n                                                        <StarRate\n                                                            key={i}\n                                                            className={userRating >= i ? classes.starRate : classes.noStarRate}\n                                                        />\n                                                    </IconButton>\n                                                ))}\n                                                <IconButton\n                                                    area-label='Clear rating'\n                                                    onClick={() => this.removeUserRating()}\n                                                    size='large'\n                                                >\n                                                    <Clear\n                                                        className={classes.removeRating}\n                                                    />\n                                                </IconButton>\n                                                <IconButton\n                                                    className={classes.closeRating}\n                                                    area-label='Close rating popup'\n                                                    onClick={this.toggleEditRating}\n                                                    size='large'\n                                                >\n                                                    <Cancel\n                                                        className={classes.removeRating}\n                                                    />\n                                                </IconButton>\n                                            </div>\n                                        </ClickAwayListener>\n                                    </>\n                                )}\n                            </Box>\n                        ) : (\n                            <>\n                                <Rating\n                                    name='half-rating'\n                                    value={apiRatingNumber}\n                                    precision={0.1}\n                                    readOnly\n                                    classes={{ iconEmpty: classes.iconEmpty, iconFilled: classes.iconFilled }}\n                                />\n                                <Typography variant='caption' gutterBottom align='left' component='div'>\n                                    {`${apiRating}/5.0`}\n                                    {total > 0 && (\n                                        <>\n                                            {` (${total} `}\n                                            {total === 1 ? (\n                                                <FormattedMessage defaultMessage='user' id='Apis.Listing.StarRatingBar.user' />\n                                            ) : (\n                                                <FormattedMessage defaultMessage=' users' id='Apis.Listing.StarRatingBar.users' />\n                                            )}\n                                            &lsquo;&#41;&rsquo;\n                                        </>\n                                    )}\n\n                                </Typography>\n                            </>\n                        )}\n                    </>\n                )}\n            </Root>\n        );\n    }\n}\n\nStarRatingBarLegacy.defaultProps = {\n    apiRating: 0,\n    ratingUpdate: 0,\n    setRatingUpdate: () => { },\n};\n\nStarRatingBarLegacy.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    apiId: PropTypes.string.isRequired,\n    isEditable: PropTypes.bool.isRequired,\n    showSummary: PropTypes.bool.isRequired,\n    apiRating: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    ratingUpdate: PropTypes.number,\n    setRatingUpdate: PropTypes.func,\n};\n\nfunction StarRatingBar(props) {\n    const {\n        apiRating, apiId, isEditable, showSummary,\n    } = props;\n    const theme = useTheme();\n    return (\n        <StarRatingBarLegacy\n            apiRating={apiRating}\n            apiId={apiId}\n            isEditable={isEditable}\n            showSummary={showSummary}\n            theme={theme}\n        />\n    );\n}\n\nexport default injectIntl((StarRatingBar));\n"],"names":["props","artifact","width","height","charLength","ThumbIcon","bgColor","theme","useTheme","name","substring","colorMap","offset","defaultWidth","textShadow","custom","thumbnail","React","Box","sx","display","Avatar","variant","light","dark","getColorFromLetter","letter","charLightColor","toLowerCase","charNumber","parseInt","String","fromCharCode","r","g","b","Utils","hexToRGBHash","rgbToHex","Math","ceil","fontSize","background","color","palette","getContrastText","fallbacks","capitalizeFirstLetter","PREFIX","classes","card","apiDetails","suppressLinkStyles","row","thumbBy","media","thumbContent","thumbLeft","thumbLeftAction","thumbRight","thumbInfo","thumbHeader","contextBox","context","thumbWrapper","deleteIcon","textWrapper","imageWrapper","imageOverlap","chipWrapper","chipWrapper2","chipWrapper3","ratingWrapper","textblock","actionArea","ribbon","truncate","businessDetail","popover","paper","typo","StyledCard","styled","Card","_ref","margin","spacing","maxWidth","transition","position","contentBackgroundColor","padding","contentPictureOverlap","top","textDecoration","text","disabled","objectFit","alignSelf","flex","alignItems","flexDirection","whiteSpace","overflow","textOverflow","cursor","lineHeight","textAlign","marginTop","paddingTop","marginRight","fill","secondary","iconColor","justifyContent","bottom","marginBottom","right","border","primary","main","fontFamily","typography","fontWeight","backgroundColor","zIndex","textTransform","pointerEvents","windowURL","window","URL","webkitURL","ApiThumbClassicLegacy","constructor","super","_defineProperty","event","this","setState","businessAnchorEl","currentTarget","buniessOpenPopover","technicalAnchorEl","technicalOpenPopover","defaultApiImage","state","category","MaterialIcons","selectedIcon","backgroundIndex","imageObj","imageLoaded","componentDidMount","api","Api","getAPIThumbnail","id","then","response","data","headers","iconJson","JSON","parse","key","size","url","createObjectURL","finally","componentWillUnmount","revokeObjectURL","getPathPrefix","render","path","isMonetizationEnabled","detailsLink","customWidth","customHeight","showInfo","social","showRating","thumbnailTemplates","active","version","provider","businessInformation","businessOwner","trim","lifeCycleStatus","status","imageWidth","imageHeight","defaultImage","tileDisplayInfo","apis","ImageView","src","alt","className","LetterGenerator","ImageGenerator","fixedIcon","classNames","CardActionArea","advertiseInfo","advertised","monetizationLabel","Link","to","style","CardMedia","root","app","showMonetizedState","monetizedInfo","MonetizationOnIcon","paddingLeft","CardContent","Typography","component","gutterBottom","onClick","handleRedirectToAPIOverview","title","align","FormattedMessage","defaultMessage","Component","showBusinessDetails","showTechnicalDetails","mt","mb","Divider","onMouseEnter","handleBusinessPopoverOpen","onMouseLeave","handleBusinessPopoverClose","paddingRight","businessOwnerEmail","Popover","open","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","onClose","disableRestoreFocus","EmailIcon","marginLeft","handleTechnicalPopoverOpen","handleTechnicalPopoverClose","technicalOwner","technicalOwnerEmail","StarRatingBar","apiRating","avgRating","apiId","isEditable","showSummary","type","transportType","Chip","label","undefined","gatewayType","defaultProps","propTypes","PropTypes","isRequired","contextType","ApiContext","_extends","bullet","pos","caption","imageDisplay","minWidth","transform","grey","maxHeight","APIThumbPlain","imageConf","setImageConf","useState","setIMageObj","setImageLoaded","setBusinessAnchorEl","setTechnicalAnchorEl","businessOpenPopover","setBusinessOpenPopover","setTechnicalOpenPopover","useEffect","Icon","icon","getIcon","IconElement","document","pl","apiType","ApiThumb","ApiThumbClassic","starRate","userRating","Root","infoBar","starColor","reviewCount","returnCount","ratingSummary","StarRate","A200","handleMenuSelect","applications","subscribedApplications","applicationsAvailable","updateSubscriptionData","aHexToOpacity","aHex","getColorWithoutAlpha","Background","colorPair","thumbnailBoxChild","rects","i","j","sub","toString","push","fillOpacity","x","y","primeColor","prime","svgImage","iconWrapper","ImageGeneratorLegacy","PureComponent","count","randomBackgroundIndex","str","colorPairs","backgrounds","definition","icons","length","randomIconIndex","charCodeAt","string","charAt","toUpperCase","slice","upperCaseString","noStarRate","iconFilled","iconEmpty","removeRating","closeRating","rateThis","A400","starColorEmpty","borderRadius","StarRatingBarLegacy","total","showEditing","getApiRating","bind","removeUserRating","doRate","toggleEditRating","componentDidUpdate","prevProps","ratingUpdate","setRatingUpdate","user","AuthManager","getUser","getRatingFromUser","body","pagination","rateIndex","intl","ratingInfo","rating","addRating","catch","error","Alert","formatMessage","removeRatingOfUser","prevState","apiRatingNumber","parseFloat","StarRatingSummary","IconButton","StarBorderIcon","StarIcon","ml","ClickAwayListener","onClickAway","map","Clear","Cancel","Rating","value","precision","readOnly","injectIntl"],"sourceRoot":""}