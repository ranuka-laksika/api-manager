{"version":3,"file":"2740.dfad1e70071d25158619.bundle.js","mappings":"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","sources":["webpack://@wso2apim/devportal/./source/src/app/components/Shared/LeftMenuItem.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Shared/AppsAndKeys/Tokens.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Listing/NoApi.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Shared/AppsAndKeys/ViewSecret.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Shared/AppsAndKeys/ViewToken.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Shared/InlineMessage.jsx"],"sourcesContent":["/* eslint-disable react/prop-types */\n/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { styled } from '@mui/material/styles';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Typography from '@mui/material/Typography';\nimport CustomIcon from './CustomIcon';\nimport {useTheme} from \"@mui/material\";\nimport Tooltip from \"@mui/material/Tooltip\";\n\nfunction BootstrapTooltip(props) {\n\n    return <Tooltip arrow classes={(theme) => ({\n        arrow: {\n            color: theme.palette.common.black,\n        },\n        tooltip: {\n            backgroundColor: theme.palette.common.black,\n        },\n    })} {...props} />;\n}\n\nconst PREFIX = 'LeftMenuItem';\n\nconst classes = {\n    leftLInkText: `${PREFIX}-leftLInkText`,\n    leftLInkText_IconLeft: `${PREFIX}-leftLInkText_IconLeft`,\n    LeftMenu: `${PREFIX}-LeftMenu`,\n    leftLInk: `${PREFIX}-leftLInk`,\n    leftLink_Icon: `${PREFIX}-leftLink_Icon`,\n    leftLink_IconLeft: `${PREFIX}-leftLink_IconLeft`,\n    noIcon: `${PREFIX}-noIcon`,\n    leftLInkText_NoText: `${PREFIX}-leftLInkText_NoText`,\n    leftLInkText_NoTextWhenSmall: `${PREFIX}-leftLInkText_NoTextWhenSmall`,\n    submenu: `${PREFIX}-submenu`\n};\n\nconst StyledBootstrapTooltip = styled(BootstrapTooltip)((\n    {\n        theme\n    }\n) => ({\n    [`& .${classes.leftLInkText}`]: {\n        color: theme.palette.getContrastText(theme.custom.leftMenu.background),\n        textTransform: 'capitalize',\n        width: '100%',\n        textAlign: 'left',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n\n    [`& .${classes.leftLInkText_IconLeft}`]: {\n        paddingLeft: 10,\n    },\n\n    [`& .${classes.LeftMenu}`]: {\n        backgroundColor: theme.custom.leftMenu.background,\n        width: theme.custom.leftMenu.width,\n        textAlign: 'center',\n        fontFamily: theme.typography.fontFamily,\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        top: 0,\n    },\n\n    [`& .${classes.leftLInk}`]: {\n        paddingTop: theme.spacing(0.6),\n        paddingBottom: theme.spacing(0.6),\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n        fontSize: theme.typography.caption.fontSize,\n        cursor: 'pointer',\n        textDecoration: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n\n    [`& .${classes.leftLink_Icon}`]: {\n        color: theme.palette.getContrastText(theme.custom.leftMenu.background),\n        fontSize: theme.custom.leftMenu.iconSize + 'px',\n    },\n\n    [`& .${classes.leftLink_IconLeft}`]: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n\n    [`& .${classes.noIcon}`]: {\n        display: 'none',\n    },\n\n    [`& .${classes.leftLInkText_NoText}`]: {\n        display: 'none',\n    },\n\n    [`& .${classes.leftLInkText_NoTextWhenSmall}`]: {\n        [theme.breakpoints.down('md')]: {\n            display: 'none !important',\n        }\n    },\n\n    [`& .${classes.submenu}`]: {\n        paddingLeft: 12,\n        [theme.breakpoints.down('md')]: {\n            paddingLeft: 0,\n            color: theme.palette.grey[500],\n        }\n    }\n}));\n\n/**\n * Renders the left menu section.\n * @param {JSON} props props passed from parent\n * @returns {JSX} Leftmenu element.\n */\nfunction LeftMenuItem(props) {\n    const [selected, setSelected] = useState(false);\n\n    const {\n        Icon, to, history, text, route, submenu, open, id,\n    } = props;\n    const theme = useTheme();\n    const routeToCheck = route || text;\n    const { leftMenu } = theme.custom;\n    const strokeColor = theme.palette.getContrastText(leftMenu.background);\n    const { iconSize } = leftMenu;\n    const ditectCurrentMenu = (location = null) => {\n        if (!location) {\n            location = window.location;\n        }\n        const { pathname } = location;\n\n        const test1 = new RegExp('/' + routeToCheck + '$', 'g');\n        const test2 = new RegExp('/' + routeToCheck + '/', 'g');\n        if (pathname.match(test1) || pathname.match(test2)) {\n            setSelected(true);\n        } else {\n            setSelected(false);\n        }\n\n\n    };\n    useEffect(() => {\n        ditectCurrentMenu();\n    }, []);\n    history.listen((location) => {\n        ditectCurrentMenu(location);\n    });\n    let activeBackground = '';\n    if (selected && !submenu) {\n        activeBackground = leftMenu.leftMenuActive;\n    } else if (selected && submenu) {\n        activeBackground = leftMenu.leftMenuActiveSubmenu;\n    }\n    return (\n        <StyledBootstrapTooltip title={props.text} placement='right'>\n            <div>\n                <Link\n                    className={classNames(\n                        classes.leftLInk,\n                        {\n                            [classes.leftLink_IconLeft]: leftMenu === 'icon left',\n                            [classes.submenu]: submenu,\n                            'selected': selected,\n                        },\n                        'leftLInk',\n                    )}\n                    to={to}\n                    style={{ backgroundColor: activeBackground }}\n                    title={text}\n                    id={id}\n                >\n                    {\n                        // If the icon pro ( which is coming from the React Material library )\n                        // is coming we add css class and render.\n                        // If leftMenu='no icon' at the theme object we hide the icon. Also we add static classes to\n                        // allow customers theme\n                        // the product without compiling.\n                        Icon ? (\n                            React.cloneElement(Icon, {\n                                className: classNames(\n                                    classes.leftLink_Icon,\n                                    {\n                                        [classes.noIcon]: leftMenu.style === 'no icon',\n                                        [classes.submenu]: submenu,\n                                    },\n                                    'leftLink_Icon',\n                                ),\n                            })\n                        ) : (\n                            // We can also add custom icons\n                            <CustomIcon\n                                strokeColor={submenu ? '#cccccc' : strokeColor}\n                                width={submenu ? iconSize - 10 : iconSize}\n                                height={submenu ? iconSize - 10 : iconSize}\n                                icon={props.iconText}\n                                aria-label={text + ' icon'}\n                                className={classNames(\n                                    classes.leftLInk,\n                                    {\n                                        [classes.noIcon]: leftMenu.style === 'no icon',\n                                    },\n                                    'leftLink_Icon',\n                                )}\n                            />\n                        )\n                    }\n                    {open && (\n                        <Typography\n                            className={classNames(\n                                classes.leftLInkText,\n                                {\n                                    [classes.leftLInkText_IconLeft]: leftMenu.style === 'icon left',\n                                    [classes.leftLInkText_NoText]: leftMenu.style === 'no text',\n                                },\n                                classes.leftLInkText_NoTextWhenSmall,\n                                'leftLInkText',\n                            )}\n                        >\n                            {props.text}\n                        </Typography>\n                    )}\n                    {!open && (\n                        <Typography\n                            className={classNames(\n                                {\n                                    [classes.leftLInkText_IconLeft]: leftMenu.style === 'icon left',\n                                    [classes.leftLInkText_NoText]: leftMenu.style === 'no text',\n                                },\n                                classes.leftLInkText_NoText,\n                                'leftLInkText',\n                            )}\n                        />\n                    )}\n\n                </Link>\n            </div>\n        </StyledBootstrapTooltip>\n    );\n}\nLeftMenuItem.defaultProps = {\n    route: null,\n    iconText: null,\n    Icon: null,\n    submenu: false,\n};\nLeftMenuItem.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    Icon: PropTypes.element,\n    text: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.shape({}),\n    ]).isRequired,\n    to: PropTypes.string.isRequired,\n    route: PropTypes.string,\n    iconText: PropTypes.string,\n    history: PropTypes.shape({\n        location: PropTypes.shape({}).isRequired,\n    }).isRequired,\n    submenu: PropTypes.bool,\n    id: PropTypes.string.isRequired,\n};\nexport default withRouter((LeftMenuItem));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport FormControl from '@mui/material/FormControl';\nimport Typography from '@mui/material/Typography';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport Checkbox from '@mui/material/Checkbox';\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\nimport CheckBoxOutlineBlankIcon from '@mui/icons-material/CheckBoxOutlineBlank';\nimport TextField from '@mui/material/TextField';\n\nconst PREFIX = 'Tokens';\n\nconst classes = {\n    FormControl: `${PREFIX}-FormControl`,\n    FormControlOdd: `${PREFIX}-FormControlOdd`,\n    quotaHelp: `${PREFIX}-quotaHelp`,\n    chips: `${PREFIX}-chips`,\n    chip: `${PREFIX}-chip`\n};\n\n// TODO jss-to-styled codemod: The Fragment root was replaced by div. Change the tag if needed.\nconst Root = styled('div')((\n    {\n        theme\n    }\n) => ({\n    [`& .${classes.FormControl}`]: {\n        padding: theme.spacing(2),\n        width: '100%',\n    },\n\n    [`& .${classes.FormControlOdd}`]: {\n        padding: theme.spacing(2),\n        backgroundColor: theme.palette.background.paper,\n        width: '100%',\n    },\n\n    [`& .${classes.quotaHelp}`]: {\n        position: 'relative',\n    },\n\n    [`& .${classes.chips}`]: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n\n    [`& .${classes.chip}`]: {\n        margin: theme.spacing(0.25),\n    }\n}));\n\nconst icon = <CheckBoxOutlineBlankIcon fontSize='small' />;\nconst checkedIcon = <CheckBoxIcon fontSize='small' />;\n\n/**\n * Used to display generate access token UI\n */\nconst tokens = (props) => {\n    /**\n    * This method is used to handle the updating of create application\n    * request object.\n    * @param {*} field field that should be updated in appliction request\n    * @param {*} event event fired\n    */\n    const handleChange = (field, event) => {\n        const { accessTokenRequest, updateAccessTokenRequest } = props;\n        const newRequest = { ...accessTokenRequest };\n\n        const { target: currentTarget } = event;\n\n        switch (field) {\n            case 'scopesSelected':\n                newRequest.scopesSelected = currentTarget.value;\n                break;\n            case 'keyType':\n                newRequest.keyType = currentTarget.value;\n                break;\n            default:\n                break;\n        }\n        updateAccessTokenRequest(newRequest);\n    };\n    const {\n        accessTokenRequest, subscriptionScopes,\n    } = props;\n\n    return (\n        <Root>\n            <FormControl\n                variant=\"standard\"\n                margin='normal'\n                className={classes.FormControlOdd}\n                disabled={subscriptionScopes.length === 0}\n            >\n                <Autocomplete\n                    multiple\n                    limitTags={5}\n                    id='scopesSelected'\n                    name='scopesSelected'\n                    options={subscriptionScopes}\n                    noOptionsText='No scopes available'\n                    disabled={subscriptionScopes.length === 0}\n                    disableCloseOnSelect\n                    value={accessTokenRequest.scopesSelected}\n                    onChange={(e, newValue) => handleChange('scopesSelected', { target: { value: newValue } })}\n                    renderOption={(props, option, { selected }) => (\n                        <li {...props}>\n                            <Checkbox\n                                id={'access-token-scope-' + option}\n                                icon={icon}\n                                checkedIcon={checkedIcon}\n                                style={{marginRight: 8}}\n                                checked={selected}\n                            />\n                            {option}\n                        </li>\n                    )}\n                    renderInput={(params) => (\n                        <TextField {...params}\n                            margin='dense'\n                            variant='outlined'\n                                   size='small'\n                            label={<FormattedMessage\n                                htmlFor='quota-helper'\n                                className={classes.quotaHelp}\n                                id='Shared.AppsAndKeys.Tokens.when.you.generate.scopes'\n                                defaultMessage='Scopes'\n                            />}\n                        />\n                    )}\n                />\n                <Typography variant='caption'>\n                    <FormattedMessage\n                        id='Shared.AppsAndKeys.Tokens.when.you.generate'\n                        defaultMessage={'When you generate access tokens to APIs protected by scope/s,'\n                            + ' you can select the scope/s and then generate the token for it. Scopes enable '\n                            + 'fine-grained access control to API resources based on user roles. You define scopes to '\n                            + 'an API resource. When a user invokes the API, his/her OAuth 2 bearer token cannot grant '\n                            + 'access to any API resource beyond its associated scopes.'}\n                    />\n                </Typography>\n            </FormControl>\n        </Root>\n    );\n};\ntokens.contextTypes = {\n    intl: PropTypes.shape({}).isRequired,\n};\nexport default (tokens);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled, useTheme } from '@mui/material/styles';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport { app } from 'Settings';\n\nconst PREFIX = 'NoApi';\n\nconst classes = {\n    root: `${PREFIX}-root`,\n    messageWrapper: `${PREFIX}-messageWrapper`,\n};\n\nconst Root = styled('div')((\n    {\n        theme,\n    },\n) => ({\n    [`&.${classes.root}`]: {\n        flexGrow: 1,\n    },\n\n    [`& .${classes.messageWrapper}`]: {\n        marginTop: theme.spacing(4),\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n}));\n\n/**\n * Render no api section\n * @returns {void}\n */\nexport default function NoApi() {\n    const theme = useTheme();\n\n    return (\n        <Root className={classes.root}>\n            <Grid container spacing={3}>\n                <Grid item xs={12} className={classes.messageWrapper}>\n                    <img alt='API icon' src={app.context + theme.custom.noApiImage} className={classes.messageWrapper} />\n                    <Typography id='itest-no-apis' variant='h5' gutterBottom>\n                        <FormattedMessage id='Apis.Listing.NoApi.nodata.title' defaultMessage='No APIs Available' />\n                    </Typography>\n                    <Typography variant='subtitle1' gutterBottom>\n                        <FormattedMessage\n                            id='Apis.Listing.NoApi.nodata.content'\n                            defaultMessage='There are no APIs to display right now.'\n                        />\n                    </Typography>\n                </Grid>\n            </Grid>\n        </Root>\n    );\n}\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport IconButton from '@mui/material/IconButton';\nimport Tooltip from '@mui/material/Tooltip';\nimport FileCopy from '@mui/icons-material/FileCopy';\nimport Typography from '@mui/material/Typography';\nimport TextField from '@mui/material/TextField';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport InlineMessage from '../InlineMessage';\nconst PREFIX = 'ViewSecret';\n\nconst classes = {\n    bootstrapRoot: `${PREFIX}-bootstrapRoot`,\n    bootstrapInput: `${PREFIX}-bootstrapInput`,\n    epWrapper: `${PREFIX}-epWrapper`,\n    prodLabel: `${PREFIX}-prodLabel`,\n    contentWrapper: `${PREFIX}-contentWrapper`,\n    root: `${PREFIX}-root`\n};\n\nconst Root = styled('div')((\n    {\n        theme\n    }\n) => ({\n    [`& .${classes.bootstrapRoot}`]: {\n        padding: 0,\n        'label + &': {\n            marginTop: theme.spacing(3),\n        },\n    },\n\n    [`& .${classes.bootstrapInput}`]: {\n        borderRadius: 4,\n        backgroundColor: theme.palette.common.white,\n        border: '1px solid #ced4da',\n        padding: '5px 12px',\n        width: 350,\n        height: 100,\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n        fontFamily: ['-apple-system', 'BlinkMacSystemFont', '\"Segoe UI\"', 'Roboto', '\"Helvetica Neue\"',\n            'Arial', 'sans-serif', '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(','),\n        '&:focus': {\n            borderColor: '#80bdff',\n            boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n        },\n    },\n\n    [`& .${classes.epWrapper}`]: {\n        display: 'flex',\n        marginTop: 20,\n    },\n\n    [`& .${classes.prodLabel}`]: {\n        lineHeight: '30px',\n        marginRight: 10,\n        width: 100,\n        'text-align-last': 'center',\n    },\n\n    [`& .${classes.contentWrapper}`]: {\n        maxWidth: theme.custom.contentAreaWidth - theme.custom.leftMenu.width,\n    },\n\n    [`&.${classes.root}`]: {\n        marginBottom: 20,\n    }\n}));\n\n/**\n *\n *\n * @class ViewSecret\n * @extends {React.Component}\n */\nclass ViewSecret extends React.Component {\n    state = {\n        secretCopied: false,\n    };\n\n    /**\n     *\n     *\n     * @memberof ViewSecret\n     */\n    onCopy = name => () => {\n        this.setState({\n            [name]: true,\n        });\n        const that = this;\n        const elementName = name;\n        const caller = function () {\n            that.setState({\n                [elementName]: false,\n            });\n        };\n        setTimeout(caller, 4000);\n    };\n\n    /**\n     * Generate a comma separate string of token scopes\n     *\n     * @param {string} tokenScopes token scopes\n     * @returns {String} scopeString comma separated string of token scopes\n     * @memberof ViewSecret\n     */\n    getTokeScopesString(tokenScopes) {\n        if (tokenScopes) {\n            return tokenScopes.join(', ');\n        }\n        return '';\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof ViewSecret\n     */\n    render() {\n        const {  secret, intl } = this.props;\n        const { secretCopied } = this.state;\n        return (\n            <Root className={classes.root}>\n                <InlineMessage type='warning'>\n                    <Typography variant='h5' component='h3'>\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.ViewSecret.please.copy.secret'\n                            defaultMessage='Please Copy the Consumer Secret'\n                        />\n                    </Typography>\n                    <Typography component='p'>\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.ViewSecret.please.copy.secret.help'\n                            defaultMessage={`Please make a note of the regenerated consumer \n                            secret value as it will be displayed only once.`}\n                        />\n                    </Typography>\n                </InlineMessage>\n                <div className={classes.epWrapper}>\n                    <Typography className={classes.prodLabel}>\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.ViewSecret.consumer.secret'\n                            defaultMessage='Consumer Secret'\n                        />\n                    </Typography>\n                    <TextField\n                        variant=\"standard\"\n                        defaultValue={secret.consumerSecret}\n                        id='bootstrap-input'\n                        multiline\n                        rows={4}\n                        InputProps={{\n                            disableUnderline: true,\n                            classes: {\n                                root: classes.bootstrapRoot,\n                                input: classes.bootstrapInput,\n                            },\n                        }}\n                        InputLabelProps={{\n                            shrink: true,\n                            className: classes.bootstrapFormLabel,\n                        }}\n                    />\n                    <Tooltip\n                        title={\n                            secretCopied\n                                ? intl.formatMessage({\n                                    defaultMessage: 'Copied',\n                                    id: 'Shared.AppsAndKeys.ViewSecret.copied',\n                                })\n                                : intl.formatMessage({\n                                    defaultMessage: 'Copy to clipboard',\n                                    id: 'Shared.AppsAndKeys.ViewSecret.copy.to.clipboard',\n                                })\n                        }\n                        placement='right'\n                    >\n                        <IconButton\n                            id='copy-to-clipbord-icon'\n                            aria-label='Copy to clipboard'\n                            size=\"large\"\n                            onClick={() => {\n                                navigator.clipboard.writeText(secret.consumerSecret).then(this.onCopy('secretCopied'))\n                            }}\n                        >\n                            <FileCopy color='secondary'>file_copy</FileCopy>\n                        </IconButton>\n                    </Tooltip>\n                </div>\n            </Root>\n        );\n    }\n}\n\nViewSecret.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    secret: PropTypes.shape({\n        consumerSecret: PropTypes.string.isRequired,\n    }).isRequired,\n};\n\nexport default injectIntl((ViewSecret));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport Tooltip from '@mui/material/Tooltip';\nimport FileCopy from '@mui/icons-material/FileCopy';\nimport Typography from '@mui/material/Typography';\nimport TextField from '@mui/material/TextField';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport IconButton from '@mui/material/IconButton';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport InlineMessage from '../InlineMessage';\nimport ViewSecret from './ViewSecret';\nconst PREFIX = 'ViewToken';\n\nconst classes = {\n    bootstrapRoot: `${PREFIX}-bootstrapRoot`,\n    bootstrapInput: `${PREFIX}-bootstrapInput`,\n    epWrapper: `${PREFIX}-epWrapper`,\n    secretWrapper: `${PREFIX}-secretWrapper`,\n    prodLabel: `${PREFIX}-prodLabel`,\n    contentWrapper: `${PREFIX}-contentWrapper`,\n    root: `${PREFIX}-root`\n};\n\nconst Root = styled('div')((\n    {\n        theme\n    }\n) => ({\n    [`& .${classes.bootstrapRoot}`]: {\n        padding: 0,\n        'label + &': {\n            marginTop: theme.spacing(3),\n        },\n        flex: 1,\n        marginRight: theme.spacing(1),\n    },\n\n    [`& .${classes.bootstrapInput}`]: {\n        borderRadius: 4,\n        backgroundColor: theme.custom.apiDetailPages.tokenTextBoxBackground,\n        color: theme.palette.getContrastText(theme.custom.apiDetailPages.tokenTextBoxBackground),\n        border: '1px solid #ced4da',\n        padding: '5px 12px',\n        height: 100,\n        width: '100%',\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n        fontFamily: ['-apple-system', 'BlinkMacSystemFont', '\"Segoe UI\"', 'Roboto', '\"Helvetica Neue\"',\n            'Arial', 'sans-serif', '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(','),\n        '&:focus': {\n            borderColor: '#80bdff',\n            boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n        },\n    },\n\n    [`& .${classes.epWrapper}`]: {\n        display: 'flex',\n        marginTop: 20,\n    },\n\n    [`& .${classes.secretWrapper}`]: {\n        display: 'flex',\n        marginBottom: 20,\n    },\n\n    [`& .${classes.prodLabel}`]: {\n        lineHeight: '30px',\n        marginRight: 10,\n        width: 100,\n        'text-align-last': 'center',\n        whiteSpace: 'nowrap',\n    },\n\n    [`& .${classes.contentWrapper}`]: {\n        maxWidth: theme.custom.contentAreaWidth - theme.custom.leftMenu.width,\n    },\n\n    [`&.${classes.root}`]: {\n        marginTop: 20,\n        '& span, & h5, & label, & td, & li, & div, & input': {\n            color: theme.palette.getContrastText(theme.palette.background.paper),\n        },\n\n    }\n}));\n\n/**\n *\n *\n * @class ViewToken\n * @extends {React.Component}\n */\nclass ViewToken extends React.Component {\n    state = {\n        tokenCopied: false,\n    };\n\n    /**\n     *\n     *\n     * @memberof ViewToken\n     */\n    onCopy = (name) => () => {\n        this.setState({\n            [name]: true,\n        });\n        const that = this;\n        const elementName = name;\n        const caller = function () {\n            that.setState({\n                [elementName]: false,\n            });\n        };\n        setTimeout(caller, 4000);\n    };\n\n    /**\n     * Generate a comma separate string of token scopes\n     * @param {string} tokenScopes token scopes\n     * @returns {String} scopeString comma separated string of token scopes\n     * @memberof ViewToken\n     */\n    getTokeScopesString(tokenScopes) {\n        if (tokenScopes) {\n            return tokenScopes.join(', ');\n        }\n        return '';\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof ViewToken\n     */\n    render() {\n        const {\n            token, consumerSecret, isTokenExchange, intl, isResidenceTokenAvailable,\n        } = this.props;\n        const { tokenCopied } = this.state;\n\n        if (isTokenExchange && !isResidenceTokenAvailable) {\n            return (\n                <Typography>\n                    <FormattedMessage\n                        id='Shared.AppsAndKeys.ViewCurl.error'\n                        defaultMessage='Please generate the Consumer Key and Secret for Residence Key Manager with selecting the urn:ietf:params:oauth:grant-type:token-exchange grant type in\n                                             order to use the token Exchange Approach. '\n                    />\n                </Typography>\n            )\n        } else {\n            return (\n            <Root className={classes.root}>\n                {consumerSecret && (\n                    <div className={classes.secretWrapper}>\n                        <ViewSecret secret={{consumerSecret}}/>\n                    </div>\n                )}\n                <InlineMessage type='warning'>\n                    <Typography variant='h5' component='h3'>\n                        {(token.isOauth) && (\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.ViewToken.please.copy'\n                                defaultMessage='Please Copy the Access Token'\n                            />\n                        )}\n                        {(!token.isOauth) && (\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.ViewToken.please.copy.apikey'\n                                defaultMessage='Please Copy the API Key'\n                            />\n                        )}\n                    </Typography>\n                    <Typography component='p'>\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.ViewToken.please.copy.help'\n                            defaultMessage={'If the token type is JWT or API Key, please copy this generated token value as it will be displayed only for'\n                            + ' the current browser session. '\n                            + '( The token will not be visible in the UI after the page is refreshed. )'}\n                        />\n                    </Typography>\n                </InlineMessage>\n                <div className={classes.epWrapper}>\n                    <label for='access-token' className={classes.prodLabel}>\n                        {(token.isOauth) && (\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.ViewToken.access.token'\n                                defaultMessage='Access Token'\n                            />\n                        )}\n                        {(!token.isOauth) && (\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.ViewToken.apikey'\n                                defaultMessage='API Key'\n                            />\n                        )}\n                    </label>\n                    <TextField\n                        variant=\"standard\"\n                        defaultValue={token.accessToken}\n                        id='access-token'\n                        multiline\n                        fullWidth\n                        rows={4}\n                        InputProps={{\n                            disableUnderline: true,\n                            classes: {\n                                root: classes.bootstrapRoot,\n                                input: classes.bootstrapInput,\n                            },\n                        }}\n                        InputLabelProps={{\n                            shrink: true,\n                            className: classes.bootstrapFormLabel,\n                        }}\n                    />\n                    <Tooltip\n                        title={\n                            tokenCopied\n                                ? intl.formatMessage({\n                                    defaultMessage: 'Copied',\n                                    id: 'Shared.AppsAndKeys.ViewToken.copied',\n                                })\n                                : intl.formatMessage({\n                                    defaultMessage: 'Copy to clipboard',\n                                    id: 'Shared.AppsAndKeys.ViewToken.copy.to.clipboard',\n                                })\n                        }\n                        placement='right'\n                    >\n                        <IconButton\n                            id = 'copy-to-clipbord-icon'\n                            aria-label='Copy to clipboard'\n                            size=\"large\"\n                            onClick={() => {navigator.clipboard.writeText(token.accessToken).then(this.onCopy('tokenCopied'))}}\n                        >\n                            <FileCopy color='secondary'>file_copy</FileCopy>\n                        </IconButton>\n                    </Tooltip>\n                </div>\n                <FormHelperText>\n                    <FormattedMessage\n                        id='Shared.AppsAndKeys.ViewToken.info.first'\n                        defaultMessage='Above token has a validity period of'\n                    />\n                    {` ${token.validityTime} `}\n                    <FormattedMessage\n                        id='Shared.AppsAndKeys.ViewToken.info.second'\n                        defaultMessage='seconds'\n                    />\n                    {' '}\n                    {token.isOauth && (\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.ViewToken.info.third'\n                            defaultMessage='and the token has ('\n                        />\n                    )}\n                    {this.getTokeScopesString(token.tokenScopes)}\n                    {token.isOauth && (\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.ViewToken.info.fourth'\n                            defaultMessage=') scopes'\n                        />\n                    )}\n                    .\n                </FormHelperText>\n            </Root>\n        )};\n    }\n}\n\nViewToken.defaultProps = {\n    consumerSecret: null,\n};\n\nViewToken.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    token: PropTypes.shape({\n        accessToken: PropTypes.string.isRequired,\n        validityTime: PropTypes.number.isRequired,\n        tokenScopes: PropTypes.array.isRequired,\n    }).isRequired,\n    consumerSecret: PropTypes.string,\n};\n\nexport default injectIntl((ViewToken));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Alert, AlertTitle } from '@mui/material';\n\n/**\n *  Renders a inline massage\n *\n * @class InlineMessage\n * @extends {React.Component}\n */\nfunction InlineMessage(props) {\n    const { type, title, variant } = props;\n    const messageType = type || 'info';\n    return (\n        <Alert variant={variant || \"standard\"} severity={messageType}>\n            {title && (<AlertTitle>{title}</AlertTitle>)}\n            {props.children}\n        </Alert>\n\n    );\n}\n\nInlineMessage.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    type: PropTypes.string.isRequired,\n};\n\nexport default InlineMessage;\n"],"names":["PREFIX","classes","leftLInkText","leftLInkText_IconLeft","LeftMenu","leftLInk","leftLink_Icon","leftLink_IconLeft","noIcon","leftLInkText_NoText","leftLInkText_NoTextWhenSmall","submenu","StyledBootstrapTooltip","styled","props","React","Tooltip","_extends","arrow","theme","color","palette","common","black","tooltip","backgroundColor","_ref","getContrastText","custom","leftMenu","background","textTransform","width","textAlign","overflow","textOverflow","whiteSpace","paddingLeft","fontFamily","typography","position","bottom","left","top","paddingTop","spacing","paddingBottom","paddingRight","fontSize","caption","cursor","textDecoration","display","alignItems","justifyContent","iconSize","breakpoints","down","grey","LeftMenuItem","selected","setSelected","useState","Icon","to","history","text","route","open","id","useTheme","routeToCheck","strokeColor","ditectCurrentMenu","location","arguments","length","undefined","window","pathname","test1","RegExp","test2","match","useEffect","listen","activeBackground","leftMenuActive","leftMenuActiveSubmenu","title","placement","Link","className","classNames","style","CustomIcon","height","icon","iconText","Typography","defaultProps","propTypes","PropTypes","isRequired","withRouter","FormControl","FormControlOdd","quotaHelp","chips","chip","Root","padding","paper","flexWrap","margin","CheckBoxOutlineBlankIcon","checkedIcon","CheckBoxIcon","tokens","accessTokenRequest","subscriptionScopes","variant","disabled","Autocomplete","multiple","limitTags","name","options","noOptionsText","disableCloseOnSelect","value","scopesSelected","onChange","e","newValue","handleChange","field","event","updateAccessTokenRequest","newRequest","_objectSpread","target","currentTarget","keyType","renderOption","option","_ref2","Checkbox","marginRight","checked","renderInput","params","TextField","size","label","FormattedMessage","htmlFor","defaultMessage","contextTypes","intl","root","messageWrapper","flexGrow","marginTop","secondary","NoApi","Grid","container","item","xs","alt","src","app","context","noApiImage","gutterBottom","bootstrapRoot","bootstrapInput","epWrapper","prodLabel","contentWrapper","borderRadius","white","border","transition","transitions","create","join","borderColor","boxShadow","lineHeight","maxWidth","contentAreaWidth","marginBottom","ViewSecret","constructor","_defineProperty","secretCopied","this","setState","that","elementName","setTimeout","getTokeScopesString","tokenScopes","render","secret","state","InlineMessage","type","component","defaultValue","consumerSecret","multiline","rows","InputProps","disableUnderline","input","InputLabelProps","shrink","bootstrapFormLabel","formatMessage","IconButton","onClick","navigator","clipboard","writeText","then","onCopy","FileCopy","injectIntl","secretWrapper","flex","apiDetailPages","tokenTextBoxBackground","ViewToken","tokenCopied","token","isTokenExchange","isResidenceTokenAvailable","isOauth","for","accessToken","fullWidth","FormHelperText","validityTime","messageType","Alert","severity","AlertTitle","children"],"sourceRoot":""}