{"version":3,"file":"8208.5ea1aa503eb56d2700b2.bundle.js","mappings":"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","sources":["webpack://@wso2apim/devportal/./node_modules/codemirror/keymap/sublime.js","webpack://@wso2apim/devportal/./node_modules/codemirror/addon/search/searchcursor.js","webpack://@wso2apim/devportal/./node_modules/codemirror/addon/edit/matchbrackets.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n// A rough approximation of Sublime Text's keybindings\n// Depends on addon/search/searchcursor.js and optionally addon/dialog/dialogs.js\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../lib/codemirror\"), require(\"../addon/search/searchcursor\"), require(\"../addon/edit/matchbrackets\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../lib/codemirror\", \"../addon/search/searchcursor\", \"../addon/edit/matchbrackets\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var cmds = CodeMirror.commands;\n  var Pos = CodeMirror.Pos;\n\n  // This is not exactly Sublime's algorithm. I couldn't make heads or tails of that.\n  function findPosSubword(doc, start, dir) {\n    if (dir < 0 && start.ch == 0) return doc.clipPos(Pos(start.line - 1));\n    var line = doc.getLine(start.line);\n    if (dir > 0 && start.ch >= line.length) return doc.clipPos(Pos(start.line + 1, 0));\n    var state = \"start\", type, startPos = start.ch;\n    for (var pos = startPos, e = dir < 0 ? 0 : line.length, i = 0; pos != e; pos += dir, i++) {\n      var next = line.charAt(dir < 0 ? pos - 1 : pos);\n      var cat = next != \"_\" && CodeMirror.isWordChar(next) ? \"w\" : \"o\";\n      if (cat == \"w\" && next.toUpperCase() == next) cat = \"W\";\n      if (state == \"start\") {\n        if (cat != \"o\") { state = \"in\"; type = cat; }\n        else startPos = pos + dir\n      } else if (state == \"in\") {\n        if (type != cat) {\n          if (type == \"w\" && cat == \"W\" && dir < 0) pos--;\n          if (type == \"W\" && cat == \"w\" && dir > 0) { // From uppercase to lowercase\n            if (pos == startPos + 1) { type = \"w\"; continue; }\n            else pos--;\n          }\n          break;\n        }\n      }\n    }\n    return Pos(start.line, pos);\n  }\n\n  function moveSubword(cm, dir) {\n    cm.extendSelectionsBy(function(range) {\n      if (cm.display.shift || cm.doc.extend || range.empty())\n        return findPosSubword(cm.doc, range.head, dir);\n      else\n        return dir < 0 ? range.from() : range.to();\n    });\n  }\n\n  cmds.goSubwordLeft = function(cm) { moveSubword(cm, -1); };\n  cmds.goSubwordRight = function(cm) { moveSubword(cm, 1); };\n\n  cmds.scrollLineUp = function(cm) {\n    var info = cm.getScrollInfo();\n    if (!cm.somethingSelected()) {\n      var visibleBottomLine = cm.lineAtHeight(info.top + info.clientHeight, \"local\");\n      if (cm.getCursor().line >= visibleBottomLine)\n        cm.execCommand(\"goLineUp\");\n    }\n    cm.scrollTo(null, info.top - cm.defaultTextHeight());\n  };\n  cmds.scrollLineDown = function(cm) {\n    var info = cm.getScrollInfo();\n    if (!cm.somethingSelected()) {\n      var visibleTopLine = cm.lineAtHeight(info.top, \"local\")+1;\n      if (cm.getCursor().line <= visibleTopLine)\n        cm.execCommand(\"goLineDown\");\n    }\n    cm.scrollTo(null, info.top + cm.defaultTextHeight());\n  };\n\n  cmds.splitSelectionByLine = function(cm) {\n    var ranges = cm.listSelections(), lineRanges = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var from = ranges[i].from(), to = ranges[i].to();\n      for (var line = from.line; line <= to.line; ++line)\n        if (!(to.line > from.line && line == to.line && to.ch == 0))\n          lineRanges.push({anchor: line == from.line ? from : Pos(line, 0),\n                           head: line == to.line ? to : Pos(line)});\n    }\n    cm.setSelections(lineRanges, 0);\n  };\n\n  cmds.singleSelectionTop = function(cm) {\n    var range = cm.listSelections()[0];\n    cm.setSelection(range.anchor, range.head, {scroll: false});\n  };\n\n  cmds.selectLine = function(cm) {\n    var ranges = cm.listSelections(), extended = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i];\n      extended.push({anchor: Pos(range.from().line, 0),\n                     head: Pos(range.to().line + 1, 0)});\n    }\n    cm.setSelections(extended);\n  };\n\n  function insertLine(cm, above) {\n    if (cm.isReadOnly()) return CodeMirror.Pass\n    cm.operation(function() {\n      var len = cm.listSelections().length, newSelection = [], last = -1;\n      for (var i = 0; i < len; i++) {\n        var head = cm.listSelections()[i].head;\n        if (head.line <= last) continue;\n        var at = Pos(head.line + (above ? 0 : 1), 0);\n        cm.replaceRange(\"\\n\", at, null, \"+insertLine\");\n        cm.indentLine(at.line, null, true);\n        newSelection.push({head: at, anchor: at});\n        last = head.line + 1;\n      }\n      cm.setSelections(newSelection);\n    });\n    cm.execCommand(\"indentAuto\");\n  }\n\n  cmds.insertLineAfter = function(cm) { return insertLine(cm, false); };\n\n  cmds.insertLineBefore = function(cm) { return insertLine(cm, true); };\n\n  function wordAt(cm, pos) {\n    var start = pos.ch, end = start, line = cm.getLine(pos.line);\n    while (start && CodeMirror.isWordChar(line.charAt(start - 1))) --start;\n    while (end < line.length && CodeMirror.isWordChar(line.charAt(end))) ++end;\n    return {from: Pos(pos.line, start), to: Pos(pos.line, end), word: line.slice(start, end)};\n  }\n\n  cmds.selectNextOccurrence = function(cm) {\n    var from = cm.getCursor(\"from\"), to = cm.getCursor(\"to\");\n    var fullWord = cm.state.sublimeFindFullWord == cm.doc.sel;\n    if (CodeMirror.cmpPos(from, to) == 0) {\n      var word = wordAt(cm, from);\n      if (!word.word) return;\n      cm.setSelection(word.from, word.to);\n      fullWord = true;\n    } else {\n      var text = cm.getRange(from, to);\n      var query = fullWord ? new RegExp(\"\\\\b\" + text + \"\\\\b\") : text;\n      var cur = cm.getSearchCursor(query, to);\n      var found = cur.findNext();\n      if (!found) {\n        cur = cm.getSearchCursor(query, Pos(cm.firstLine(), 0));\n        found = cur.findNext();\n      }\n      if (!found || isSelectedRange(cm.listSelections(), cur.from(), cur.to())) return\n      cm.addSelection(cur.from(), cur.to());\n    }\n    if (fullWord)\n      cm.state.sublimeFindFullWord = cm.doc.sel;\n  };\n\n  cmds.skipAndSelectNextOccurrence = function(cm) {\n    var prevAnchor = cm.getCursor(\"anchor\"), prevHead = cm.getCursor(\"head\");\n    cmds.selectNextOccurrence(cm);\n    if (CodeMirror.cmpPos(prevAnchor, prevHead) != 0) {\n      cm.doc.setSelections(cm.doc.listSelections()\n          .filter(function (sel) {\n            return sel.anchor != prevAnchor || sel.head != prevHead;\n          }));\n    }\n  }\n\n  function addCursorToSelection(cm, dir) {\n    var ranges = cm.listSelections(), newRanges = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i];\n      var newAnchor = cm.findPosV(\n          range.anchor, dir, \"line\", range.anchor.goalColumn);\n      var newHead = cm.findPosV(\n          range.head, dir, \"line\", range.head.goalColumn);\n      newAnchor.goalColumn = range.anchor.goalColumn != null ?\n          range.anchor.goalColumn : cm.cursorCoords(range.anchor, \"div\").left;\n      newHead.goalColumn = range.head.goalColumn != null ?\n          range.head.goalColumn : cm.cursorCoords(range.head, \"div\").left;\n      var newRange = {anchor: newAnchor, head: newHead};\n      newRanges.push(range);\n      newRanges.push(newRange);\n    }\n    cm.setSelections(newRanges);\n  }\n  cmds.addCursorToPrevLine = function(cm) { addCursorToSelection(cm, -1); };\n  cmds.addCursorToNextLine = function(cm) { addCursorToSelection(cm, 1); };\n\n  function isSelectedRange(ranges, from, to) {\n    for (var i = 0; i < ranges.length; i++)\n      if (CodeMirror.cmpPos(ranges[i].from(), from) == 0 &&\n          CodeMirror.cmpPos(ranges[i].to(), to) == 0) return true\n    return false\n  }\n\n  var mirror = \"(){}[]\";\n  function selectBetweenBrackets(cm) {\n    var ranges = cm.listSelections(), newRanges = []\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i], pos = range.head, opening = cm.scanForBracket(pos, -1);\n      if (!opening) return false;\n      for (;;) {\n        var closing = cm.scanForBracket(pos, 1);\n        if (!closing) return false;\n        if (closing.ch == mirror.charAt(mirror.indexOf(opening.ch) + 1)) {\n          var startPos = Pos(opening.pos.line, opening.pos.ch + 1);\n          if (CodeMirror.cmpPos(startPos, range.from()) == 0 &&\n              CodeMirror.cmpPos(closing.pos, range.to()) == 0) {\n            opening = cm.scanForBracket(opening.pos, -1);\n            if (!opening) return false;\n          } else {\n            newRanges.push({anchor: startPos, head: closing.pos});\n            break;\n          }\n        }\n        pos = Pos(closing.pos.line, closing.pos.ch + 1);\n      }\n    }\n    cm.setSelections(newRanges);\n    return true;\n  }\n\n  cmds.selectScope = function(cm) {\n    selectBetweenBrackets(cm) || cm.execCommand(\"selectAll\");\n  };\n  cmds.selectBetweenBrackets = function(cm) {\n    if (!selectBetweenBrackets(cm)) return CodeMirror.Pass;\n  };\n\n  function puncType(type) {\n    return !type ? null : /\\bpunctuation\\b/.test(type) ? type : undefined\n  }\n\n  cmds.goToBracket = function(cm) {\n    cm.extendSelectionsBy(function(range) {\n      var next = cm.scanForBracket(range.head, 1, puncType(cm.getTokenTypeAt(range.head)));\n      if (next && CodeMirror.cmpPos(next.pos, range.head) != 0) return next.pos;\n      var prev = cm.scanForBracket(range.head, -1, puncType(cm.getTokenTypeAt(Pos(range.head.line, range.head.ch + 1))));\n      return prev && Pos(prev.pos.line, prev.pos.ch + 1) || range.head;\n    });\n  };\n\n  cmds.swapLineUp = function(cm) {\n    if (cm.isReadOnly()) return CodeMirror.Pass\n    var ranges = cm.listSelections(), linesToMove = [], at = cm.firstLine() - 1, newSels = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i], from = range.from().line - 1, to = range.to().line;\n      newSels.push({anchor: Pos(range.anchor.line - 1, range.anchor.ch),\n                    head: Pos(range.head.line - 1, range.head.ch)});\n      if (range.to().ch == 0 && !range.empty()) --to;\n      if (from > at) linesToMove.push(from, to);\n      else if (linesToMove.length) linesToMove[linesToMove.length - 1] = to;\n      at = to;\n    }\n    cm.operation(function() {\n      for (var i = 0; i < linesToMove.length; i += 2) {\n        var from = linesToMove[i], to = linesToMove[i + 1];\n        var line = cm.getLine(from);\n        cm.replaceRange(\"\", Pos(from, 0), Pos(from + 1, 0), \"+swapLine\");\n        if (to > cm.lastLine())\n          cm.replaceRange(\"\\n\" + line, Pos(cm.lastLine()), null, \"+swapLine\");\n        else\n          cm.replaceRange(line + \"\\n\", Pos(to, 0), null, \"+swapLine\");\n      }\n      cm.setSelections(newSels);\n      cm.scrollIntoView();\n    });\n  };\n\n  cmds.swapLineDown = function(cm) {\n    if (cm.isReadOnly()) return CodeMirror.Pass\n    var ranges = cm.listSelections(), linesToMove = [], at = cm.lastLine() + 1;\n    for (var i = ranges.length - 1; i >= 0; i--) {\n      var range = ranges[i], from = range.to().line + 1, to = range.from().line;\n      if (range.to().ch == 0 && !range.empty()) from--;\n      if (from < at) linesToMove.push(from, to);\n      else if (linesToMove.length) linesToMove[linesToMove.length - 1] = to;\n      at = to;\n    }\n    cm.operation(function() {\n      for (var i = linesToMove.length - 2; i >= 0; i -= 2) {\n        var from = linesToMove[i], to = linesToMove[i + 1];\n        var line = cm.getLine(from);\n        if (from == cm.lastLine())\n          cm.replaceRange(\"\", Pos(from - 1), Pos(from), \"+swapLine\");\n        else\n          cm.replaceRange(\"\", Pos(from, 0), Pos(from + 1, 0), \"+swapLine\");\n        cm.replaceRange(line + \"\\n\", Pos(to, 0), null, \"+swapLine\");\n      }\n      cm.scrollIntoView();\n    });\n  };\n\n  cmds.toggleCommentIndented = function(cm) {\n    cm.toggleComment({ indent: true });\n  }\n\n  cmds.joinLines = function(cm) {\n    var ranges = cm.listSelections(), joined = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i], from = range.from();\n      var start = from.line, end = range.to().line;\n      while (i < ranges.length - 1 && ranges[i + 1].from().line == end)\n        end = ranges[++i].to().line;\n      joined.push({start: start, end: end, anchor: !range.empty() && from});\n    }\n    cm.operation(function() {\n      var offset = 0, ranges = [];\n      for (var i = 0; i < joined.length; i++) {\n        var obj = joined[i];\n        var anchor = obj.anchor && Pos(obj.anchor.line - offset, obj.anchor.ch), head;\n        for (var line = obj.start; line <= obj.end; line++) {\n          var actual = line - offset;\n          if (line == obj.end) head = Pos(actual, cm.getLine(actual).length + 1);\n          if (actual < cm.lastLine()) {\n            cm.replaceRange(\" \", Pos(actual), Pos(actual + 1, /^\\s*/.exec(cm.getLine(actual + 1))[0].length));\n            ++offset;\n          }\n        }\n        ranges.push({anchor: anchor || head, head: head});\n      }\n      cm.setSelections(ranges, 0);\n    });\n  };\n\n  cmds.duplicateLine = function(cm) {\n    cm.operation(function() {\n      var rangeCount = cm.listSelections().length;\n      for (var i = 0; i < rangeCount; i++) {\n        var range = cm.listSelections()[i];\n        if (range.empty())\n          cm.replaceRange(cm.getLine(range.head.line) + \"\\n\", Pos(range.head.line, 0));\n        else\n          cm.replaceRange(cm.getRange(range.from(), range.to()), range.from());\n      }\n      cm.scrollIntoView();\n    });\n  };\n\n\n  function sortLines(cm, caseSensitive, direction) {\n    if (cm.isReadOnly()) return CodeMirror.Pass\n    var ranges = cm.listSelections(), toSort = [], selected;\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i];\n      if (range.empty()) continue;\n      var from = range.from().line, to = range.to().line;\n      while (i < ranges.length - 1 && ranges[i + 1].from().line == to)\n        to = ranges[++i].to().line;\n      if (!ranges[i].to().ch) to--;\n      toSort.push(from, to);\n    }\n    if (toSort.length) selected = true;\n    else toSort.push(cm.firstLine(), cm.lastLine());\n\n    cm.operation(function() {\n      var ranges = [];\n      for (var i = 0; i < toSort.length; i += 2) {\n        var from = toSort[i], to = toSort[i + 1];\n        var start = Pos(from, 0), end = Pos(to);\n        var lines = cm.getRange(start, end, false);\n        if (caseSensitive)\n          lines.sort(function(a, b) { return a < b ? -direction : a == b ? 0 : direction; });\n        else\n          lines.sort(function(a, b) {\n            var au = a.toUpperCase(), bu = b.toUpperCase();\n            if (au != bu) { a = au; b = bu; }\n            return a < b ? -direction : a == b ? 0 : direction;\n          });\n        cm.replaceRange(lines, start, end);\n        if (selected) ranges.push({anchor: start, head: Pos(to + 1, 0)});\n      }\n      if (selected) cm.setSelections(ranges, 0);\n    });\n  }\n\n  cmds.sortLines = function(cm) { sortLines(cm, true, 1); };\n  cmds.reverseSortLines = function(cm) { sortLines(cm, true, -1); };\n  cmds.sortLinesInsensitive = function(cm) { sortLines(cm, false, 1); };\n  cmds.reverseSortLinesInsensitive = function(cm) { sortLines(cm, false, -1); };\n\n  cmds.nextBookmark = function(cm) {\n    var marks = cm.state.sublimeBookmarks;\n    if (marks) while (marks.length) {\n      var current = marks.shift();\n      var found = current.find();\n      if (found) {\n        marks.push(current);\n        return cm.setSelection(found.from, found.to);\n      }\n    }\n  };\n\n  cmds.prevBookmark = function(cm) {\n    var marks = cm.state.sublimeBookmarks;\n    if (marks) while (marks.length) {\n      marks.unshift(marks.pop());\n      var found = marks[marks.length - 1].find();\n      if (!found)\n        marks.pop();\n      else\n        return cm.setSelection(found.from, found.to);\n    }\n  };\n\n  cmds.toggleBookmark = function(cm) {\n    var ranges = cm.listSelections();\n    var marks = cm.state.sublimeBookmarks || (cm.state.sublimeBookmarks = []);\n    for (var i = 0; i < ranges.length; i++) {\n      var from = ranges[i].from(), to = ranges[i].to();\n      var found = ranges[i].empty() ? cm.findMarksAt(from) : cm.findMarks(from, to);\n      for (var j = 0; j < found.length; j++) {\n        if (found[j].sublimeBookmark) {\n          found[j].clear();\n          for (var k = 0; k < marks.length; k++)\n            if (marks[k] == found[j])\n              marks.splice(k--, 1);\n          break;\n        }\n      }\n      if (j == found.length)\n        marks.push(cm.markText(from, to, {sublimeBookmark: true, clearWhenEmpty: false}));\n    }\n  };\n\n  cmds.clearBookmarks = function(cm) {\n    var marks = cm.state.sublimeBookmarks;\n    if (marks) for (var i = 0; i < marks.length; i++) marks[i].clear();\n    marks.length = 0;\n  };\n\n  cmds.selectBookmarks = function(cm) {\n    var marks = cm.state.sublimeBookmarks, ranges = [];\n    if (marks) for (var i = 0; i < marks.length; i++) {\n      var found = marks[i].find();\n      if (!found)\n        marks.splice(i--, 0);\n      else\n        ranges.push({anchor: found.from, head: found.to});\n    }\n    if (ranges.length)\n      cm.setSelections(ranges, 0);\n  };\n\n  function modifyWordOrSelection(cm, mod) {\n    cm.operation(function() {\n      var ranges = cm.listSelections(), indices = [], replacements = [];\n      for (var i = 0; i < ranges.length; i++) {\n        var range = ranges[i];\n        if (range.empty()) { indices.push(i); replacements.push(\"\"); }\n        else replacements.push(mod(cm.getRange(range.from(), range.to())));\n      }\n      cm.replaceSelections(replacements, \"around\", \"case\");\n      for (var i = indices.length - 1, at; i >= 0; i--) {\n        var range = ranges[indices[i]];\n        if (at && CodeMirror.cmpPos(range.head, at) > 0) continue;\n        var word = wordAt(cm, range.head);\n        at = word.from;\n        cm.replaceRange(mod(word.word), word.from, word.to);\n      }\n    });\n  }\n\n  cmds.smartBackspace = function(cm) {\n    if (cm.somethingSelected()) return CodeMirror.Pass;\n\n    cm.operation(function() {\n      var cursors = cm.listSelections();\n      var indentUnit = cm.getOption(\"indentUnit\");\n\n      for (var i = cursors.length - 1; i >= 0; i--) {\n        var cursor = cursors[i].head;\n        var toStartOfLine = cm.getRange({line: cursor.line, ch: 0}, cursor);\n        var column = CodeMirror.countColumn(toStartOfLine, null, cm.getOption(\"tabSize\"));\n\n        // Delete by one character by default\n        var deletePos = cm.findPosH(cursor, -1, \"char\", false);\n\n        if (toStartOfLine && !/\\S/.test(toStartOfLine) && column % indentUnit == 0) {\n          var prevIndent = new Pos(cursor.line,\n            CodeMirror.findColumn(toStartOfLine, column - indentUnit, indentUnit));\n\n          // Smart delete only if we found a valid prevIndent location\n          if (prevIndent.ch != cursor.ch) deletePos = prevIndent;\n        }\n\n        cm.replaceRange(\"\", deletePos, cursor, \"+delete\");\n      }\n    });\n  };\n\n  cmds.delLineRight = function(cm) {\n    cm.operation(function() {\n      var ranges = cm.listSelections();\n      for (var i = ranges.length - 1; i >= 0; i--)\n        cm.replaceRange(\"\", ranges[i].anchor, Pos(ranges[i].to().line), \"+delete\");\n      cm.scrollIntoView();\n    });\n  };\n\n  cmds.upcaseAtCursor = function(cm) {\n    modifyWordOrSelection(cm, function(str) { return str.toUpperCase(); });\n  };\n  cmds.downcaseAtCursor = function(cm) {\n    modifyWordOrSelection(cm, function(str) { return str.toLowerCase(); });\n  };\n\n  cmds.setSublimeMark = function(cm) {\n    if (cm.state.sublimeMark) cm.state.sublimeMark.clear();\n    cm.state.sublimeMark = cm.setBookmark(cm.getCursor());\n  };\n  cmds.selectToSublimeMark = function(cm) {\n    var found = cm.state.sublimeMark && cm.state.sublimeMark.find();\n    if (found) cm.setSelection(cm.getCursor(), found);\n  };\n  cmds.deleteToSublimeMark = function(cm) {\n    var found = cm.state.sublimeMark && cm.state.sublimeMark.find();\n    if (found) {\n      var from = cm.getCursor(), to = found;\n      if (CodeMirror.cmpPos(from, to) > 0) { var tmp = to; to = from; from = tmp; }\n      cm.state.sublimeKilled = cm.getRange(from, to);\n      cm.replaceRange(\"\", from, to);\n    }\n  };\n  cmds.swapWithSublimeMark = function(cm) {\n    var found = cm.state.sublimeMark && cm.state.sublimeMark.find();\n    if (found) {\n      cm.state.sublimeMark.clear();\n      cm.state.sublimeMark = cm.setBookmark(cm.getCursor());\n      cm.setCursor(found);\n    }\n  };\n  cmds.sublimeYank = function(cm) {\n    if (cm.state.sublimeKilled != null)\n      cm.replaceSelection(cm.state.sublimeKilled, null, \"paste\");\n  };\n\n  cmds.showInCenter = function(cm) {\n    var pos = cm.cursorCoords(null, \"local\");\n    cm.scrollTo(null, (pos.top + pos.bottom) / 2 - cm.getScrollInfo().clientHeight / 2);\n  };\n\n  function getTarget(cm) {\n    var from = cm.getCursor(\"from\"), to = cm.getCursor(\"to\");\n    if (CodeMirror.cmpPos(from, to) == 0) {\n      var word = wordAt(cm, from);\n      if (!word.word) return;\n      from = word.from;\n      to = word.to;\n    }\n    return {from: from, to: to, query: cm.getRange(from, to), word: word};\n  }\n\n  function findAndGoTo(cm, forward) {\n    var target = getTarget(cm);\n    if (!target) return;\n    var query = target.query;\n    var cur = cm.getSearchCursor(query, forward ? target.to : target.from);\n\n    if (forward ? cur.findNext() : cur.findPrevious()) {\n      cm.setSelection(cur.from(), cur.to());\n    } else {\n      cur = cm.getSearchCursor(query, forward ? Pos(cm.firstLine(), 0)\n                                              : cm.clipPos(Pos(cm.lastLine())));\n      if (forward ? cur.findNext() : cur.findPrevious())\n        cm.setSelection(cur.from(), cur.to());\n      else if (target.word)\n        cm.setSelection(target.from, target.to);\n    }\n  };\n  cmds.findUnder = function(cm) { findAndGoTo(cm, true); };\n  cmds.findUnderPrevious = function(cm) { findAndGoTo(cm,false); };\n  cmds.findAllUnder = function(cm) {\n    var target = getTarget(cm);\n    if (!target) return;\n    var cur = cm.getSearchCursor(target.query);\n    var matches = [];\n    var primaryIndex = -1;\n    while (cur.findNext()) {\n      matches.push({anchor: cur.from(), head: cur.to()});\n      if (cur.from().line <= target.from.line && cur.from().ch <= target.from.ch)\n        primaryIndex++;\n    }\n    cm.setSelections(matches, primaryIndex);\n  };\n\n\n  var keyMap = CodeMirror.keyMap;\n  keyMap.macSublime = {\n    \"Cmd-Left\": \"goLineStartSmart\",\n    \"Shift-Tab\": \"indentLess\",\n    \"Shift-Ctrl-K\": \"deleteLine\",\n    \"Alt-Q\": \"wrapLines\",\n    \"Ctrl-Left\": \"goSubwordLeft\",\n    \"Ctrl-Right\": \"goSubwordRight\",\n    \"Ctrl-Alt-Up\": \"scrollLineUp\",\n    \"Ctrl-Alt-Down\": \"scrollLineDown\",\n    \"Cmd-L\": \"selectLine\",\n    \"Shift-Cmd-L\": \"splitSelectionByLine\",\n    \"Esc\": \"singleSelectionTop\",\n    \"Cmd-Enter\": \"insertLineAfter\",\n    \"Shift-Cmd-Enter\": \"insertLineBefore\",\n    \"Cmd-D\": \"selectNextOccurrence\",\n    \"Shift-Cmd-Space\": \"selectScope\",\n    \"Shift-Cmd-M\": \"selectBetweenBrackets\",\n    \"Cmd-M\": \"goToBracket\",\n    \"Cmd-Ctrl-Up\": \"swapLineUp\",\n    \"Cmd-Ctrl-Down\": \"swapLineDown\",\n    \"Cmd-/\": \"toggleCommentIndented\",\n    \"Cmd-J\": \"joinLines\",\n    \"Shift-Cmd-D\": \"duplicateLine\",\n    \"F5\": \"sortLines\",\n    \"Shift-F5\": \"reverseSortLines\",\n    \"Cmd-F5\": \"sortLinesInsensitive\",\n    \"Shift-Cmd-F5\": \"reverseSortLinesInsensitive\",\n    \"F2\": \"nextBookmark\",\n    \"Shift-F2\": \"prevBookmark\",\n    \"Cmd-F2\": \"toggleBookmark\",\n    \"Shift-Cmd-F2\": \"clearBookmarks\",\n    \"Alt-F2\": \"selectBookmarks\",\n    \"Backspace\": \"smartBackspace\",\n    \"Cmd-K Cmd-D\": \"skipAndSelectNextOccurrence\",\n    \"Cmd-K Cmd-K\": \"delLineRight\",\n    \"Cmd-K Cmd-U\": \"upcaseAtCursor\",\n    \"Cmd-K Cmd-L\": \"downcaseAtCursor\",\n    \"Cmd-K Cmd-Space\": \"setSublimeMark\",\n    \"Cmd-K Cmd-A\": \"selectToSublimeMark\",\n    \"Cmd-K Cmd-W\": \"deleteToSublimeMark\",\n    \"Cmd-K Cmd-X\": \"swapWithSublimeMark\",\n    \"Cmd-K Cmd-Y\": \"sublimeYank\",\n    \"Cmd-K Cmd-C\": \"showInCenter\",\n    \"Cmd-K Cmd-G\": \"clearBookmarks\",\n    \"Cmd-K Cmd-Backspace\": \"delLineLeft\",\n    \"Cmd-K Cmd-1\": \"foldAll\",\n    \"Cmd-K Cmd-0\": \"unfoldAll\",\n    \"Cmd-K Cmd-J\": \"unfoldAll\",\n    \"Ctrl-Shift-Up\": \"addCursorToPrevLine\",\n    \"Ctrl-Shift-Down\": \"addCursorToNextLine\",\n    \"Cmd-F3\": \"findUnder\",\n    \"Shift-Cmd-F3\": \"findUnderPrevious\",\n    \"Alt-F3\": \"findAllUnder\",\n    \"Shift-Cmd-[\": \"fold\",\n    \"Shift-Cmd-]\": \"unfold\",\n    \"Cmd-I\": \"findIncremental\",\n    \"Shift-Cmd-I\": \"findIncrementalReverse\",\n    \"Cmd-H\": \"replace\",\n    \"F3\": \"findNext\",\n    \"Shift-F3\": \"findPrev\",\n    \"fallthrough\": \"macDefault\"\n  };\n  CodeMirror.normalizeKeyMap(keyMap.macSublime);\n\n  keyMap.pcSublime = {\n    \"Shift-Tab\": \"indentLess\",\n    \"Shift-Ctrl-K\": \"deleteLine\",\n    \"Alt-Q\": \"wrapLines\",\n    \"Ctrl-T\": \"transposeChars\",\n    \"Alt-Left\": \"goSubwordLeft\",\n    \"Alt-Right\": \"goSubwordRight\",\n    \"Ctrl-Up\": \"scrollLineUp\",\n    \"Ctrl-Down\": \"scrollLineDown\",\n    \"Ctrl-L\": \"selectLine\",\n    \"Shift-Ctrl-L\": \"splitSelectionByLine\",\n    \"Esc\": \"singleSelectionTop\",\n    \"Ctrl-Enter\": \"insertLineAfter\",\n    \"Shift-Ctrl-Enter\": \"insertLineBefore\",\n    \"Ctrl-D\": \"selectNextOccurrence\",\n    \"Shift-Ctrl-Space\": \"selectScope\",\n    \"Shift-Ctrl-M\": \"selectBetweenBrackets\",\n    \"Ctrl-M\": \"goToBracket\",\n    \"Shift-Ctrl-Up\": \"swapLineUp\",\n    \"Shift-Ctrl-Down\": \"swapLineDown\",\n    \"Ctrl-/\": \"toggleCommentIndented\",\n    \"Ctrl-J\": \"joinLines\",\n    \"Shift-Ctrl-D\": \"duplicateLine\",\n    \"F9\": \"sortLines\",\n    \"Shift-F9\": \"reverseSortLines\",\n    \"Ctrl-F9\": \"sortLinesInsensitive\",\n    \"Shift-Ctrl-F9\": \"reverseSortLinesInsensitive\",\n    \"F2\": \"nextBookmark\",\n    \"Shift-F2\": \"prevBookmark\",\n    \"Ctrl-F2\": \"toggleBookmark\",\n    \"Shift-Ctrl-F2\": \"clearBookmarks\",\n    \"Alt-F2\": \"selectBookmarks\",\n    \"Backspace\": \"smartBackspace\",\n    \"Ctrl-K Ctrl-D\": \"skipAndSelectNextOccurrence\",\n    \"Ctrl-K Ctrl-K\": \"delLineRight\",\n    \"Ctrl-K Ctrl-U\": \"upcaseAtCursor\",\n    \"Ctrl-K Ctrl-L\": \"downcaseAtCursor\",\n    \"Ctrl-K Ctrl-Space\": \"setSublimeMark\",\n    \"Ctrl-K Ctrl-A\": \"selectToSublimeMark\",\n    \"Ctrl-K Ctrl-W\": \"deleteToSublimeMark\",\n    \"Ctrl-K Ctrl-X\": \"swapWithSublimeMark\",\n    \"Ctrl-K Ctrl-Y\": \"sublimeYank\",\n    \"Ctrl-K Ctrl-C\": \"showInCenter\",\n    \"Ctrl-K Ctrl-G\": \"clearBookmarks\",\n    \"Ctrl-K Ctrl-Backspace\": \"delLineLeft\",\n    \"Ctrl-K Ctrl-1\": \"foldAll\",\n    \"Ctrl-K Ctrl-0\": \"unfoldAll\",\n    \"Ctrl-K Ctrl-J\": \"unfoldAll\",\n    \"Ctrl-Alt-Up\": \"addCursorToPrevLine\",\n    \"Ctrl-Alt-Down\": \"addCursorToNextLine\",\n    \"Ctrl-F3\": \"findUnder\",\n    \"Shift-Ctrl-F3\": \"findUnderPrevious\",\n    \"Alt-F3\": \"findAllUnder\",\n    \"Shift-Ctrl-[\": \"fold\",\n    \"Shift-Ctrl-]\": \"unfold\",\n    \"Ctrl-I\": \"findIncremental\",\n    \"Shift-Ctrl-I\": \"findIncrementalReverse\",\n    \"Ctrl-H\": \"replace\",\n    \"F3\": \"findNext\",\n    \"Shift-F3\": \"findPrev\",\n    \"fallthrough\": \"pcDefault\"\n  };\n  CodeMirror.normalizeKeyMap(keyMap.pcSublime);\n\n  var mac = keyMap.default == keyMap.macDefault;\n  keyMap.sublime = mac ? keyMap.macSublime : keyMap.pcSublime;\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"))\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod)\n  else // Plain browser env\n    mod(CodeMirror)\n})(function(CodeMirror) {\n  \"use strict\"\n  var Pos = CodeMirror.Pos\n\n  function regexpFlags(regexp) {\n    var flags = regexp.flags\n    return flags != null ? flags : (regexp.ignoreCase ? \"i\" : \"\")\n      + (regexp.global ? \"g\" : \"\")\n      + (regexp.multiline ? \"m\" : \"\")\n  }\n\n  function ensureFlags(regexp, flags) {\n    var current = regexpFlags(regexp), target = current\n    for (var i = 0; i < flags.length; i++) if (target.indexOf(flags.charAt(i)) == -1)\n      target += flags.charAt(i)\n    return current == target ? regexp : new RegExp(regexp.source, target)\n  }\n\n  function maybeMultiline(regexp) {\n    return /\\\\s|\\\\n|\\n|\\\\W|\\\\D|\\[\\^/.test(regexp.source)\n  }\n\n  function searchRegexpForward(doc, regexp, start) {\n    regexp = ensureFlags(regexp, \"g\")\n    for (var line = start.line, ch = start.ch, last = doc.lastLine(); line <= last; line++, ch = 0) {\n      regexp.lastIndex = ch\n      var string = doc.getLine(line), match = regexp.exec(string)\n      if (match)\n        return {from: Pos(line, match.index),\n                to: Pos(line, match.index + match[0].length),\n                match: match}\n    }\n  }\n\n  function searchRegexpForwardMultiline(doc, regexp, start) {\n    if (!maybeMultiline(regexp)) return searchRegexpForward(doc, regexp, start)\n\n    regexp = ensureFlags(regexp, \"gm\")\n    var string, chunk = 1\n    for (var line = start.line, last = doc.lastLine(); line <= last;) {\n      // This grows the search buffer in exponentially-sized chunks\n      // between matches, so that nearby matches are fast and don't\n      // require concatenating the whole document (in case we're\n      // searching for something that has tons of matches), but at the\n      // same time, the amount of retries is limited.\n      for (var i = 0; i < chunk; i++) {\n        if (line > last) break\n        var curLine = doc.getLine(line++)\n        string = string == null ? curLine : string + \"\\n\" + curLine\n      }\n      chunk = chunk * 2\n      regexp.lastIndex = start.ch\n      var match = regexp.exec(string)\n      if (match) {\n        var before = string.slice(0, match.index).split(\"\\n\"), inside = match[0].split(\"\\n\")\n        var startLine = start.line + before.length - 1, startCh = before[before.length - 1].length\n        return {from: Pos(startLine, startCh),\n                to: Pos(startLine + inside.length - 1,\n                        inside.length == 1 ? startCh + inside[0].length : inside[inside.length - 1].length),\n                match: match}\n      }\n    }\n  }\n\n  function lastMatchIn(string, regexp, endMargin) {\n    var match, from = 0\n    while (from <= string.length) {\n      regexp.lastIndex = from\n      var newMatch = regexp.exec(string)\n      if (!newMatch) break\n      var end = newMatch.index + newMatch[0].length\n      if (end > string.length - endMargin) break\n      if (!match || end > match.index + match[0].length)\n        match = newMatch\n      from = newMatch.index + 1\n    }\n    return match\n  }\n\n  function searchRegexpBackward(doc, regexp, start) {\n    regexp = ensureFlags(regexp, \"g\")\n    for (var line = start.line, ch = start.ch, first = doc.firstLine(); line >= first; line--, ch = -1) {\n      var string = doc.getLine(line)\n      var match = lastMatchIn(string, regexp, ch < 0 ? 0 : string.length - ch)\n      if (match)\n        return {from: Pos(line, match.index),\n                to: Pos(line, match.index + match[0].length),\n                match: match}\n    }\n  }\n\n  function searchRegexpBackwardMultiline(doc, regexp, start) {\n    if (!maybeMultiline(regexp)) return searchRegexpBackward(doc, regexp, start)\n    regexp = ensureFlags(regexp, \"gm\")\n    var string, chunkSize = 1, endMargin = doc.getLine(start.line).length - start.ch\n    for (var line = start.line, first = doc.firstLine(); line >= first;) {\n      for (var i = 0; i < chunkSize && line >= first; i++) {\n        var curLine = doc.getLine(line--)\n        string = string == null ? curLine : curLine + \"\\n\" + string\n      }\n      chunkSize *= 2\n\n      var match = lastMatchIn(string, regexp, endMargin)\n      if (match) {\n        var before = string.slice(0, match.index).split(\"\\n\"), inside = match[0].split(\"\\n\")\n        var startLine = line + before.length, startCh = before[before.length - 1].length\n        return {from: Pos(startLine, startCh),\n                to: Pos(startLine + inside.length - 1,\n                        inside.length == 1 ? startCh + inside[0].length : inside[inside.length - 1].length),\n                match: match}\n      }\n    }\n  }\n\n  var doFold, noFold\n  if (String.prototype.normalize) {\n    doFold = function(str) { return str.normalize(\"NFD\").toLowerCase() }\n    noFold = function(str) { return str.normalize(\"NFD\") }\n  } else {\n    doFold = function(str) { return str.toLowerCase() }\n    noFold = function(str) { return str }\n  }\n\n  // Maps a position in a case-folded line back to a position in the original line\n  // (compensating for codepoints increasing in number during folding)\n  function adjustPos(orig, folded, pos, foldFunc) {\n    if (orig.length == folded.length) return pos\n    for (var min = 0, max = pos + Math.max(0, orig.length - folded.length);;) {\n      if (min == max) return min\n      var mid = (min + max) >> 1\n      var len = foldFunc(orig.slice(0, mid)).length\n      if (len == pos) return mid\n      else if (len > pos) max = mid\n      else min = mid + 1\n    }\n  }\n\n  function searchStringForward(doc, query, start, caseFold) {\n    // Empty string would match anything and never progress, so we\n    // define it to match nothing instead.\n    if (!query.length) return null\n    var fold = caseFold ? doFold : noFold\n    var lines = fold(query).split(/\\r|\\n\\r?/)\n\n    search: for (var line = start.line, ch = start.ch, last = doc.lastLine() + 1 - lines.length; line <= last; line++, ch = 0) {\n      var orig = doc.getLine(line).slice(ch), string = fold(orig)\n      if (lines.length == 1) {\n        var found = string.indexOf(lines[0])\n        if (found == -1) continue search\n        var start = adjustPos(orig, string, found, fold) + ch\n        return {from: Pos(line, adjustPos(orig, string, found, fold) + ch),\n                to: Pos(line, adjustPos(orig, string, found + lines[0].length, fold) + ch)}\n      } else {\n        var cutFrom = string.length - lines[0].length\n        if (string.slice(cutFrom) != lines[0]) continue search\n        for (var i = 1; i < lines.length - 1; i++)\n          if (fold(doc.getLine(line + i)) != lines[i]) continue search\n        var end = doc.getLine(line + lines.length - 1), endString = fold(end), lastLine = lines[lines.length - 1]\n        if (endString.slice(0, lastLine.length) != lastLine) continue search\n        return {from: Pos(line, adjustPos(orig, string, cutFrom, fold) + ch),\n                to: Pos(line + lines.length - 1, adjustPos(end, endString, lastLine.length, fold))}\n      }\n    }\n  }\n\n  function searchStringBackward(doc, query, start, caseFold) {\n    if (!query.length) return null\n    var fold = caseFold ? doFold : noFold\n    var lines = fold(query).split(/\\r|\\n\\r?/)\n\n    search: for (var line = start.line, ch = start.ch, first = doc.firstLine() - 1 + lines.length; line >= first; line--, ch = -1) {\n      var orig = doc.getLine(line)\n      if (ch > -1) orig = orig.slice(0, ch)\n      var string = fold(orig)\n      if (lines.length == 1) {\n        var found = string.lastIndexOf(lines[0])\n        if (found == -1) continue search\n        return {from: Pos(line, adjustPos(orig, string, found, fold)),\n                to: Pos(line, adjustPos(orig, string, found + lines[0].length, fold))}\n      } else {\n        var lastLine = lines[lines.length - 1]\n        if (string.slice(0, lastLine.length) != lastLine) continue search\n        for (var i = 1, start = line - lines.length + 1; i < lines.length - 1; i++)\n          if (fold(doc.getLine(start + i)) != lines[i]) continue search\n        var top = doc.getLine(line + 1 - lines.length), topString = fold(top)\n        if (topString.slice(topString.length - lines[0].length) != lines[0]) continue search\n        return {from: Pos(line + 1 - lines.length, adjustPos(top, topString, top.length - lines[0].length, fold)),\n                to: Pos(line, adjustPos(orig, string, lastLine.length, fold))}\n      }\n    }\n  }\n\n  function SearchCursor(doc, query, pos, options) {\n    this.atOccurrence = false\n    this.afterEmptyMatch = false\n    this.doc = doc\n    pos = pos ? doc.clipPos(pos) : Pos(0, 0)\n    this.pos = {from: pos, to: pos}\n\n    var caseFold\n    if (typeof options == \"object\") {\n      caseFold = options.caseFold\n    } else { // Backwards compat for when caseFold was the 4th argument\n      caseFold = options\n      options = null\n    }\n\n    if (typeof query == \"string\") {\n      if (caseFold == null) caseFold = false\n      this.matches = function(reverse, pos) {\n        return (reverse ? searchStringBackward : searchStringForward)(doc, query, pos, caseFold)\n      }\n    } else {\n      query = ensureFlags(query, \"gm\")\n      if (!options || options.multiline !== false)\n        this.matches = function(reverse, pos) {\n          return (reverse ? searchRegexpBackwardMultiline : searchRegexpForwardMultiline)(doc, query, pos)\n        }\n      else\n        this.matches = function(reverse, pos) {\n          return (reverse ? searchRegexpBackward : searchRegexpForward)(doc, query, pos)\n        }\n    }\n  }\n\n  SearchCursor.prototype = {\n    findNext: function() {return this.find(false)},\n    findPrevious: function() {return this.find(true)},\n\n    find: function(reverse) {\n      var head = this.doc.clipPos(reverse ? this.pos.from : this.pos.to);\n      if (this.afterEmptyMatch && this.atOccurrence) {\n        // do not return the same 0 width match twice\n        head = Pos(head.line, head.ch)\n        if (reverse) {\n          head.ch--;\n          if (head.ch < 0) {\n            head.line--;\n            head.ch = (this.doc.getLine(head.line) || \"\").length;\n          }\n        } else {\n          head.ch++;\n          if (head.ch > (this.doc.getLine(head.line) || \"\").length) {\n            head.ch = 0;\n            head.line++;\n          }\n        }\n        if (CodeMirror.cmpPos(head, this.doc.clipPos(head)) != 0) {\n           return this.atOccurrence = false\n        }\n      }\n      var result = this.matches(reverse, head)\n      this.afterEmptyMatch = result && CodeMirror.cmpPos(result.from, result.to) == 0\n\n      if (result) {\n        this.pos = result\n        this.atOccurrence = true\n        return this.pos.match || true\n      } else {\n        var end = Pos(reverse ? this.doc.firstLine() : this.doc.lastLine() + 1, 0)\n        this.pos = {from: end, to: end}\n        return this.atOccurrence = false\n      }\n    },\n\n    from: function() {if (this.atOccurrence) return this.pos.from},\n    to: function() {if (this.atOccurrence) return this.pos.to},\n\n    replace: function(newText, origin) {\n      if (!this.atOccurrence) return\n      var lines = CodeMirror.splitLines(newText)\n      this.doc.replaceRange(lines, this.pos.from, this.pos.to, origin)\n      this.pos.to = Pos(this.pos.from.line + lines.length - 1,\n                        lines[lines.length - 1].length + (lines.length == 1 ? this.pos.from.ch : 0))\n    }\n  }\n\n  CodeMirror.defineExtension(\"getSearchCursor\", function(query, pos, caseFold) {\n    return new SearchCursor(this.doc, query, pos, caseFold)\n  })\n  CodeMirror.defineDocExtension(\"getSearchCursor\", function(query, pos, caseFold) {\n    return new SearchCursor(this, query, pos, caseFold)\n  })\n\n  CodeMirror.defineExtension(\"selectMatches\", function(query, caseFold) {\n    var ranges = []\n    var cur = this.getSearchCursor(query, this.getCursor(\"from\"), caseFold)\n    while (cur.findNext()) {\n      if (CodeMirror.cmpPos(cur.to(), this.getCursor(\"to\")) > 0) break\n      ranges.push({anchor: cur.from(), head: cur.to()})\n    }\n    if (ranges.length)\n      this.setSelections(ranges, 0)\n  })\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  var ie_lt8 = /MSIE \\d/.test(navigator.userAgent) &&\n    (document.documentMode == null || document.documentMode < 8);\n\n  var Pos = CodeMirror.Pos;\n\n  var matching = {\"(\": \")>\", \")\": \"(<\", \"[\": \"]>\", \"]\": \"[<\", \"{\": \"}>\", \"}\": \"{<\", \"<\": \">>\", \">\": \"<<\"};\n\n  function bracketRegex(config) {\n    return config && config.bracketRegex || /[(){}[\\]]/\n  }\n\n  function findMatchingBracket(cm, where, config) {\n    var line = cm.getLineHandle(where.line), pos = where.ch - 1;\n    var afterCursor = config && config.afterCursor\n    if (afterCursor == null)\n      afterCursor = /(^| )cm-fat-cursor($| )/.test(cm.getWrapperElement().className)\n    var re = bracketRegex(config)\n\n    // A cursor is defined as between two characters, but in vim command mode\n    // (i.e. not insert mode), the cursor is visually represented as a\n    // highlighted box on top of the 2nd character. Otherwise, we allow matches\n    // from before or after the cursor.\n    var match = (!afterCursor && pos >= 0 && re.test(line.text.charAt(pos)) && matching[line.text.charAt(pos)]) ||\n        re.test(line.text.charAt(pos + 1)) && matching[line.text.charAt(++pos)];\n    if (!match) return null;\n    var dir = match.charAt(1) == \">\" ? 1 : -1;\n    if (config && config.strict && (dir > 0) != (pos == where.ch)) return null;\n    var style = cm.getTokenTypeAt(Pos(where.line, pos + 1));\n\n    var found = scanForBracket(cm, Pos(where.line, pos + (dir > 0 ? 1 : 0)), dir, style, config);\n    if (found == null) return null;\n    return {from: Pos(where.line, pos), to: found && found.pos,\n            match: found && found.ch == match.charAt(0), forward: dir > 0};\n  }\n\n  // bracketRegex is used to specify which type of bracket to scan\n  // should be a regexp, e.g. /[[\\]]/\n  //\n  // Note: If \"where\" is on an open bracket, then this bracket is ignored.\n  //\n  // Returns false when no bracket was found, null when it reached\n  // maxScanLines and gave up\n  function scanForBracket(cm, where, dir, style, config) {\n    var maxScanLen = (config && config.maxScanLineLength) || 10000;\n    var maxScanLines = (config && config.maxScanLines) || 1000;\n\n    var stack = [];\n    var re = bracketRegex(config)\n    var lineEnd = dir > 0 ? Math.min(where.line + maxScanLines, cm.lastLine() + 1)\n                          : Math.max(cm.firstLine() - 1, where.line - maxScanLines);\n    for (var lineNo = where.line; lineNo != lineEnd; lineNo += dir) {\n      var line = cm.getLine(lineNo);\n      if (!line) continue;\n      var pos = dir > 0 ? 0 : line.length - 1, end = dir > 0 ? line.length : -1;\n      if (line.length > maxScanLen) continue;\n      if (lineNo == where.line) pos = where.ch - (dir < 0 ? 1 : 0);\n      for (; pos != end; pos += dir) {\n        var ch = line.charAt(pos);\n        if (re.test(ch) && (style === undefined ||\n                            (cm.getTokenTypeAt(Pos(lineNo, pos + 1)) || \"\") == (style || \"\"))) {\n          var match = matching[ch];\n          if (match && (match.charAt(1) == \">\") == (dir > 0)) stack.push(ch);\n          else if (!stack.length) return {pos: Pos(lineNo, pos), ch: ch};\n          else stack.pop();\n        }\n      }\n    }\n    return lineNo - dir == (dir > 0 ? cm.lastLine() : cm.firstLine()) ? false : null;\n  }\n\n  function matchBrackets(cm, autoclear, config) {\n    // Disable brace matching in long lines, since it'll cause hugely slow updates\n    var maxHighlightLen = cm.state.matchBrackets.maxHighlightLineLength || 1000,\n      highlightNonMatching = config && config.highlightNonMatching;\n    var marks = [], ranges = cm.listSelections();\n    for (var i = 0; i < ranges.length; i++) {\n      var match = ranges[i].empty() && findMatchingBracket(cm, ranges[i].head, config);\n      if (match && (match.match || highlightNonMatching !== false) && cm.getLine(match.from.line).length <= maxHighlightLen) {\n        var style = match.match ? \"CodeMirror-matchingbracket\" : \"CodeMirror-nonmatchingbracket\";\n        marks.push(cm.markText(match.from, Pos(match.from.line, match.from.ch + 1), {className: style}));\n        if (match.to && cm.getLine(match.to.line).length <= maxHighlightLen)\n          marks.push(cm.markText(match.to, Pos(match.to.line, match.to.ch + 1), {className: style}));\n      }\n    }\n\n    if (marks.length) {\n      // Kludge to work around the IE bug from issue #1193, where text\n      // input stops going to the textarea whenever this fires.\n      if (ie_lt8 && cm.state.focused) cm.focus();\n\n      var clear = function() {\n        cm.operation(function() {\n          for (var i = 0; i < marks.length; i++) marks[i].clear();\n        });\n      };\n      if (autoclear) setTimeout(clear, 800);\n      else return clear;\n    }\n  }\n\n  function doMatchBrackets(cm) {\n    cm.operation(function() {\n      if (cm.state.matchBrackets.currentlyHighlighted) {\n        cm.state.matchBrackets.currentlyHighlighted();\n        cm.state.matchBrackets.currentlyHighlighted = null;\n      }\n      cm.state.matchBrackets.currentlyHighlighted = matchBrackets(cm, false, cm.state.matchBrackets);\n    });\n  }\n\n  function clearHighlighted(cm) {\n    if (cm.state.matchBrackets && cm.state.matchBrackets.currentlyHighlighted) {\n      cm.state.matchBrackets.currentlyHighlighted();\n      cm.state.matchBrackets.currentlyHighlighted = null;\n    }\n  }\n\n  CodeMirror.defineOption(\"matchBrackets\", false, function(cm, val, old) {\n    if (old && old != CodeMirror.Init) {\n      cm.off(\"cursorActivity\", doMatchBrackets);\n      cm.off(\"focus\", doMatchBrackets)\n      cm.off(\"blur\", clearHighlighted)\n      clearHighlighted(cm);\n    }\n    if (val) {\n      cm.state.matchBrackets = typeof val == \"object\" ? val : {};\n      cm.on(\"cursorActivity\", doMatchBrackets);\n      cm.on(\"focus\", doMatchBrackets)\n      cm.on(\"blur\", clearHighlighted)\n    }\n  });\n\n  CodeMirror.defineExtension(\"matchBrackets\", function() {matchBrackets(this, true);});\n  CodeMirror.defineExtension(\"findMatchingBracket\", function(pos, config, oldConfig){\n    // Backwards-compatibility kludge\n    if (oldConfig || typeof config == \"boolean\") {\n      if (!oldConfig) {\n        config = config ? {strict: true} : null\n      } else {\n        oldConfig.strict = config\n        config = oldConfig\n      }\n    }\n    return findMatchingBracket(this, pos, config)\n  });\n  CodeMirror.defineExtension(\"scanForBracket\", function(pos, dir, style, config){\n    return scanForBracket(this, pos, dir, style, config);\n  });\n});\n"],"names":["CodeMirror","cmds","commands","Pos","moveSubword","cm","dir","extendSelectionsBy","range","display","shift","doc","extend","empty","start","ch","clipPos","line","getLine","length","type","state","startPos","pos","e","i","next","charAt","cat","isWordChar","toUpperCase","findPosSubword","head","from","to","insertLine","above","isReadOnly","Pass","operation","len","listSelections","newSelection","last","at","replaceRange","indentLine","push","anchor","setSelections","execCommand","wordAt","end","word","slice","addCursorToSelection","ranges","newRanges","newAnchor","findPosV","goalColumn","newHead","cursorCoords","left","newRange","goSubwordLeft","goSubwordRight","scrollLineUp","info","getScrollInfo","somethingSelected","visibleBottomLine","lineAtHeight","top","clientHeight","getCursor","scrollTo","defaultTextHeight","scrollLineDown","visibleTopLine","splitSelectionByLine","lineRanges","singleSelectionTop","setSelection","scroll","selectLine","extended","insertLineAfter","insertLineBefore","selectNextOccurrence","fullWord","sublimeFindFullWord","sel","cmpPos","text","getRange","query","RegExp","cur","getSearchCursor","found","findNext","firstLine","isSelectedRange","addSelection","skipAndSelectNextOccurrence","prevAnchor","prevHead","filter","addCursorToPrevLine","addCursorToNextLine","mirror","selectBetweenBrackets","opening","scanForBracket","closing","indexOf","puncType","test","undefined","sortLines","caseSensitive","direction","selected","toSort","lastLine","lines","sort","a","b","au","bu","modifyWordOrSelection","mod","indices","replacements","replaceSelections","getTarget","findAndGoTo","forward","target","findPrevious","selectScope","goToBracket","getTokenTypeAt","prev","swapLineUp","linesToMove","newSels","scrollIntoView","swapLineDown","toggleCommentIndented","toggleComment","indent","joinLines","joined","offset","obj","actual","exec","duplicateLine","rangeCount","reverseSortLines","sortLinesInsensitive","reverseSortLinesInsensitive","nextBookmark","marks","sublimeBookmarks","current","find","prevBookmark","unshift","pop","toggleBookmark","findMarksAt","findMarks","j","sublimeBookmark","clear","k","splice","markText","clearWhenEmpty","clearBookmarks","selectBookmarks","smartBackspace","cursors","indentUnit","getOption","cursor","toStartOfLine","column","countColumn","deletePos","findPosH","prevIndent","findColumn","delLineRight","upcaseAtCursor","str","downcaseAtCursor","toLowerCase","setSublimeMark","sublimeMark","setBookmark","selectToSublimeMark","deleteToSublimeMark","tmp","sublimeKilled","swapWithSublimeMark","setCursor","sublimeYank","replaceSelection","showInCenter","bottom","findUnder","findUnderPrevious","findAllUnder","matches","primaryIndex","keyMap","macSublime","normalizeKeyMap","pcSublime","mac","default","macDefault","sublime","doFold","noFold","ensureFlags","regexp","flags","ignoreCase","global","multiline","regexpFlags","source","maybeMultiline","searchRegexpForward","lastIndex","string","match","index","searchRegexpForwardMultiline","chunk","curLine","before","split","inside","startLine","startCh","lastMatchIn","endMargin","newMatch","searchRegexpBackward","first","searchRegexpBackwardMultiline","chunkSize","adjustPos","orig","folded","foldFunc","min","max","Math","mid","searchStringForward","caseFold","fold","search","cutFrom","endString","searchStringBackward","lastIndexOf","topString","SearchCursor","options","this","atOccurrence","afterEmptyMatch","reverse","String","prototype","normalize","result","replace","newText","origin","splitLines","defineExtension","defineDocExtension","ie_lt8","navigator","userAgent","document","documentMode","matching","bracketRegex","config","findMatchingBracket","where","getLineHandle","afterCursor","getWrapperElement","className","re","strict","style","maxScanLen","maxScanLineLength","maxScanLines","stack","lineEnd","lineNo","matchBrackets","autoclear","maxHighlightLen","maxHighlightLineLength","highlightNonMatching","focused","focus","setTimeout","doMatchBrackets","currentlyHighlighted","clearHighlighted","defineOption","val","old","Init","off","on","oldConfig"],"sourceRoot":""}