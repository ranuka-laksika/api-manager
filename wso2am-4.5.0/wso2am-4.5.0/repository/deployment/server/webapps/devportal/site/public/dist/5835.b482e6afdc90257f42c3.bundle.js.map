{"version":3,"file":"5835.b482e6afdc90257f42c3.bundle.js","mappings":"yKAEA,eAAsB,WCAKA,IACvB,MAAMC,GAAS,QAAa,CACxBC,cAAeC,GAAUA,EAAOC,SAAS,MACzCC,SAAU,KACVC,WAAY,KACZC,aAAc,CAAEC,QAASR,EAAOQ,WAEpC,MAAO,CACHR,SACAS,WAAYR,EAAOQ,WACnBC,MAAOT,EAAOS,MACdC,OAAM,IACNC,cAAe,aACfC,KAAM,QACNC,YAAa,IACbC,cAAe,CACXC,MAAO,WACPC,QAAS,a,kBCnBN,SAASN,EAAOO,EAAOC,GAClC,IAAIC,EAAIC,EACR,MAAM,OAAEC,EAAM,YAAEC,GAAgBL,EAIhC,QAHeI,GAA4B,IAAlBA,EAAOE,OAE1BF,EAAOG,IAAI,KAAqC,QAA7BL,EAAKM,KAAKd,qBAAkC,IAAPQ,OAAgB,EAASA,EAAGO,KAAKR,IAAc,EAAI,GAD3GI,IAEW,KAA8B,QAAtBF,EAAKK,KAAK1B,cAA2B,IAAPqB,OAAgB,EAASA,EAAGO,aAAe,EACtG,C","sources":["webpack://@wso2apim/devportal/./node_modules/codemirror-graphql/esm/mode.js","webpack://@wso2apim/devportal/./node_modules/codemirror-graphql/esm/utils/mode-factory.js","webpack://@wso2apim/devportal/./node_modules/codemirror-graphql/esm/utils/mode-indent.js"],"sourcesContent":["import CodeMirror from 'codemirror';\nimport modeFactory from './utils/mode-factory';\nCodeMirror.defineMode('graphql', modeFactory);\n//# sourceMappingURL=mode.js.map","import { LexRules, ParseRules, isIgnored, onlineParser, } from 'graphql-language-service';\nimport indent from './mode-indent';\nconst graphqlModeFactory = config => {\n    const parser = onlineParser({\n        eatWhitespace: stream => stream.eatWhile(isIgnored),\n        lexRules: LexRules,\n        parseRules: ParseRules,\n        editorConfig: { tabSize: config.tabSize },\n    });\n    return {\n        config,\n        startState: parser.startState,\n        token: parser.token,\n        indent,\n        electricInput: /^\\s*[})\\]]/,\n        fold: 'brace',\n        lineComment: '#',\n        closeBrackets: {\n            pairs: '()[]{}\"\"',\n            explode: '()[]{}',\n        },\n    };\n};\nexport default graphqlModeFactory;\n//# sourceMappingURL=mode-factory.js.map","export default function indent(state, textAfter) {\n    var _a, _b;\n    const { levels, indentLevel } = state;\n    const level = !levels || levels.length === 0\n        ? indentLevel\n        : levels.at(-1) - (((_a = this.electricInput) === null || _a === void 0 ? void 0 : _a.test(textAfter)) ? 1 : 0);\n    return (level || 0) * (((_b = this.config) === null || _b === void 0 ? void 0 : _b.indentUnit) || 0);\n}\n//# sourceMappingURL=mode-indent.js.map"],"names":["config","parser","eatWhitespace","stream","eatWhile","lexRules","parseRules","editorConfig","tabSize","startState","token","indent","electricInput","fold","lineComment","closeBrackets","pairs","explode","state","textAfter","_a","_b","levels","indentLevel","length","at","this","test","indentUnit"],"sourceRoot":""}