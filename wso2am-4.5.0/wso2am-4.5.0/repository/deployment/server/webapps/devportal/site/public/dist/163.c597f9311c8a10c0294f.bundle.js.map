{"version":3,"file":"163.c597f9311c8a10c0294f.bundle.js","mappings":"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","sources":["webpack://@wso2apim/devportal/./node_modules/codemirror-graphql/esm/utils/forEachState.js","webpack://@wso2apim/devportal/./node_modules/codemirror-graphql/esm/utils/hintList.js","webpack://@wso2apim/devportal/./node_modules/codemirror-graphql/esm/variables/hint.js"],"sourcesContent":["export default function forEachState(stack, fn) {\n    const reverseStateStack = [];\n    let state = stack;\n    while (state === null || state === void 0 ? void 0 : state.kind) {\n        reverseStateStack.push(state);\n        state = state.prevState;\n    }\n    for (let i = reverseStateStack.length - 1; i >= 0; i--) {\n        fn(reverseStateStack[i]);\n    }\n}\n//# sourceMappingURL=forEachState.js.map","export default function hintList(cursor, token, list) {\n    const hints = filterAndSortList(list, normalizeText(token.string));\n    if (!hints) {\n        return;\n    }\n    const tokenStart = token.type !== null && /\"|\\w/.test(token.string[0])\n        ? token.start\n        : token.end;\n    return {\n        list: hints,\n        from: { line: cursor.line, ch: tokenStart },\n        to: { line: cursor.line, ch: token.end },\n    };\n}\nfunction filterAndSortList(list, text) {\n    if (!text) {\n        return filterNonEmpty(list, entry => !entry.isDeprecated);\n    }\n    const byProximity = list.map(entry => ({\n        proximity: getProximity(normalizeText(entry.text), text),\n        entry,\n    }));\n    const conciseMatches = filterNonEmpty(filterNonEmpty(byProximity, pair => pair.proximity <= 2), pair => !pair.entry.isDeprecated);\n    const sortedMatches = conciseMatches.sort((a, b) => (a.entry.isDeprecated ? 1 : 0) - (b.entry.isDeprecated ? 1 : 0) ||\n        a.proximity - b.proximity ||\n        a.entry.text.length - b.entry.text.length);\n    return sortedMatches.map(pair => pair.entry);\n}\nfunction filterNonEmpty(array, predicate) {\n    const filtered = array.filter(predicate);\n    return filtered.length === 0 ? array : filtered;\n}\nfunction normalizeText(text) {\n    return text.toLowerCase().replaceAll(/\\W/g, '');\n}\nfunction getProximity(suggestion, text) {\n    let proximity = lexicalDistance(text, suggestion);\n    if (suggestion.length > text.length) {\n        proximity -= suggestion.length - text.length - 1;\n        proximity += suggestion.indexOf(text) === 0 ? 0 : 0.5;\n    }\n    return proximity;\n}\nfunction lexicalDistance(a, b) {\n    let i;\n    let j;\n    const d = [];\n    const aLength = a.length;\n    const bLength = b.length;\n    for (i = 0; i <= aLength; i++) {\n        d[i] = [i];\n    }\n    for (j = 1; j <= bLength; j++) {\n        d[0][j] = j;\n    }\n    for (i = 1; i <= aLength; i++) {\n        for (j = 1; j <= bLength; j++) {\n            const cost = a[i - 1] === b[j - 1] ? 0 : 1;\n            d[i][j] = Math.min(d[i - 1][j] + 1, d[i][j - 1] + 1, d[i - 1][j - 1] + cost);\n            if (i > 1 && j > 1 && a[i - 1] === b[j - 2] && a[i - 2] === b[j - 1]) {\n                d[i][j] = Math.min(d[i][j], d[i - 2][j - 2] + cost);\n            }\n        }\n    }\n    return d[aLength][bLength];\n}\n//# sourceMappingURL=hintList.js.map","import CodeMirror from 'codemirror';\nimport { getNullableType, getNamedType, GraphQLEnumType, GraphQLInputObjectType, GraphQLList, GraphQLBoolean, } from 'graphql';\nimport forEachState from '../utils/forEachState';\nimport hintList from '../utils/hintList';\nCodeMirror.registerHelper('hint', 'graphql-variables', (editor, options) => {\n    const cur = editor.getCursor();\n    const token = editor.getTokenAt(cur);\n    const results = getVariablesHint(cur, token, options);\n    if ((results === null || results === void 0 ? void 0 : results.list) && results.list.length > 0) {\n        results.from = CodeMirror.Pos(results.from.line, results.from.ch);\n        results.to = CodeMirror.Pos(results.to.line, results.to.ch);\n        CodeMirror.signal(editor, 'hasCompletion', editor, results, token);\n    }\n    return results;\n});\nfunction getVariablesHint(cur, token, options) {\n    const state = token.state.kind === 'Invalid' ? token.state.prevState : token.state;\n    const { kind, step } = state;\n    if (kind === 'Document' && step === 0) {\n        return hintList(cur, token, [{ text: '{' }]);\n    }\n    const { variableToType } = options;\n    if (!variableToType) {\n        return;\n    }\n    const typeInfo = getTypeInfo(variableToType, token.state);\n    if (kind === 'Document' || (kind === 'Variable' && step === 0)) {\n        const variableNames = Object.keys(variableToType);\n        return hintList(cur, token, variableNames.map(name => ({\n            text: `\"${name}\": `,\n            type: variableToType[name],\n        })));\n    }\n    if ((kind === 'ObjectValue' || (kind === 'ObjectField' && step === 0)) &&\n        typeInfo.fields) {\n        const inputFields = Object.keys(typeInfo.fields).map(fieldName => typeInfo.fields[fieldName]);\n        return hintList(cur, token, inputFields.map(field => ({\n            text: `\"${field.name}\": `,\n            type: field.type,\n            description: field.description,\n        })));\n    }\n    if (kind === 'StringValue' ||\n        kind === 'NumberValue' ||\n        kind === 'BooleanValue' ||\n        kind === 'NullValue' ||\n        (kind === 'ListValue' && step === 1) ||\n        (kind === 'ObjectField' && step === 2) ||\n        (kind === 'Variable' && step === 2)) {\n        const namedInputType = typeInfo.type\n            ? getNamedType(typeInfo.type)\n            : undefined;\n        if (namedInputType instanceof GraphQLInputObjectType) {\n            return hintList(cur, token, [{ text: '{' }]);\n        }\n        if (namedInputType instanceof GraphQLEnumType) {\n            const values = namedInputType.getValues();\n            return hintList(cur, token, values.map(value => ({\n                text: `\"${value.name}\"`,\n                type: namedInputType,\n                description: value.description,\n            })));\n        }\n        if (namedInputType === GraphQLBoolean) {\n            return hintList(cur, token, [\n                { text: 'true', type: GraphQLBoolean, description: 'Not false.' },\n                { text: 'false', type: GraphQLBoolean, description: 'Not true.' },\n            ]);\n        }\n    }\n}\nfunction getTypeInfo(variableToType, tokenState) {\n    const info = {\n        type: null,\n        fields: null,\n    };\n    forEachState(tokenState, state => {\n        switch (state.kind) {\n            case 'Variable': {\n                info.type = variableToType[state.name];\n                break;\n            }\n            case 'ListValue': {\n                const nullableType = info.type ? getNullableType(info.type) : undefined;\n                info.type =\n                    nullableType instanceof GraphQLList ? nullableType.ofType : null;\n                break;\n            }\n            case 'ObjectValue': {\n                const objectType = info.type ? getNamedType(info.type) : undefined;\n                info.fields =\n                    objectType instanceof GraphQLInputObjectType\n                        ? objectType.getFields()\n                        : null;\n                break;\n            }\n            case 'ObjectField': {\n                const objectField = state.name && info.fields ? info.fields[state.name] : null;\n                info.type = objectField === null || objectField === void 0 ? void 0 : objectField.type;\n                break;\n            }\n        }\n    });\n    return info;\n}\n//# sourceMappingURL=hint.js.map"],"names":["forEachState","stack","fn","reverseStateStack","state","kind","push","prevState","i","length","hintList","cursor","token","list","hints","text","filterNonEmpty","entry","isDeprecated","map","proximity","getProximity","normalizeText","pair","sort","a","b","filterAndSortList","string","tokenStart","type","test","start","end","from","line","ch","to","array","predicate","filtered","filter","toLowerCase","replaceAll","suggestion","j","d","aLength","bLength","cost","Math","min","lexicalDistance","indexOf","editor","options","cur","getCursor","getTokenAt","results","step","variableToType","typeInfo","tokenState","info","fields","name","nullableType","undefined","ofType","objectType","getFields","objectField","getTypeInfo","Object","keys","fieldName","field","description","namedInputType","getValues","value","getVariablesHint"],"sourceRoot":""}